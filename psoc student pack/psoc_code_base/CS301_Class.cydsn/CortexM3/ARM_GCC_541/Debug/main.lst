ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.global	currentDirection
 107              		.align	2
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 3


 108              		.type	currentDirection, %object
 109              		.size	currentDirection, 4
 110              	currentDirection:
 111 0044 05000000 		.word	5
 112              		.global	previousDirection
 113              		.align	2
 114              		.type	previousDirection, %object
 115              		.size	previousDirection, 4
 116              	previousDirection:
 117 0048 06000000 		.word	6
 118              		.global	s1
 119              		.bss
 120              		.type	s1, %object
 121              		.size	s1, 1
 122              	s1:
 123 0012 00       		.space	1
 124              		.global	s2
 125              		.type	s2, %object
 126              		.size	s2, 1
 127              	s2:
 128 0013 00       		.space	1
 129              		.global	s3
 130              		.type	s3, %object
 131              		.size	s3, 1
 132              	s3:
 133 0014 00       		.space	1
 134              		.global	s4
 135              		.type	s4, %object
 136              		.size	s4, 1
 137              	s4:
 138 0015 00       		.space	1
 139              		.global	s5
 140              		.type	s5, %object
 141              		.size	s5, 1
 142              	s5:
 143 0016 00       		.space	1
 144              		.global	s6
 145              		.type	s6, %object
 146              		.size	s6, 1
 147              	s6:
 148 0017 00       		.space	1
 149              		.global	totalMilliseconds
 150              		.align	2
 151              		.type	totalMilliseconds, %object
 152              		.size	totalMilliseconds, 4
 153              	totalMilliseconds:
 154 0018 00000000 		.space	4
 155              		.global	totalDistance
 156              		.align	2
 157              		.type	totalDistance, %object
 158              		.size	totalDistance, 4
 159              	totalDistance:
 160 001c 00000000 		.space	4
 161              		.comm	buffer,69,4
 162              		.global	quadDec2Count
 163              		.align	2
 164              		.type	quadDec2Count, %object
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 4


 165              		.size	quadDec2Count, 4
 166              	quadDec2Count:
 167 0020 00000000 		.space	4
 168              		.global	timerInt
 169              		.align	2
 170              		.type	timerInt, %object
 171              		.size	timerInt, 4
 172              	timerInt:
 173 0024 00000000 		.space	4
 174              		.global	keepLedOn
 175              		.align	2
 176              		.type	keepLedOn, %object
 177              		.size	keepLedOn, 4
 178              	keepLedOn:
 179 0028 00000000 		.space	4
 180              		.global	__aeabi_ui2d
 181              		.global	__aeabi_i2d
 182              		.global	__aeabi_ddiv
 183              		.global	__aeabi_dmul
 184              		.global	__aeabi_dadd
 185              		.global	__aeabi_d2uiz
 186              		.section	.text.speedTimer,"ax",%progbits
 187              		.align	2
 188              		.global	speedTimer
 189              		.thumb
 190              		.thumb_func
 191              		.type	speedTimer, %function
 192              	speedTimer:
 193              	.LFB64:
 194              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <string.h>
  19:main.c        **** #include <stdlib.h>
  20:main.c        **** #include <project.h>
  21:main.c        **** //* ========================================
  22:main.c        **** #include "defines.h"
  23:main.c        **** #include "vars.h"
  24:main.c        **** //#include "pathfinding.h"
  25:main.c        **** #include "initialise.h"
  26:main.c        **** #include "movement.h"
  27:main.c        **** //#include "usbUART.h"
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 5


  28:main.c        **** //* ========================================
  29:main.c        **** // USBUART
  30:main.c        **** void usbPutString(char *s);
  31:main.c        **** void usbPutChar(char c);
  32:main.c        **** void handle_usb();
  33:main.c        **** //* ========================================
  34:main.c        **** int16 quadCountToRPM(uint16 count);
  35:main.c        **** //* ========================================
  36:main.c        **** // Sensors, Course correction and Movement Direction.
  37:main.c        **** void ResetSensorFlags();
  38:main.c        **** void SetRobotMovement();
  39:main.c        **** enum DirectionState CheckSensorDirection();
  40:main.c        **** enum DirectionState {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown
  41:main.c        **** enum DirectionState currentDirection = Stop;
  42:main.c        **** enum DirectionState previousDirection = Unknown;
  43:main.c        **** // ----------------------------------------
  44:main.c        **** uint8 s1 = 0; // black = 0, white = 1
  45:main.c        **** uint8 s2 = 0;
  46:main.c        **** uint8 s3 = 0;
  47:main.c        **** uint8 s4 = 0;
  48:main.c        **** uint8 s5 = 0;
  49:main.c        **** uint8 s6 = 0;
  50:main.c        **** //* ========================================
  51:main.c        **** // Calculating Distance
  52:main.c        **** #define WHEEL_DIAMETER_MM 65
  53:main.c        **** uint32 totalMilliseconds = 0;
  54:main.c        **** uint32 totalDistance = 0; // in mm
  55:main.c        **** //* ========================================
  56:main.c        **** char buffer[69];
  57:main.c        **** int quadDec2Count = 0;
  58:main.c        **** int timerInt = 0;
  59:main.c        **** int keepLedOn = 0;
  60:main.c        **** 
  61:main.c        **** 
  62:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  63:main.c        **** 
  64:main.c        **** CY_ISR (speedTimer) {
 195              		.loc 1 64 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 1, uses_anonymous_args = 0
 199 0000 B0B5     		push	{r4, r5, r7, lr}
 200              		.cfi_def_cfa_offset 16
 201              		.cfi_offset 4, -16
 202              		.cfi_offset 5, -12
 203              		.cfi_offset 7, -8
 204              		.cfi_offset 14, -4
 205 0002 00AF     		add	r7, sp, #0
 206              		.cfi_def_cfa_register 7
  65:main.c        ****     timerInt = 1;
 207              		.loc 1 65 0
 208 0004 2A4B     		ldr	r3, .L3+8
 209 0006 0122     		movs	r2, #1
 210 0008 1A60     		str	r2, [r3]
  66:main.c        ****     //quadDec_M1 used for turning macros
  67:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 211              		.loc 1 67 0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 6


 212 000a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 213 000e 0346     		mov	r3, r0
 214 0010 1A46     		mov	r2, r3
 215 0012 284B     		ldr	r3, .L3+12
 216 0014 1A60     		str	r2, [r3]
  68:main.c        ****     
  69:main.c        ****     if (currentDirection == Forward && quadDec2Count != 0) {
 217              		.loc 1 69 0
 218 0016 284B     		ldr	r3, .L3+16
 219 0018 1B68     		ldr	r3, [r3]
 220 001a 002B     		cmp	r3, #0
 221 001c 38D1     		bne	.L2
 222              		.loc 1 69 0 is_stmt 0 discriminator 1
 223 001e 254B     		ldr	r3, .L3+12
 224 0020 1B68     		ldr	r3, [r3]
 225 0022 002B     		cmp	r3, #0
 226 0024 34D0     		beq	.L2
  70:main.c        ****         totalDistance = totalDistance + (abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM;
 227              		.loc 1 70 0 is_stmt 1
 228 0026 254B     		ldr	r3, .L3+20
 229 0028 1B68     		ldr	r3, [r3]
 230 002a 1846     		mov	r0, r3
 231 002c FFF7FEFF 		bl	__aeabi_ui2d
 232 0030 0446     		mov	r4, r0
 233 0032 0D46     		mov	r5, r1
 234 0034 1F4B     		ldr	r3, .L3+12
 235 0036 1B68     		ldr	r3, [r3]
 236 0038 002B     		cmp	r3, #0
 237 003a B8BF     		it	lt
 238 003c 5B42     		rsblt	r3, r3, #0
 239 003e 1846     		mov	r0, r3
 240 0040 FFF7FEFF 		bl	__aeabi_i2d
 241 0044 4FF00002 		mov	r2, #0
 242 0048 1D4B     		ldr	r3, .L3+24
 243 004a FFF7FEFF 		bl	__aeabi_ddiv
 244 004e 0246     		mov	r2, r0
 245 0050 0B46     		mov	r3, r1
 246 0052 1046     		mov	r0, r2
 247 0054 1946     		mov	r1, r3
 248 0056 14A3     		adr	r3, .L3
 249 0058 D3E90023 		ldrd	r2, [r3]
 250 005c FFF7FEFF 		bl	__aeabi_dmul
 251 0060 0246     		mov	r2, r0
 252 0062 0B46     		mov	r3, r1
 253 0064 1046     		mov	r0, r2
 254 0066 1946     		mov	r1, r3
 255 0068 4FF00002 		mov	r2, #0
 256 006c 154B     		ldr	r3, .L3+28
 257 006e FFF7FEFF 		bl	__aeabi_dmul
 258 0072 0246     		mov	r2, r0
 259 0074 0B46     		mov	r3, r1
 260 0076 2046     		mov	r0, r4
 261 0078 2946     		mov	r1, r5
 262 007a FFF7FEFF 		bl	__aeabi_dadd
 263 007e 0346     		mov	r3, r0
 264 0080 0C46     		mov	r4, r1
 265 0082 1846     		mov	r0, r3
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 7


 266 0084 2146     		mov	r1, r4
 267 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 268 008a 0246     		mov	r2, r0
 269 008c 0B4B     		ldr	r3, .L3+20
 270 008e 1A60     		str	r2, [r3]
 271              	.L2:
  71:main.c        ****     }
  72:main.c        ****     
  73:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 272              		.loc 1 73 0
 273 0090 0020     		movs	r0, #0
 274 0092 FFF7FEFF 		bl	QuadDec_M2_SetCounter
  74:main.c        ****     QuadDec_M2_Start(); // restart counter
 275              		.loc 1 74 0
 276 0096 FFF7FEFF 		bl	QuadDec_M2_Start
  75:main.c        ****     
  76:main.c        **** 
  77:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 277              		.loc 1 77 0
 278 009a FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
  78:main.c        **** }
 279              		.loc 1 78 0
 280 009e 00BF     		nop
 281 00a0 B0BD     		pop	{r4, r5, r7, pc}
 282              	.L4:
 283 00a2 00BFAFF3 		.align	3
 283      0080
 284              	.L3:
 285 00a8 182D4454 		.word	1413754136
 286 00ac FB210940 		.word	1074340347
 287 00b0 00000000 		.word	timerInt
 288 00b4 00000000 		.word	quadDec2Count
 289 00b8 00000000 		.word	currentDirection
 290 00bc 00000000 		.word	totalDistance
 291 00c0 00804C40 		.word	1078755328
 292 00c4 00405040 		.word	1079001088
 293              		.cfi_endproc
 294              	.LFE64:
 295              		.size	speedTimer, .-speedTimer
 296              		.section	.text.S1_DETECTED,"ax",%progbits
 297              		.align	2
 298              		.global	S1_DETECTED
 299              		.thumb
 300              		.thumb_func
 301              		.type	S1_DETECTED, %function
 302              	S1_DETECTED:
 303              	.LFB65:
  79:main.c        **** 
  80:main.c        **** CY_ISR(S1_DETECTED) {
 304              		.loc 1 80 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 1, uses_anonymous_args = 0
 308 0000 80B5     		push	{r7, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 7, -8
 311              		.cfi_offset 14, -4
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 8


 312 0002 00AF     		add	r7, sp, #0
 313              		.cfi_def_cfa_register 7
  81:main.c        ****     // Sensor has detected WHITE
  82:main.c        ****     s1 = 1; // , Black = 0, White = 1
 314              		.loc 1 82 0
 315 0004 034B     		ldr	r3, .L6
 316 0006 0122     		movs	r2, #1
 317 0008 1A70     		strb	r2, [r3]
  83:main.c        ****     LED_Write(1u);
 318              		.loc 1 83 0
 319 000a 0120     		movs	r0, #1
 320 000c FFF7FEFF 		bl	LED_Write
  84:main.c        ****     //moveForward();
  85:main.c        **** }
 321              		.loc 1 85 0
 322 0010 00BF     		nop
 323 0012 80BD     		pop	{r7, pc}
 324              	.L7:
 325              		.align	2
 326              	.L6:
 327 0014 00000000 		.word	s1
 328              		.cfi_endproc
 329              	.LFE65:
 330              		.size	S1_DETECTED, .-S1_DETECTED
 331              		.section	.text.S2_DETECTED,"ax",%progbits
 332              		.align	2
 333              		.global	S2_DETECTED
 334              		.thumb
 335              		.thumb_func
 336              		.type	S2_DETECTED, %function
 337              	S2_DETECTED:
 338              	.LFB66:
  86:main.c        **** 
  87:main.c        **** CY_ISR(S2_DETECTED) {
 339              		.loc 1 87 0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 0
 342              		@ frame_needed = 1, uses_anonymous_args = 0
 343 0000 80B5     		push	{r7, lr}
 344              		.cfi_def_cfa_offset 8
 345              		.cfi_offset 7, -8
 346              		.cfi_offset 14, -4
 347 0002 00AF     		add	r7, sp, #0
 348              		.cfi_def_cfa_register 7
  88:main.c        ****     // Sensor has detected WHITE
  89:main.c        ****     s2 = 1; // , Black = 0, White = 1
 349              		.loc 1 89 0
 350 0004 034B     		ldr	r3, .L9
 351 0006 0122     		movs	r2, #1
 352 0008 1A70     		strb	r2, [r3]
  90:main.c        ****     LED_Write(1u);
 353              		.loc 1 90 0
 354 000a 0120     		movs	r0, #1
 355 000c FFF7FEFF 		bl	LED_Write
  91:main.c        ****     //moveForward();
  92:main.c        **** }
 356              		.loc 1 92 0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 9


 357 0010 00BF     		nop
 358 0012 80BD     		pop	{r7, pc}
 359              	.L10:
 360              		.align	2
 361              	.L9:
 362 0014 00000000 		.word	s2
 363              		.cfi_endproc
 364              	.LFE66:
 365              		.size	S2_DETECTED, .-S2_DETECTED
 366              		.section	.text.S3_DETECTED,"ax",%progbits
 367              		.align	2
 368              		.global	S3_DETECTED
 369              		.thumb
 370              		.thumb_func
 371              		.type	S3_DETECTED, %function
 372              	S3_DETECTED:
 373              	.LFB67:
  93:main.c        **** 
  94:main.c        **** CY_ISR(S3_DETECTED) {
 374              		.loc 1 94 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 1, uses_anonymous_args = 0
 378 0000 80B5     		push	{r7, lr}
 379              		.cfi_def_cfa_offset 8
 380              		.cfi_offset 7, -8
 381              		.cfi_offset 14, -4
 382 0002 00AF     		add	r7, sp, #0
 383              		.cfi_def_cfa_register 7
  95:main.c        ****     // Sensor has detected WHITE
  96:main.c        ****     s3 = 1; // , Black = 0, White = 1
 384              		.loc 1 96 0
 385 0004 034B     		ldr	r3, .L12
 386 0006 0122     		movs	r2, #1
 387 0008 1A70     		strb	r2, [r3]
  97:main.c        ****     LED_Write(1u);
 388              		.loc 1 97 0
 389 000a 0120     		movs	r0, #1
 390 000c FFF7FEFF 		bl	LED_Write
  98:main.c        **** }
 391              		.loc 1 98 0
 392 0010 00BF     		nop
 393 0012 80BD     		pop	{r7, pc}
 394              	.L13:
 395              		.align	2
 396              	.L12:
 397 0014 00000000 		.word	s3
 398              		.cfi_endproc
 399              	.LFE67:
 400              		.size	S3_DETECTED, .-S3_DETECTED
 401              		.section	.text.S4_DETECTED,"ax",%progbits
 402              		.align	2
 403              		.global	S4_DETECTED
 404              		.thumb
 405              		.thumb_func
 406              		.type	S4_DETECTED, %function
 407              	S4_DETECTED:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 10


 408              	.LFB68:
  99:main.c        **** 
 100:main.c        **** CY_ISR(S4_DETECTED) {
 409              		.loc 1 100 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 1, uses_anonymous_args = 0
 413 0000 80B5     		push	{r7, lr}
 414              		.cfi_def_cfa_offset 8
 415              		.cfi_offset 7, -8
 416              		.cfi_offset 14, -4
 417 0002 00AF     		add	r7, sp, #0
 418              		.cfi_def_cfa_register 7
 101:main.c        ****     // Sensor has detected WHITE
 102:main.c        ****     s4 = 1; // , Black = 0, White = 1
 419              		.loc 1 102 0
 420 0004 034B     		ldr	r3, .L15
 421 0006 0122     		movs	r2, #1
 422 0008 1A70     		strb	r2, [r3]
 103:main.c        ****     LED_Write(1u);
 423              		.loc 1 103 0
 424 000a 0120     		movs	r0, #1
 425 000c FFF7FEFF 		bl	LED_Write
 104:main.c        **** }
 426              		.loc 1 104 0
 427 0010 00BF     		nop
 428 0012 80BD     		pop	{r7, pc}
 429              	.L16:
 430              		.align	2
 431              	.L15:
 432 0014 00000000 		.word	s4
 433              		.cfi_endproc
 434              	.LFE68:
 435              		.size	S4_DETECTED, .-S4_DETECTED
 436              		.section	.text.S5_DETECTED,"ax",%progbits
 437              		.align	2
 438              		.global	S5_DETECTED
 439              		.thumb
 440              		.thumb_func
 441              		.type	S5_DETECTED, %function
 442              	S5_DETECTED:
 443              	.LFB69:
 105:main.c        **** 
 106:main.c        **** CY_ISR(S5_DETECTED) {
 444              		.loc 1 106 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 1, uses_anonymous_args = 0
 448 0000 80B5     		push	{r7, lr}
 449              		.cfi_def_cfa_offset 8
 450              		.cfi_offset 7, -8
 451              		.cfi_offset 14, -4
 452 0002 00AF     		add	r7, sp, #0
 453              		.cfi_def_cfa_register 7
 107:main.c        ****     // Sensor has detected WHITE
 108:main.c        ****     s5 = 1; // , Black = 0, White = 1
 454              		.loc 1 108 0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 11


 455 0004 034B     		ldr	r3, .L18
 456 0006 0122     		movs	r2, #1
 457 0008 1A70     		strb	r2, [r3]
 109:main.c        ****     LED_Write(1u);
 458              		.loc 1 109 0
 459 000a 0120     		movs	r0, #1
 460 000c FFF7FEFF 		bl	LED_Write
 110:main.c        **** }
 461              		.loc 1 110 0
 462 0010 00BF     		nop
 463 0012 80BD     		pop	{r7, pc}
 464              	.L19:
 465              		.align	2
 466              	.L18:
 467 0014 00000000 		.word	s5
 468              		.cfi_endproc
 469              	.LFE69:
 470              		.size	S5_DETECTED, .-S5_DETECTED
 471              		.section	.text.S6_DETECTED,"ax",%progbits
 472              		.align	2
 473              		.global	S6_DETECTED
 474              		.thumb
 475              		.thumb_func
 476              		.type	S6_DETECTED, %function
 477              	S6_DETECTED:
 478              	.LFB70:
 111:main.c        **** 
 112:main.c        **** CY_ISR(S6_DETECTED) {
 479              		.loc 1 112 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 1, uses_anonymous_args = 0
 483 0000 80B5     		push	{r7, lr}
 484              		.cfi_def_cfa_offset 8
 485              		.cfi_offset 7, -8
 486              		.cfi_offset 14, -4
 487 0002 00AF     		add	r7, sp, #0
 488              		.cfi_def_cfa_register 7
 113:main.c        ****     // Sensor has detected WHITE
 114:main.c        ****     s6 = 1; // , Black = 0, White = 1
 489              		.loc 1 114 0
 490 0004 034B     		ldr	r3, .L21
 491 0006 0122     		movs	r2, #1
 492 0008 1A70     		strb	r2, [r3]
 115:main.c        ****     LED_Write(1u);
 493              		.loc 1 115 0
 494 000a 0120     		movs	r0, #1
 495 000c FFF7FEFF 		bl	LED_Write
 116:main.c        **** }
 496              		.loc 1 116 0
 497 0010 00BF     		nop
 498 0012 80BD     		pop	{r7, pc}
 499              	.L22:
 500              		.align	2
 501              	.L21:
 502 0014 00000000 		.word	s6
 503              		.cfi_endproc
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 12


 504              	.LFE70:
 505              		.size	S6_DETECTED, .-S6_DETECTED
 506              		.section	.text.TIMER_FINISH,"ax",%progbits
 507              		.align	2
 508              		.global	TIMER_FINISH
 509              		.thumb
 510              		.thumb_func
 511              		.type	TIMER_FINISH, %function
 512              	TIMER_FINISH:
 513              	.LFB71:
 117:main.c        **** 
 118:main.c        **** CY_ISR(TIMER_FINISH) {
 514              		.loc 1 118 0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 1, uses_anonymous_args = 0
 518 0000 80B5     		push	{r7, lr}
 519              		.cfi_def_cfa_offset 8
 520              		.cfi_offset 7, -8
 521              		.cfi_offset 14, -4
 522 0002 00AF     		add	r7, sp, #0
 523              		.cfi_def_cfa_register 7
 119:main.c        ****     // Reset Sensor Flags for Next rising Eddge
 120:main.c        ****     // (s1 = 0, s2 = 0... etc.)
 121:main.c        ****     LED_Write(0u);
 524              		.loc 1 121 0
 525 0004 0020     		movs	r0, #0
 526 0006 FFF7FEFF 		bl	LED_Write
 122:main.c        ****     //SetRobotMovement();
 123:main.c        ****     moveForward();
 527              		.loc 1 123 0
 528 000a FFF7FEFF 		bl	moveForward
 124:main.c        ****     ResetSensorFlags();
 529              		.loc 1 124 0
 530 000e FFF7FEFF 		bl	ResetSensorFlags
 125:main.c        **** 
 126:main.c        ****     Timer_LED_ReadStatusRegister();
 531              		.loc 1 126 0
 532 0012 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 127:main.c        **** }
 533              		.loc 1 127 0
 534 0016 00BF     		nop
 535 0018 80BD     		pop	{r7, pc}
 536              		.cfi_endproc
 537              	.LFE71:
 538              		.size	TIMER_FINISH, .-TIMER_FINISH
 539 001a 00BF     		.section	.rodata
 540              		.align	2
 541              	.LC0:
 542 0000 496E6974 		.ascii	"Initialised UART\000"
 542      69616C69 
 542      73656420 
 542      55415254 
 542      00
 543 0011 000000   		.align	2
 544              	.LC1:
 545 0014 256C7500 		.ascii	"%lu\000"
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 13


 546              		.align	2
 547              	.LC2:
 548 0018 2000     		.ascii	" \000"
 549              		.section	.text.main,"ax",%progbits
 550              		.align	2
 551              		.global	main
 552              		.thumb
 553              		.thumb_func
 554              		.type	main, %function
 555              	main:
 556              	.LFB72:
 128:main.c        **** 
 129:main.c        **** 
 130:main.c        **** int main()
 131:main.c        **** {
 557              		.loc 1 131 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 1, uses_anonymous_args = 0
 561 0000 80B5     		push	{r7, lr}
 562              		.cfi_def_cfa_offset 8
 563              		.cfi_offset 7, -8
 564              		.cfi_offset 14, -4
 565 0002 00AF     		add	r7, sp, #0
 566              		.cfi_def_cfa_register 7
 132:main.c        **** // --------------------------------    
 133:main.c        **** // ----- INITIALIZATIONS ----------
 134:main.c        ****     CYGlobalIntEnable;
 567              		.loc 1 134 0
 568              		.syntax unified
 569              	@ 134 "main.c" 1
 570 0004 62B6     		CPSIE   i
 571              	@ 0 "" 2
 135:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 572              		.loc 1 135 0
 573              		.thumb
 574              		.syntax unified
 575 0006 FFF7FEFF 		bl	init
 136:main.c        ****     //findPath(map, "");// find shortest path- store this in map
 137:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 576              		.loc 1 137 0
 577 000a 2548     		ldr	r0, .L28
 578 000c FFF7FEFF 		bl	isr_speed_StartEx
 138:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 579              		.loc 1 138 0
 580 0010 2448     		ldr	r0, .L28+4
 581 0012 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 139:main.c        ****     S1_detected_StartEx(S1_DETECTED);
 582              		.loc 1 139 0
 583 0016 2448     		ldr	r0, .L28+8
 584 0018 FFF7FEFF 		bl	S1_detected_StartEx
 140:main.c        ****     S2_detected_StartEx(S2_DETECTED);
 585              		.loc 1 140 0
 586 001c 2348     		ldr	r0, .L28+12
 587 001e FFF7FEFF 		bl	S2_detected_StartEx
 141:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 588              		.loc 1 141 0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 14


 589 0022 2348     		ldr	r0, .L28+16
 590 0024 FFF7FEFF 		bl	S3_detected_StartEx
 142:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 591              		.loc 1 142 0
 592 0028 2248     		ldr	r0, .L28+20
 593 002a FFF7FEFF 		bl	S4_detected_StartEx
 143:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 594              		.loc 1 143 0
 595 002e 2248     		ldr	r0, .L28+24
 596 0030 FFF7FEFF 		bl	S5_detected_StartEx
 144:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 597              		.loc 1 144 0
 598 0034 2148     		ldr	r0, .L28+28
 599 0036 FFF7FEFF 		bl	S6_detected_StartEx
 145:main.c        ****     Timer_LED_Start();
 600              		.loc 1 145 0
 601 003a FFF7FEFF 		bl	Timer_LED_Start
 146:main.c        ****     stopMoving();
 602              		.loc 1 146 0
 603 003e FFF7FEFF 		bl	stopMoving
 147:main.c        **** 
 148:main.c        **** // ------USB SETUP ----------------    
 149:main.c        **** #ifdef USE_USB    
 150:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 604              		.loc 1 150 0
 605 0042 0121     		movs	r1, #1
 606 0044 0020     		movs	r0, #0
 607 0046 FFF7FEFF 		bl	USBUART_Start
 151:main.c        **** #endif        
 152:main.c        ****     RF_BT_SELECT_Write(0);
 608              		.loc 1 152 0
 609 004a 0020     		movs	r0, #0
 610 004c FFF7FEFF 		bl	RF_BT_SELECT_Write
 153:main.c        ****     
 154:main.c        ****     usbPutString("Initialised UART");
 611              		.loc 1 154 0
 612 0050 1B48     		ldr	r0, .L28+32
 613 0052 FFF7FEFF 		bl	usbPutString
 614              	.L27:
 155:main.c        ****     for(;;)
 156:main.c        ****     {
 157:main.c        ****         //traverseMap(map);
 158:main.c        ****         //rotationAntiClockwise();
 159:main.c        ****         //rotationClockwise();
 160:main.c        ****         
 161:main.c        ****         
 162:main.c        ****         
 163:main.c        ****         if(timerInt == 1) {
 615              		.loc 1 163 0
 616 0056 1B4B     		ldr	r3, .L28+36
 617 0058 1B68     		ldr	r3, [r3]
 618 005a 012B     		cmp	r3, #1
 619 005c 15D1     		bne	.L25
 164:main.c        ****             timerInt = 0;
 620              		.loc 1 164 0
 621 005e 194B     		ldr	r3, .L28+36
 622 0060 0022     		movs	r2, #0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 15


 623 0062 1A60     		str	r2, [r3]
 165:main.c        ****             // calculate RPM of M2
 166:main.c        ****             quadCountToRPM(quadDec2Count);
 624              		.loc 1 166 0
 625 0064 184B     		ldr	r3, .L28+40
 626 0066 1B68     		ldr	r3, [r3]
 627 0068 9BB2     		uxth	r3, r3
 628 006a 1846     		mov	r0, r3
 629 006c FFF7FEFF 		bl	quadCountToRPM
 167:main.c        ****             sprintf(buffer, "%lu", totalDistance);
 630              		.loc 1 167 0
 631 0070 164B     		ldr	r3, .L28+44
 632 0072 1B68     		ldr	r3, [r3]
 633 0074 1A46     		mov	r2, r3
 634 0076 1649     		ldr	r1, .L28+48
 635 0078 1648     		ldr	r0, .L28+52
 636 007a FFF7FEFF 		bl	sprintf
 168:main.c        ****             usbPutString(buffer);
 637              		.loc 1 168 0
 638 007e 1548     		ldr	r0, .L28+52
 639 0080 FFF7FEFF 		bl	usbPutString
 169:main.c        ****             usbPutString(" ");
 640              		.loc 1 169 0
 641 0084 1448     		ldr	r0, .L28+56
 642 0086 FFF7FEFF 		bl	usbPutString
 643              	.L25:
 170:main.c        ****         }
 171:main.c        ****         handle_usb();
 644              		.loc 1 171 0
 645 008a FFF7FEFF 		bl	handle_usb
 172:main.c        ****         if (flag_KB_string == 1)
 646              		.loc 1 172 0
 647 008e 134B     		ldr	r3, .L28+60
 648 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 649 0092 012B     		cmp	r3, #1
 650 0094 DFD1     		bne	.L27
 173:main.c        ****         {
 174:main.c        ****             //usbPutString("Total Distance: ");
 175:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 176:main.c        ****             //usbPutString(buffer);
 177:main.c        ****             flag_KB_string = 0;
 651              		.loc 1 177 0
 652 0096 114B     		ldr	r3, .L28+60
 653 0098 0022     		movs	r2, #0
 654 009a 1A70     		strb	r2, [r3]
 178:main.c        ****         }           
 179:main.c        ****     }
 655              		.loc 1 179 0
 656 009c DBE7     		b	.L27
 657              	.L29:
 658 009e 00BF     		.align	2
 659              	.L28:
 660 00a0 00000000 		.word	speedTimer
 661 00a4 00000000 		.word	TIMER_FINISH
 662 00a8 00000000 		.word	S1_DETECTED
 663 00ac 00000000 		.word	S2_DETECTED
 664 00b0 00000000 		.word	S3_DETECTED
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 16


 665 00b4 00000000 		.word	S4_DETECTED
 666 00b8 00000000 		.word	S5_DETECTED
 667 00bc 00000000 		.word	S6_DETECTED
 668 00c0 00000000 		.word	.LC0
 669 00c4 00000000 		.word	timerInt
 670 00c8 00000000 		.word	quadDec2Count
 671 00cc 00000000 		.word	totalDistance
 672 00d0 14000000 		.word	.LC1
 673 00d4 00000000 		.word	buffer
 674 00d8 18000000 		.word	.LC2
 675 00dc 00000000 		.word	flag_KB_string
 676              		.cfi_endproc
 677              	.LFE72:
 678              		.size	main, .-main
 679              		.global	__aeabi_d2f
 680              		.global	__aeabi_fmul
 681              		.global	__aeabi_f2iz
 682              		.section	.rodata
 683 001a 0000     		.align	2
 684              	.LC3:
 685 001c 256400   		.ascii	"%d\000"
 686              		.section	.text.quadCountToRPM,"ax",%progbits
 687              		.align	2
 688              		.global	quadCountToRPM
 689              		.thumb
 690              		.thumb_func
 691              		.type	quadCountToRPM, %function
 692              	quadCountToRPM:
 693              	.LFB73:
 180:main.c        ****     return 0;
 181:main.c        **** }
 182:main.c        **** 
 183:main.c        **** // Calculations
 184:main.c        **** //* ========================================
 185:main.c        **** int16 quadCountToRPM(uint16 count)
 186:main.c        **** {
 694              		.loc 1 186 0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 16
 697              		@ frame_needed = 1, uses_anonymous_args = 0
 698 0000 90B5     		push	{r4, r7, lr}
 699              		.cfi_def_cfa_offset 12
 700              		.cfi_offset 4, -12
 701              		.cfi_offset 7, -8
 702              		.cfi_offset 14, -4
 703 0002 85B0     		sub	sp, sp, #20
 704              		.cfi_def_cfa_offset 32
 705 0004 00AF     		add	r7, sp, #0
 706              		.cfi_def_cfa_register 7
 707 0006 0346     		mov	r3, r0
 708 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 187:main.c        ****     float cps = count/57.00;
 709              		.loc 1 187 0
 710 000a FB88     		ldrh	r3, [r7, #6]
 711 000c 1846     		mov	r0, r3
 712 000e FFF7FEFF 		bl	__aeabi_i2d
 713 0012 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 17


 714 0016 114B     		ldr	r3, .L32
 715 0018 FFF7FEFF 		bl	__aeabi_ddiv
 716 001c 0346     		mov	r3, r0
 717 001e 0C46     		mov	r4, r1
 718 0020 1846     		mov	r0, r3
 719 0022 2146     		mov	r1, r4
 720 0024 FFF7FEFF 		bl	__aeabi_d2f
 721 0028 0346     		mov	r3, r0
 722 002a FB60     		str	r3, [r7, #12]	@ float
 188:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 723              		.loc 1 188 0
 724 002c 0C49     		ldr	r1, .L32+4
 725 002e F868     		ldr	r0, [r7, #12]	@ float
 726 0030 FFF7FEFF 		bl	__aeabi_fmul
 727 0034 0346     		mov	r3, r0
 728 0036 1846     		mov	r0, r3
 729 0038 FFF7FEFF 		bl	__aeabi_f2iz
 730 003c 0346     		mov	r3, r0
 731 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 189:main.c        ****     sprintf(buffer, "%d", rpm); // store in buffer
 732              		.loc 1 189 0
 733 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 734 0044 1A46     		mov	r2, r3
 735 0046 0749     		ldr	r1, .L32+8
 736 0048 0748     		ldr	r0, .L32+12
 737 004a FFF7FEFF 		bl	sprintf
 190:main.c        ****     return rpm;
 738              		.loc 1 190 0
 739 004e B7F90A30 		ldrsh	r3, [r7, #10]
 191:main.c        ****     //usbPutString(buffer);
 192:main.c        ****     //usbPutString("rpm ");
 193:main.c        **** }
 740              		.loc 1 193 0
 741 0052 1846     		mov	r0, r3
 742 0054 1437     		adds	r7, r7, #20
 743              		.cfi_def_cfa_offset 12
 744 0056 BD46     		mov	sp, r7
 745              		.cfi_def_cfa_register 13
 746              		@ sp needed
 747 0058 90BD     		pop	{r4, r7, pc}
 748              	.L33:
 749 005a 00BF     		.align	2
 750              	.L32:
 751 005c 00804C40 		.word	1078755328
 752 0060 00007041 		.word	1097859072
 753 0064 1C000000 		.word	.LC3
 754 0068 00000000 		.word	buffer
 755              		.cfi_endproc
 756              	.LFE73:
 757              		.size	quadCountToRPM, .-quadCountToRPM
 758              		.section	.text.ResetSensorFlags,"ax",%progbits
 759              		.align	2
 760              		.global	ResetSensorFlags
 761              		.thumb
 762              		.thumb_func
 763              		.type	ResetSensorFlags, %function
 764              	ResetSensorFlags:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 18


 765              	.LFB74:
 194:main.c        **** 
 195:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 196:main.c        **** void ResetSensorFlags() {
 766              		.loc 1 196 0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 1, uses_anonymous_args = 0
 770              		@ link register save eliminated.
 771 0000 80B4     		push	{r7}
 772              		.cfi_def_cfa_offset 4
 773              		.cfi_offset 7, -4
 774 0002 00AF     		add	r7, sp, #0
 775              		.cfi_def_cfa_register 7
 197:main.c        ****     s1 = 0;
 776              		.loc 1 197 0
 777 0004 0A4B     		ldr	r3, .L35
 778 0006 0022     		movs	r2, #0
 779 0008 1A70     		strb	r2, [r3]
 198:main.c        ****     s2 = 0;
 780              		.loc 1 198 0
 781 000a 0A4B     		ldr	r3, .L35+4
 782 000c 0022     		movs	r2, #0
 783 000e 1A70     		strb	r2, [r3]
 199:main.c        ****     s3 = 0;
 784              		.loc 1 199 0
 785 0010 094B     		ldr	r3, .L35+8
 786 0012 0022     		movs	r2, #0
 787 0014 1A70     		strb	r2, [r3]
 200:main.c        ****     s4 = 0;
 788              		.loc 1 200 0
 789 0016 094B     		ldr	r3, .L35+12
 790 0018 0022     		movs	r2, #0
 791 001a 1A70     		strb	r2, [r3]
 201:main.c        ****     s5 = 0;
 792              		.loc 1 201 0
 793 001c 084B     		ldr	r3, .L35+16
 794 001e 0022     		movs	r2, #0
 795 0020 1A70     		strb	r2, [r3]
 202:main.c        ****     s6 = 0;
 796              		.loc 1 202 0
 797 0022 084B     		ldr	r3, .L35+20
 798 0024 0022     		movs	r2, #0
 799 0026 1A70     		strb	r2, [r3]
 203:main.c        **** }
 800              		.loc 1 203 0
 801 0028 00BF     		nop
 802 002a BD46     		mov	sp, r7
 803              		.cfi_def_cfa_register 13
 804              		@ sp needed
 805 002c 80BC     		pop	{r7}
 806              		.cfi_restore 7
 807              		.cfi_def_cfa_offset 0
 808 002e 7047     		bx	lr
 809              	.L36:
 810              		.align	2
 811              	.L35:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 19


 812 0030 00000000 		.word	s1
 813 0034 00000000 		.word	s2
 814 0038 00000000 		.word	s3
 815 003c 00000000 		.word	s4
 816 0040 00000000 		.word	s5
 817 0044 00000000 		.word	s6
 818              		.cfi_endproc
 819              	.LFE74:
 820              		.size	ResetSensorFlags, .-ResetSensorFlags
 821              		.section	.text.CheckSensorDirection,"ax",%progbits
 822              		.align	2
 823              		.global	CheckSensorDirection
 824              		.thumb
 825              		.thumb_func
 826              		.type	CheckSensorDirection, %function
 827              	CheckSensorDirection:
 828              	.LFB75:
 204:main.c        **** 
 205:main.c        **** // This function checks the sensor flags s1-s6 through a boolean truth table and
 206:main.c        **** // returns a enum direction state depending on the flag configuration
 207:main.c        **** // if no conditons are met, it returns Unknown -- need to fix this edge case
 208:main.c        **** // s1 = 0 -- Black
 209:main.c        **** // s1 = 1 -- White
 210:main.c        **** enum DirectionState CheckSensorDirection() {
 829              		.loc 1 210 0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 8
 832              		@ frame_needed = 1, uses_anonymous_args = 0
 833              		@ link register save eliminated.
 834 0000 80B4     		push	{r7}
 835              		.cfi_def_cfa_offset 4
 836              		.cfi_offset 7, -4
 837 0002 83B0     		sub	sp, sp, #12
 838              		.cfi_def_cfa_offset 16
 839 0004 00AF     		add	r7, sp, #0
 840              		.cfi_def_cfa_register 7
 211:main.c        ****     enum DirectionState directionState = Stop;
 841              		.loc 1 211 0
 842 0006 0523     		movs	r3, #5
 843 0008 7B60     		str	r3, [r7, #4]
 212:main.c        ****     previousDirection = currentDirection;
 844              		.loc 1 212 0
 845 000a 5B4B     		ldr	r3, .L48
 846 000c 1B68     		ldr	r3, [r3]
 847 000e 5B4A     		ldr	r2, .L48+4
 848 0010 1360     		str	r3, [r2]
 213:main.c        ****     
 214:main.c        ****     //forward if all sensors are on white
 215:main.c        ****     if (s1 && s2) {
 849              		.loc 1 215 0
 850 0012 5B4B     		ldr	r3, .L48+8
 851 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 852 0016 002B     		cmp	r3, #0
 853 0018 07D0     		beq	.L38
 854              		.loc 1 215 0 is_stmt 0 discriminator 1
 855 001a 5A4B     		ldr	r3, .L48+12
 856 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 20


 857 001e 002B     		cmp	r3, #0
 858 0020 03D0     		beq	.L38
 216:main.c        ****         directionState = Forward;
 859              		.loc 1 216 0 is_stmt 1
 860 0022 0023     		movs	r3, #0
 861 0024 7B60     		str	r3, [r7, #4]
 217:main.c        ****         return directionState;   
 862              		.loc 1 217 0
 863 0026 7B68     		ldr	r3, [r7, #4]
 864 0028 A1E0     		b	.L39
 865              	.L38:
 218:main.c        ****     }
 219:main.c        ****     
 220:main.c        ****     /* COURSE CORRECTION COURSE CORRECTION COURSE CORRETION */
 221:main.c        ****     // Only need to course corrcet when direction state is forward
 222:main.c        ****     
 223:main.c        ****     if (previousDirection == Forward || previousDirection == AdjustToTheLeft || previousDirection =
 866              		.loc 1 223 0
 867 002a 544B     		ldr	r3, .L48+4
 868 002c 1B68     		ldr	r3, [r3]
 869 002e 002B     		cmp	r3, #0
 870 0030 07D0     		beq	.L40
 871              		.loc 1 223 0 is_stmt 0 discriminator 1
 872 0032 524B     		ldr	r3, .L48+4
 873 0034 1B68     		ldr	r3, [r3]
 874 0036 032B     		cmp	r3, #3
 875 0038 03D0     		beq	.L40
 876              		.loc 1 223 0 discriminator 2
 877 003a 504B     		ldr	r3, .L48+4
 878 003c 1B68     		ldr	r3, [r3]
 879 003e 042B     		cmp	r3, #4
 880 0040 37D1     		bne	.L41
 881              	.L40:
 224:main.c        ****         // If robot is deviating to the left where top right sensor and bottom left sensor is on bl
 225:main.c        ****         // we turn right until all sensors are on white again
 226:main.c        ****         if (!s1 && s2 && s3 && s4 && s5 && !s6) {
 882              		.loc 1 226 0 is_stmt 1
 883 0042 4F4B     		ldr	r3, .L48+8
 884 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 885 0046 002B     		cmp	r3, #0
 886 0048 17D1     		bne	.L42
 887              		.loc 1 226 0 is_stmt 0 discriminator 1
 888 004a 4E4B     		ldr	r3, .L48+12
 889 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 890 004e 002B     		cmp	r3, #0
 891 0050 13D0     		beq	.L42
 892              		.loc 1 226 0 discriminator 2
 893 0052 4D4B     		ldr	r3, .L48+16
 894 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 895 0056 002B     		cmp	r3, #0
 896 0058 0FD0     		beq	.L42
 897              		.loc 1 226 0 discriminator 3
 898 005a 4C4B     		ldr	r3, .L48+20
 899 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 900 005e 002B     		cmp	r3, #0
 901 0060 0BD0     		beq	.L42
 902              		.loc 1 226 0 discriminator 4
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 21


 903 0062 4B4B     		ldr	r3, .L48+24
 904 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 905 0066 002B     		cmp	r3, #0
 906 0068 07D0     		beq	.L42
 907              		.loc 1 226 0 discriminator 5
 908 006a 4A4B     		ldr	r3, .L48+28
 909 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 910 006e 002B     		cmp	r3, #0
 911 0070 03D1     		bne	.L42
 227:main.c        ****             directionState = AdjustToTheRight;
 912              		.loc 1 227 0 is_stmt 1
 913 0072 0423     		movs	r3, #4
 914 0074 7B60     		str	r3, [r7, #4]
 228:main.c        ****             return directionState;
 915              		.loc 1 228 0
 916 0076 7B68     		ldr	r3, [r7, #4]
 917 0078 79E0     		b	.L39
 918              	.L42:
 229:main.c        ****         }
 230:main.c        ****         
 231:main.c        ****         // If robot is deviating to the right where top left sensor and bottom right sensor is on b
 232:main.c        ****         // we turn left until all sensors are on white again
 233:main.c        ****         if (s1 && !s2 && s3 && s4 && !s5 && s6) {
 919              		.loc 1 233 0
 920 007a 414B     		ldr	r3, .L48+8
 921 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 922 007e 002B     		cmp	r3, #0
 923 0080 17D0     		beq	.L41
 924              		.loc 1 233 0 is_stmt 0 discriminator 1
 925 0082 404B     		ldr	r3, .L48+12
 926 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 927 0086 002B     		cmp	r3, #0
 928 0088 13D1     		bne	.L41
 929              		.loc 1 233 0 discriminator 2
 930 008a 3F4B     		ldr	r3, .L48+16
 931 008c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 932 008e 002B     		cmp	r3, #0
 933 0090 0FD0     		beq	.L41
 934              		.loc 1 233 0 discriminator 3
 935 0092 3E4B     		ldr	r3, .L48+20
 936 0094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 937 0096 002B     		cmp	r3, #0
 938 0098 0BD0     		beq	.L41
 939              		.loc 1 233 0 discriminator 4
 940 009a 3D4B     		ldr	r3, .L48+24
 941 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 942 009e 002B     		cmp	r3, #0
 943 00a0 07D1     		bne	.L41
 944              		.loc 1 233 0 discriminator 5
 945 00a2 3C4B     		ldr	r3, .L48+28
 946 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 947 00a6 002B     		cmp	r3, #0
 948 00a8 03D0     		beq	.L41
 234:main.c        ****             directionState = AdjustToTheLeft;
 949              		.loc 1 234 0 is_stmt 1
 950 00aa 0323     		movs	r3, #3
 951 00ac 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 22


 235:main.c        ****             return directionState;
 952              		.loc 1 235 0
 953 00ae 7B68     		ldr	r3, [r7, #4]
 954 00b0 5DE0     		b	.L39
 955              	.L41:
 236:main.c        ****         }
 237:main.c        ****     }
 238:main.c        ****     /* COURSE CORRECTION COURSE CORRECTION COURSE CORRETION */
 239:main.c        ****     
 240:main.c        ****     // Left sensor is on black and right sensor is on white
 241:main.c        ****     
 242:main.c        ****     //turn left
 243:main.c        ****     if (s1 && s2 && !s3 && s4 && s5 && s6) {
 956              		.loc 1 243 0
 957 00b2 334B     		ldr	r3, .L48+8
 958 00b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 959 00b6 002B     		cmp	r3, #0
 960 00b8 17D0     		beq	.L43
 961              		.loc 1 243 0 is_stmt 0 discriminator 1
 962 00ba 324B     		ldr	r3, .L48+12
 963 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 964 00be 002B     		cmp	r3, #0
 965 00c0 13D0     		beq	.L43
 966              		.loc 1 243 0 discriminator 2
 967 00c2 314B     		ldr	r3, .L48+16
 968 00c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 969 00c6 002B     		cmp	r3, #0
 970 00c8 0FD1     		bne	.L43
 971              		.loc 1 243 0 discriminator 3
 972 00ca 304B     		ldr	r3, .L48+20
 973 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 974 00ce 002B     		cmp	r3, #0
 975 00d0 0BD0     		beq	.L43
 976              		.loc 1 243 0 discriminator 4
 977 00d2 2F4B     		ldr	r3, .L48+24
 978 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 979 00d6 002B     		cmp	r3, #0
 980 00d8 07D0     		beq	.L43
 981              		.loc 1 243 0 discriminator 5
 982 00da 2E4B     		ldr	r3, .L48+28
 983 00dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 984 00de 002B     		cmp	r3, #0
 985 00e0 03D0     		beq	.L43
 244:main.c        ****         directionState = TurnLeft;
 986              		.loc 1 244 0 is_stmt 1
 987 00e2 0223     		movs	r3, #2
 988 00e4 7B60     		str	r3, [r7, #4]
 245:main.c        ****         return directionState;
 989              		.loc 1 245 0
 990 00e6 7B68     		ldr	r3, [r7, #4]
 991 00e8 41E0     		b	.L39
 992              	.L43:
 246:main.c        ****     }
 247:main.c        ****     
 248:main.c        ****     // Right sensor is on white and right sensor is on black
 249:main.c        ****     // everything else is on white
 250:main.c        ****     //turn right
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 23


 251:main.c        ****     if (s1 && s2 && s3 && !s4 && s5 && s6) {
 993              		.loc 1 251 0
 994 00ea 254B     		ldr	r3, .L48+8
 995 00ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 996 00ee 002B     		cmp	r3, #0
 997 00f0 17D0     		beq	.L44
 998              		.loc 1 251 0 is_stmt 0 discriminator 1
 999 00f2 244B     		ldr	r3, .L48+12
 1000 00f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1001 00f6 002B     		cmp	r3, #0
 1002 00f8 13D0     		beq	.L44
 1003              		.loc 1 251 0 discriminator 2
 1004 00fa 234B     		ldr	r3, .L48+16
 1005 00fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1006 00fe 002B     		cmp	r3, #0
 1007 0100 0FD0     		beq	.L44
 1008              		.loc 1 251 0 discriminator 3
 1009 0102 224B     		ldr	r3, .L48+20
 1010 0104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1011 0106 002B     		cmp	r3, #0
 1012 0108 0BD1     		bne	.L44
 1013              		.loc 1 251 0 discriminator 4
 1014 010a 214B     		ldr	r3, .L48+24
 1015 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1016 010e 002B     		cmp	r3, #0
 1017 0110 07D0     		beq	.L44
 1018              		.loc 1 251 0 discriminator 5
 1019 0112 204B     		ldr	r3, .L48+28
 1020 0114 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1021 0116 002B     		cmp	r3, #0
 1022 0118 03D0     		beq	.L44
 252:main.c        ****         directionState = TurnRight;
 1023              		.loc 1 252 0 is_stmt 1
 1024 011a 0123     		movs	r3, #1
 1025 011c 7B60     		str	r3, [r7, #4]
 253:main.c        ****         return directionState;
 1026              		.loc 1 253 0
 1027 011e 7B68     		ldr	r3, [r7, #4]
 1028 0120 25E0     		b	.L39
 1029              	.L44:
 254:main.c        ****     }
 255:main.c        ****     
 256:main.c        ****     // if all sensors are on black -- we are currently in darkness so don't move
 257:main.c        ****     if (!(s1 && s2 && s3 && s4&& s5 && s6)) {
 1030              		.loc 1 257 0
 1031 0122 174B     		ldr	r3, .L48+8
 1032 0124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1033 0126 002B     		cmp	r3, #0
 1034 0128 13D0     		beq	.L45
 1035              		.loc 1 257 0 is_stmt 0 discriminator 1
 1036 012a 164B     		ldr	r3, .L48+12
 1037 012c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1038 012e 002B     		cmp	r3, #0
 1039 0130 0FD0     		beq	.L45
 1040              		.loc 1 257 0 discriminator 2
 1041 0132 154B     		ldr	r3, .L48+16
 1042 0134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 24


 1043 0136 002B     		cmp	r3, #0
 1044 0138 0BD0     		beq	.L45
 1045              		.loc 1 257 0 discriminator 3
 1046 013a 144B     		ldr	r3, .L48+20
 1047 013c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1048 013e 002B     		cmp	r3, #0
 1049 0140 07D0     		beq	.L45
 1050              		.loc 1 257 0 discriminator 4
 1051 0142 134B     		ldr	r3, .L48+24
 1052 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1053 0146 002B     		cmp	r3, #0
 1054 0148 03D0     		beq	.L45
 1055              		.loc 1 257 0 discriminator 5
 1056 014a 124B     		ldr	r3, .L48+28
 1057 014c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1058 014e 002B     		cmp	r3, #0
 1059 0150 03D1     		bne	.L46
 1060              	.L45:
 258:main.c        ****         directionState = Stop;
 1061              		.loc 1 258 0 is_stmt 1
 1062 0152 0523     		movs	r3, #5
 1063 0154 7B60     		str	r3, [r7, #4]
 259:main.c        ****         return directionState;
 1064              		.loc 1 259 0
 1065 0156 7B68     		ldr	r3, [r7, #4]
 1066 0158 09E0     		b	.L39
 1067              	.L46:
 260:main.c        ****     }
 261:main.c        ****     
 262:main.c        ****     // If the code gets up to this point then no conditions have been met
 263:main.c        ****     // The sensors are in a configuration that has not been covered
 264:main.c        ****     // The currentDirection to turn into is unknown.
 265:main.c        ****     
 266:main.c        ****     // if currentDirection is Unknown, we continue with the previous direction
 267:main.c        ****     // However, if the previous direction is also Unknown, we will just move forward.
 268:main.c        ****     if (previousDirection == Unknown) {
 1068              		.loc 1 268 0
 1069 015a 084B     		ldr	r3, .L48+4
 1070 015c 1B68     		ldr	r3, [r3]
 1071 015e 062B     		cmp	r3, #6
 1072 0160 03D1     		bne	.L47
 269:main.c        ****         directionState = Forward;
 1073              		.loc 1 269 0
 1074 0162 0023     		movs	r3, #0
 1075 0164 7B60     		str	r3, [r7, #4]
 270:main.c        ****         return directionState;
 1076              		.loc 1 270 0
 1077 0166 7B68     		ldr	r3, [r7, #4]
 1078 0168 01E0     		b	.L39
 1079              	.L47:
 271:main.c        ****     }
 272:main.c        ****             
 273:main.c        ****     return previousDirection;
 1080              		.loc 1 273 0
 1081 016a 044B     		ldr	r3, .L48+4
 1082 016c 1B68     		ldr	r3, [r3]
 1083              	.L39:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 25


 274:main.c        **** }
 1084              		.loc 1 274 0
 1085 016e 1846     		mov	r0, r3
 1086 0170 0C37     		adds	r7, r7, #12
 1087              		.cfi_def_cfa_offset 4
 1088 0172 BD46     		mov	sp, r7
 1089              		.cfi_def_cfa_register 13
 1090              		@ sp needed
 1091 0174 80BC     		pop	{r7}
 1092              		.cfi_restore 7
 1093              		.cfi_def_cfa_offset 0
 1094 0176 7047     		bx	lr
 1095              	.L49:
 1096              		.align	2
 1097              	.L48:
 1098 0178 00000000 		.word	currentDirection
 1099 017c 00000000 		.word	previousDirection
 1100 0180 00000000 		.word	s1
 1101 0184 00000000 		.word	s2
 1102 0188 00000000 		.word	s3
 1103 018c 00000000 		.word	s4
 1104 0190 00000000 		.word	s5
 1105 0194 00000000 		.word	s6
 1106              		.cfi_endproc
 1107              	.LFE75:
 1108              		.size	CheckSensorDirection, .-CheckSensorDirection
 1109              		.section	.text.SetRobotMovement,"ax",%progbits
 1110              		.align	2
 1111              		.global	SetRobotMovement
 1112              		.thumb
 1113              		.thumb_func
 1114              		.type	SetRobotMovement, %function
 1115              	SetRobotMovement:
 1116              	.LFB76:
 275:main.c        **** 
 276:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 277:main.c        **** void SetRobotMovement() {
 1117              		.loc 1 277 0
 1118              		.cfi_startproc
 1119              		@ args = 0, pretend = 0, frame = 0
 1120              		@ frame_needed = 1, uses_anonymous_args = 0
 1121 0000 80B5     		push	{r7, lr}
 1122              		.cfi_def_cfa_offset 8
 1123              		.cfi_offset 7, -8
 1124              		.cfi_offset 14, -4
 1125 0002 00AF     		add	r7, sp, #0
 1126              		.cfi_def_cfa_register 7
 278:main.c        ****     currentDirection = CheckSensorDirection();   
 1127              		.loc 1 278 0
 1128 0004 FFF7FEFF 		bl	CheckSensorDirection
 1129 0008 0246     		mov	r2, r0
 1130 000a 164B     		ldr	r3, .L62
 1131 000c 1A60     		str	r2, [r3]
 279:main.c        ****     
 280:main.c        ****     switch (currentDirection) {
 1132              		.loc 1 280 0
 1133 000e 154B     		ldr	r3, .L62
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 26


 1134 0010 1B68     		ldr	r3, [r3]
 1135 0012 062B     		cmp	r3, #6
 1136 0014 23D8     		bhi	.L60
 1137 0016 01A2     		adr	r2, .L53
 1138 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1139              		.p2align 2
 1140              	.L53:
 1141 001c 39000000 		.word	.L52+1
 1142 0020 3F000000 		.word	.L54+1
 1143 0024 45000000 		.word	.L55+1
 1144 0028 51000000 		.word	.L56+1
 1145 002c 4B000000 		.word	.L57+1
 1146 0030 57000000 		.word	.L58+1
 1147 0034 5D000000 		.word	.L61+1
 1148              		.p2align 1
 1149              	.L52:
 281:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 282:main.c        ****         case Forward:
 283:main.c        ****             moveForward();
 1150              		.loc 1 283 0
 1151 0038 FFF7FEFF 		bl	moveForward
 284:main.c        ****             break;
 1152              		.loc 1 284 0
 1153 003c 0FE0     		b	.L51
 1154              	.L54:
 285:main.c        ****         case TurnRight:
 286:main.c        ****             rotationClockwise();
 1155              		.loc 1 286 0
 1156 003e FFF7FEFF 		bl	rotationClockwise
 287:main.c        ****             break;
 1157              		.loc 1 287 0
 1158 0042 0CE0     		b	.L51
 1159              	.L55:
 288:main.c        ****         case TurnLeft:
 289:main.c        ****             rotationAntiClockwise();
 1160              		.loc 1 289 0
 1161 0044 FFF7FEFF 		bl	rotationAntiClockwise
 290:main.c        ****             break;
 1162              		.loc 1 290 0
 1163 0048 09E0     		b	.L51
 1164              	.L57:
 291:main.c        ****         case AdjustToTheRight:
 292:main.c        ****             keepRotatingClockwise();
 1165              		.loc 1 292 0
 1166 004a FFF7FEFF 		bl	keepRotatingClockwise
 293:main.c        ****             break;
 1167              		.loc 1 293 0
 1168 004e 06E0     		b	.L51
 1169              	.L56:
 294:main.c        ****         case AdjustToTheLeft:
 295:main.c        ****             keepRotatingAntiClockwise();
 1170              		.loc 1 295 0
 1171 0050 FFF7FEFF 		bl	keepRotatingAntiClockwise
 296:main.c        ****             break;
 1172              		.loc 1 296 0
 1173 0054 03E0     		b	.L51
 1174              	.L58:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 27


 297:main.c        ****         case Stop:
 298:main.c        ****             stopMoving();
 1175              		.loc 1 298 0
 1176 0056 FFF7FEFF 		bl	stopMoving
 299:main.c        ****             break;
 1177              		.loc 1 299 0
 1178 005a 00E0     		b	.L51
 1179              	.L61:
 300:main.c        ****         case Unknown:
 301:main.c        ****             // UNKNOWN CONFIGURATION
 302:main.c        ****             break;  
 1180              		.loc 1 302 0
 1181 005c 00BF     		nop
 1182              	.L51:
 1183              	.L60:
 303:main.c        ****     }
 304:main.c        **** }
 1184              		.loc 1 304 0
 1185 005e 00BF     		nop
 1186 0060 80BD     		pop	{r7, pc}
 1187              	.L63:
 1188 0062 00BF     		.align	2
 1189              	.L62:
 1190 0064 00000000 		.word	currentDirection
 1191              		.cfi_endproc
 1192              	.LFE76:
 1193              		.size	SetRobotMovement, .-SetRobotMovement
 1194              		.section	.text.usbPutString,"ax",%progbits
 1195              		.align	2
 1196              		.global	usbPutString
 1197              		.thumb
 1198              		.thumb_func
 1199              		.type	usbPutString, %function
 1200              	usbPutString:
 1201              	.LFB77:
 305:main.c        **** 
 306:main.c        **** // ======================================
 307:main.c        **** // USBUART
 308:main.c        **** //* ========================================
 309:main.c        ****     void usbPutString(char *s)
 310:main.c        **** {
 1202              		.loc 1 310 0
 1203              		.cfi_startproc
 1204              		@ args = 0, pretend = 0, frame = 8
 1205              		@ frame_needed = 1, uses_anonymous_args = 0
 1206 0000 80B5     		push	{r7, lr}
 1207              		.cfi_def_cfa_offset 8
 1208              		.cfi_offset 7, -8
 1209              		.cfi_offset 14, -4
 1210 0002 82B0     		sub	sp, sp, #8
 1211              		.cfi_def_cfa_offset 16
 1212 0004 00AF     		add	r7, sp, #0
 1213              		.cfi_def_cfa_register 7
 1214 0006 7860     		str	r0, [r7, #4]
 311:main.c        **** // !! Assumes that *s is a string with allocated space >=64 chars     
 312:main.c        **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 313:main.c        **** //  length to 62 char (63rd char is a '!')
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 28


 314:main.c        **** 
 315:main.c        **** #ifdef USE_USB     
 316:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1215              		.loc 1 316 0
 1216 0008 00BF     		nop
 1217              	.L65:
 1218              		.loc 1 316 0 is_stmt 0 discriminator 1
 1219 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 1220 000e 0346     		mov	r3, r0
 1221 0010 002B     		cmp	r3, #0
 1222 0012 FAD0     		beq	.L65
 317:main.c        ****     s[63]='\0';
 1223              		.loc 1 317 0 is_stmt 1
 1224 0014 7B68     		ldr	r3, [r7, #4]
 1225 0016 3F33     		adds	r3, r3, #63
 1226 0018 0022     		movs	r2, #0
 1227 001a 1A70     		strb	r2, [r3]
 318:main.c        ****     s[62]='!';
 1228              		.loc 1 318 0
 1229 001c 7B68     		ldr	r3, [r7, #4]
 1230 001e 3E33     		adds	r3, r3, #62
 1231 0020 2122     		movs	r2, #33
 1232 0022 1A70     		strb	r2, [r3]
 319:main.c        ****     USBUART_PutData((uint8*)s,strlen(s));
 1233              		.loc 1 319 0
 1234 0024 7868     		ldr	r0, [r7, #4]
 1235 0026 FFF7FEFF 		bl	strlen
 1236 002a 0346     		mov	r3, r0
 1237 002c 9BB2     		uxth	r3, r3
 1238 002e 1946     		mov	r1, r3
 1239 0030 7868     		ldr	r0, [r7, #4]
 1240 0032 FFF7FEFF 		bl	USBUART_PutData
 320:main.c        **** #endif
 321:main.c        **** }
 1241              		.loc 1 321 0
 1242 0036 00BF     		nop
 1243 0038 0837     		adds	r7, r7, #8
 1244              		.cfi_def_cfa_offset 8
 1245 003a BD46     		mov	sp, r7
 1246              		.cfi_def_cfa_register 13
 1247              		@ sp needed
 1248 003c 80BD     		pop	{r7, pc}
 1249              		.cfi_endproc
 1250              	.LFE77:
 1251              		.size	usbPutString, .-usbPutString
 1252 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 1253              		.align	2
 1254              		.global	usbPutChar
 1255              		.thumb
 1256              		.thumb_func
 1257              		.type	usbPutChar, %function
 1258              	usbPutChar:
 1259              	.LFB78:
 322:main.c        **** //* ========================================
 323:main.c        **** void usbPutChar(char c)
 324:main.c        **** {
 1260              		.loc 1 324 0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 29


 1261              		.cfi_startproc
 1262              		@ args = 0, pretend = 0, frame = 8
 1263              		@ frame_needed = 1, uses_anonymous_args = 0
 1264 0000 80B5     		push	{r7, lr}
 1265              		.cfi_def_cfa_offset 8
 1266              		.cfi_offset 7, -8
 1267              		.cfi_offset 14, -4
 1268 0002 82B0     		sub	sp, sp, #8
 1269              		.cfi_def_cfa_offset 16
 1270 0004 00AF     		add	r7, sp, #0
 1271              		.cfi_def_cfa_register 7
 1272 0006 0346     		mov	r3, r0
 1273 0008 FB71     		strb	r3, [r7, #7]
 325:main.c        **** #ifdef USE_USB     
 326:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1274              		.loc 1 326 0
 1275 000a 00BF     		nop
 1276              	.L67:
 1277              		.loc 1 326 0 is_stmt 0 discriminator 1
 1278 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 1279 0010 0346     		mov	r3, r0
 1280 0012 002B     		cmp	r3, #0
 1281 0014 FAD0     		beq	.L67
 327:main.c        ****     USBUART_PutChar(c);
 1282              		.loc 1 327 0 is_stmt 1
 1283 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1284 0018 1846     		mov	r0, r3
 1285 001a FFF7FEFF 		bl	USBUART_PutChar
 328:main.c        **** #endif    
 329:main.c        **** }
 1286              		.loc 1 329 0
 1287 001e 00BF     		nop
 1288 0020 0837     		adds	r7, r7, #8
 1289              		.cfi_def_cfa_offset 8
 1290 0022 BD46     		mov	sp, r7
 1291              		.cfi_def_cfa_register 13
 1292              		@ sp needed
 1293 0024 80BD     		pop	{r7, pc}
 1294              		.cfi_endproc
 1295              	.LFE78:
 1296              		.size	usbPutChar, .-usbPutChar
 1297 0026 00BF     		.section	.text.handle_usb,"ax",%progbits
 1298              		.align	2
 1299              		.global	handle_usb
 1300              		.thumb
 1301              		.thumb_func
 1302              		.type	handle_usb, %function
 1303              	handle_usb:
 1304              	.LFB79:
 330:main.c        **** //* ========================================
 331:main.c        **** void handle_usb()
 332:main.c        **** {
 1305              		.loc 1 332 0
 1306              		.cfi_startproc
 1307              		@ args = 0, pretend = 0, frame = 8
 1308              		@ frame_needed = 1, uses_anonymous_args = 0
 1309 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 30


 1310              		.cfi_def_cfa_offset 8
 1311              		.cfi_offset 7, -8
 1312              		.cfi_offset 14, -4
 1313 0002 82B0     		sub	sp, sp, #8
 1314              		.cfi_def_cfa_offset 16
 1315 0004 00AF     		add	r7, sp, #0
 1316              		.cfi_def_cfa_register 7
 333:main.c        ****     // handles input at terminal, echos it back to the terminal
 334:main.c        ****     // turn echo OFF, key emulation: only CR
 335:main.c        ****     // entered string is made available in 'line' and 'flag_KB_string' is set
 336:main.c        ****     
 337:main.c        ****     static uint8 usbStarted = FALSE;
 338:main.c        ****     static uint16 usbBufCount = 0;
 339:main.c        ****     uint8 c; 
 340:main.c        ****     
 341:main.c        **** 
 342:main.c        ****     if (!usbStarted)
 1317              		.loc 1 342 0
 1318 0006 2B4B     		ldr	r3, .L78
 1319 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1320 000a 002B     		cmp	r3, #0
 1321 000c 0AD1     		bne	.L69
 343:main.c        ****     {
 344:main.c        ****         if (USBUART_GetConfiguration())
 1322              		.loc 1 344 0
 1323 000e FFF7FEFF 		bl	USBUART_GetConfiguration
 1324 0012 0346     		mov	r3, r0
 1325 0014 002B     		cmp	r3, #0
 1326 0016 49D0     		beq	.L77
 345:main.c        ****         {
 346:main.c        ****             USBUART_CDC_Init();
 1327              		.loc 1 346 0
 1328 0018 FFF7FEFF 		bl	USBUART_CDC_Init
 347:main.c        ****             usbStarted = TRUE;
 1329              		.loc 1 347 0
 1330 001c 254B     		ldr	r3, .L78
 1331 001e 0122     		movs	r2, #1
 1332 0020 1A70     		strb	r2, [r3]
 348:main.c        ****         }
 349:main.c        ****     }
 350:main.c        ****     else
 351:main.c        ****     {
 352:main.c        ****         if (USBUART_DataIsReady() != 0)
 353:main.c        ****         {  
 354:main.c        ****             c = USBUART_GetChar();
 355:main.c        **** 
 356:main.c        ****             if ((c == 13) || (c == 10))
 357:main.c        ****             {
 358:main.c        **** //                if (usbBufCount > 0)
 359:main.c        ****                 {
 360:main.c        ****                     entry[usbBufCount]= '\0';
 361:main.c        ****                     strcpy(line,entry);
 362:main.c        ****                     usbBufCount = 0;
 363:main.c        ****                     flag_KB_string = 1;
 364:main.c        ****                 }
 365:main.c        ****             }
 366:main.c        ****             else 
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 31


 367:main.c        ****             {
 368:main.c        ****                 if (((c == CHAR_BACKSP) || (c == CHAR_DEL) ) && (usbBufCount > 0) )
 369:main.c        ****                     usbBufCount--;
 370:main.c        ****                 else
 371:main.c        ****                 {
 372:main.c        ****                     if (usbBufCount > (BUF_SIZE-2) ) // one less else strtok triggers a crash
 373:main.c        ****                     {
 374:main.c        ****                        USBUART_PutChar('!');        
 375:main.c        ****                     }
 376:main.c        ****                     else
 377:main.c        ****                         entry[usbBufCount++] = c;  
 378:main.c        ****                 }  
 379:main.c        ****             }
 380:main.c        ****         }
 381:main.c        ****     }    
 382:main.c        **** }
 1333              		.loc 1 382 0
 1334 0022 43E0     		b	.L77
 1335              	.L69:
 352:main.c        ****         {  
 1336              		.loc 1 352 0
 1337 0024 FFF7FEFF 		bl	USBUART_DataIsReady
 1338 0028 0346     		mov	r3, r0
 1339 002a 002B     		cmp	r3, #0
 1340 002c 3ED0     		beq	.L77
 354:main.c        **** 
 1341              		.loc 1 354 0
 1342 002e FFF7FEFF 		bl	USBUART_GetChar
 1343 0032 0346     		mov	r3, r0
 1344 0034 FB71     		strb	r3, [r7, #7]
 356:main.c        ****             {
 1345              		.loc 1 356 0
 1346 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1347 0038 0D2B     		cmp	r3, #13
 1348 003a 02D0     		beq	.L72
 356:main.c        ****             {
 1349              		.loc 1 356 0 is_stmt 0 discriminator 1
 1350 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1351 003e 0A2B     		cmp	r3, #10
 1352 0040 10D1     		bne	.L73
 1353              	.L72:
 360:main.c        ****                     strcpy(line,entry);
 1354              		.loc 1 360 0 is_stmt 1
 1355 0042 1D4B     		ldr	r3, .L78+4
 1356 0044 1B88     		ldrh	r3, [r3]
 1357 0046 1A46     		mov	r2, r3
 1358 0048 1C4B     		ldr	r3, .L78+8
 1359 004a 0021     		movs	r1, #0
 1360 004c 9954     		strb	r1, [r3, r2]
 361:main.c        ****                     usbBufCount = 0;
 1361              		.loc 1 361 0
 1362 004e 1B49     		ldr	r1, .L78+8
 1363 0050 1B48     		ldr	r0, .L78+12
 1364 0052 FFF7FEFF 		bl	strcpy
 362:main.c        ****                     flag_KB_string = 1;
 1365              		.loc 1 362 0
 1366 0056 184B     		ldr	r3, .L78+4
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 32


 1367 0058 0022     		movs	r2, #0
 1368 005a 1A80     		strh	r2, [r3]	@ movhi
 363:main.c        ****                 }
 1369              		.loc 1 363 0
 1370 005c 194B     		ldr	r3, .L78+16
 1371 005e 0122     		movs	r2, #1
 1372 0060 1A70     		strb	r2, [r3]
 1373 0062 23E0     		b	.L71
 1374              	.L73:
 368:main.c        ****                     usbBufCount--;
 1375              		.loc 1 368 0
 1376 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1377 0066 082B     		cmp	r3, #8
 1378 0068 02D0     		beq	.L74
 368:main.c        ****                     usbBufCount--;
 1379              		.loc 1 368 0 is_stmt 0 discriminator 2
 1380 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1381 006c 7F2B     		cmp	r3, #127
 1382 006e 0AD1     		bne	.L75
 1383              	.L74:
 368:main.c        ****                     usbBufCount--;
 1384              		.loc 1 368 0 discriminator 3
 1385 0070 114B     		ldr	r3, .L78+4
 1386 0072 1B88     		ldrh	r3, [r3]
 1387 0074 002B     		cmp	r3, #0
 1388 0076 06D0     		beq	.L75
 369:main.c        ****                 else
 1389              		.loc 1 369 0 is_stmt 1
 1390 0078 0F4B     		ldr	r3, .L78+4
 1391 007a 1B88     		ldrh	r3, [r3]
 1392 007c 013B     		subs	r3, r3, #1
 1393 007e 9AB2     		uxth	r2, r3
 1394 0080 0D4B     		ldr	r3, .L78+4
 1395 0082 1A80     		strh	r2, [r3]	@ movhi
 1396 0084 12E0     		b	.L71
 1397              	.L75:
 372:main.c        ****                     {
 1398              		.loc 1 372 0
 1399 0086 0C4B     		ldr	r3, .L78+4
 1400 0088 1B88     		ldrh	r3, [r3]
 1401 008a 3E2B     		cmp	r3, #62
 1402 008c 03D9     		bls	.L76
 374:main.c        ****                     }
 1403              		.loc 1 374 0
 1404 008e 2120     		movs	r0, #33
 1405 0090 FFF7FEFF 		bl	USBUART_PutChar
 1406              		.loc 1 382 0
 1407 0094 0AE0     		b	.L77
 1408              	.L76:
 377:main.c        ****                 }  
 1409              		.loc 1 377 0
 1410 0096 084B     		ldr	r3, .L78+4
 1411 0098 1B88     		ldrh	r3, [r3]
 1412 009a 5A1C     		adds	r2, r3, #1
 1413 009c 91B2     		uxth	r1, r2
 1414 009e 064A     		ldr	r2, .L78+4
 1415 00a0 1180     		strh	r1, [r2]	@ movhi
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 33


 1416 00a2 1946     		mov	r1, r3
 1417 00a4 054A     		ldr	r2, .L78+8
 1418 00a6 FB79     		ldrb	r3, [r7, #7]
 1419 00a8 5354     		strb	r3, [r2, r1]
 1420              		.loc 1 382 0
 1421 00aa FFE7     		b	.L77
 1422              	.L71:
 1423              	.L77:
 1424 00ac 00BF     		nop
 1425 00ae 0837     		adds	r7, r7, #8
 1426              		.cfi_def_cfa_offset 8
 1427 00b0 BD46     		mov	sp, r7
 1428              		.cfi_def_cfa_register 13
 1429              		@ sp needed
 1430 00b2 80BD     		pop	{r7, pc}
 1431              	.L79:
 1432              		.align	2
 1433              	.L78:
 1434 00b4 2C000000 		.word	usbStarted.8236
 1435 00b8 2E000000 		.word	usbBufCount.8237
 1436 00bc 00000000 		.word	entry
 1437 00c0 00000000 		.word	line
 1438 00c4 00000000 		.word	flag_KB_string
 1439              		.cfi_endproc
 1440              	.LFE79:
 1441              		.size	handle_usb, .-handle_usb
 1442              		.bss
 1443              	usbStarted.8236:
 1444 002c 00       		.space	1
 1445 002d 00       		.align	1
 1446              	usbBufCount.8237:
 1447 002e 0000     		.space	2
 1448              		.text
 1449              	.Letext0:
 1450              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1451              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1452              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1453              		.file 5 "vars.h"
 1454              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1455              		.section	.debug_info,"",%progbits
 1456              	.Ldebug_info0:
 1457 0000 1E060000 		.4byte	0x61e
 1458 0004 0400     		.2byte	0x4
 1459 0006 00000000 		.4byte	.Ldebug_abbrev0
 1460 000a 04       		.byte	0x4
 1461 000b 01       		.uleb128 0x1
 1462 000c 89000000 		.4byte	.LASF90
 1463 0010 0C       		.byte	0xc
 1464 0011 C7030000 		.4byte	.LASF91
 1465 0015 94040000 		.4byte	.LASF92
 1466 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1467 001d 00000000 		.4byte	0
 1468 0021 00000000 		.4byte	.Ldebug_line0
 1469 0025 02       		.uleb128 0x2
 1470 0026 01       		.byte	0x1
 1471 0027 06       		.byte	0x6
 1472 0028 8F020000 		.4byte	.LASF0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 34


 1473 002c 02       		.uleb128 0x2
 1474 002d 01       		.byte	0x1
 1475 002e 08       		.byte	0x8
 1476 002f 13020000 		.4byte	.LASF1
 1477 0033 02       		.uleb128 0x2
 1478 0034 02       		.byte	0x2
 1479 0035 05       		.byte	0x5
 1480 0036 50000000 		.4byte	.LASF2
 1481 003a 02       		.uleb128 0x2
 1482 003b 02       		.byte	0x2
 1483 003c 07       		.byte	0x7
 1484 003d 2F030000 		.4byte	.LASF3
 1485 0041 03       		.uleb128 0x3
 1486 0042 1A040000 		.4byte	.LASF12
 1487 0046 02       		.byte	0x2
 1488 0047 3F       		.byte	0x3f
 1489 0048 4C000000 		.4byte	0x4c
 1490 004c 02       		.uleb128 0x2
 1491 004d 04       		.byte	0x4
 1492 004e 05       		.byte	0x5
 1493 004f C0010000 		.4byte	.LASF4
 1494 0053 02       		.uleb128 0x2
 1495 0054 04       		.byte	0x4
 1496 0055 07       		.byte	0x7
 1497 0056 CE030000 		.4byte	.LASF5
 1498 005a 02       		.uleb128 0x2
 1499 005b 08       		.byte	0x8
 1500 005c 05       		.byte	0x5
 1501 005d 74010000 		.4byte	.LASF6
 1502 0061 02       		.uleb128 0x2
 1503 0062 08       		.byte	0x8
 1504 0063 07       		.byte	0x7
 1505 0064 A3020000 		.4byte	.LASF7
 1506 0068 04       		.uleb128 0x4
 1507 0069 04       		.byte	0x4
 1508 006a 05       		.byte	0x5
 1509 006b 696E7400 		.ascii	"int\000"
 1510 006f 02       		.uleb128 0x2
 1511 0070 04       		.byte	0x4
 1512 0071 07       		.byte	0x7
 1513 0072 CB020000 		.4byte	.LASF8
 1514 0076 02       		.uleb128 0x2
 1515 0077 08       		.byte	0x8
 1516 0078 04       		.byte	0x4
 1517 0079 39020000 		.4byte	.LASF9
 1518 007d 02       		.uleb128 0x2
 1519 007e 04       		.byte	0x4
 1520 007f 07       		.byte	0x7
 1521 0080 67000000 		.4byte	.LASF10
 1522 0084 05       		.uleb128 0x5
 1523 0085 04       		.byte	0x4
 1524 0086 8A000000 		.4byte	0x8a
 1525 008a 02       		.uleb128 0x2
 1526 008b 01       		.byte	0x1
 1527 008c 08       		.byte	0x8
 1528 008d 5D030000 		.4byte	.LASF11
 1529 0091 03       		.uleb128 0x3
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 35


 1530 0092 9B020000 		.4byte	.LASF13
 1531 0096 03       		.byte	0x3
 1532 0097 2C       		.byte	0x2c
 1533 0098 41000000 		.4byte	0x41
 1534 009c 06       		.uleb128 0x6
 1535 009d 56010000 		.4byte	.LASF14
 1536 00a1 04       		.byte	0x4
 1537 00a2 E901     		.2byte	0x1e9
 1538 00a4 2C000000 		.4byte	0x2c
 1539 00a8 06       		.uleb128 0x6
 1540 00a9 38010000 		.4byte	.LASF15
 1541 00ad 04       		.byte	0x4
 1542 00ae EA01     		.2byte	0x1ea
 1543 00b0 3A000000 		.4byte	0x3a
 1544 00b4 06       		.uleb128 0x6
 1545 00b5 C0030000 		.4byte	.LASF16
 1546 00b9 04       		.byte	0x4
 1547 00ba EB01     		.2byte	0x1eb
 1548 00bc 53000000 		.4byte	0x53
 1549 00c0 06       		.uleb128 0x6
 1550 00c1 8F010000 		.4byte	.LASF17
 1551 00c5 04       		.byte	0x4
 1552 00c6 EC01     		.2byte	0x1ec
 1553 00c8 25000000 		.4byte	0x25
 1554 00cc 06       		.uleb128 0x6
 1555 00cd 50010000 		.4byte	.LASF18
 1556 00d1 04       		.byte	0x4
 1557 00d2 ED01     		.2byte	0x1ed
 1558 00d4 33000000 		.4byte	0x33
 1559 00d8 02       		.uleb128 0x2
 1560 00d9 04       		.byte	0x4
 1561 00da 04       		.byte	0x4
 1562 00db 6E010000 		.4byte	.LASF19
 1563 00df 02       		.uleb128 0x2
 1564 00e0 08       		.byte	0x8
 1565 00e1 04       		.byte	0x4
 1566 00e2 27000000 		.4byte	.LASF20
 1567 00e6 07       		.uleb128 0x7
 1568 00e7 42030000 		.4byte	.LASF93
 1569 00eb 20       		.byte	0x20
 1570 00ec 05       		.byte	0x5
 1571 00ed 29       		.byte	0x29
 1572 00ee BF010000 		.4byte	0x1bf
 1573 00f2 08       		.uleb128 0x8
 1574 00f3 F7040000 		.4byte	.LASF21
 1575 00f7 05       		.byte	0x5
 1576 00f8 2A       		.byte	0x2a
 1577 00f9 C0000000 		.4byte	0xc0
 1578 00fd 00       		.byte	0
 1579 00fe 08       		.uleb128 0x8
 1580 00ff 3F010000 		.4byte	.LASF22
 1581 0103 05       		.byte	0x5
 1582 0104 2B       		.byte	0x2b
 1583 0105 9C000000 		.4byte	0x9c
 1584 0109 01       		.byte	0x1
 1585 010a 08       		.uleb128 0x8
 1586 010b A4030000 		.4byte	.LASF23
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 36


 1587 010f 05       		.byte	0x5
 1588 0110 2C       		.byte	0x2c
 1589 0111 CC000000 		.4byte	0xcc
 1590 0115 02       		.byte	0x2
 1591 0116 08       		.uleb128 0x8
 1592 0117 7C040000 		.4byte	.LASF24
 1593 011b 05       		.byte	0x5
 1594 011c 2D       		.byte	0x2d
 1595 011d CC000000 		.4byte	0xcc
 1596 0121 04       		.byte	0x4
 1597 0122 08       		.uleb128 0x8
 1598 0123 FC040000 		.4byte	.LASF25
 1599 0127 05       		.byte	0x5
 1600 0128 2E       		.byte	0x2e
 1601 0129 CC000000 		.4byte	0xcc
 1602 012d 06       		.byte	0x6
 1603 012e 08       		.uleb128 0x8
 1604 012f B8010000 		.4byte	.LASF26
 1605 0133 05       		.byte	0x5
 1606 0134 2F       		.byte	0x2f
 1607 0135 CC000000 		.4byte	0xcc
 1608 0139 08       		.byte	0x8
 1609 013a 08       		.uleb128 0x8
 1610 013b 29040000 		.4byte	.LASF27
 1611 013f 05       		.byte	0x5
 1612 0140 30       		.byte	0x30
 1613 0141 CC000000 		.4byte	0xcc
 1614 0145 0A       		.byte	0xa
 1615 0146 08       		.uleb128 0x8
 1616 0147 6F020000 		.4byte	.LASF28
 1617 014b 05       		.byte	0x5
 1618 014c 31       		.byte	0x31
 1619 014d CC000000 		.4byte	0xcc
 1620 0151 0C       		.byte	0xc
 1621 0152 08       		.uleb128 0x8
 1622 0153 AB010000 		.4byte	.LASF29
 1623 0157 05       		.byte	0x5
 1624 0158 32       		.byte	0x32
 1625 0159 CC000000 		.4byte	0xcc
 1626 015d 0E       		.byte	0xe
 1627 015e 08       		.uleb128 0x8
 1628 015f 87020000 		.4byte	.LASF30
 1629 0163 05       		.byte	0x5
 1630 0164 33       		.byte	0x33
 1631 0165 CC000000 		.4byte	0xcc
 1632 0169 10       		.byte	0x10
 1633 016a 08       		.uleb128 0x8
 1634 016b 78030000 		.4byte	.LASF31
 1635 016f 05       		.byte	0x5
 1636 0170 34       		.byte	0x34
 1637 0171 CC000000 		.4byte	0xcc
 1638 0175 12       		.byte	0x12
 1639 0176 08       		.uleb128 0x8
 1640 0177 8D030000 		.4byte	.LASF32
 1641 017b 05       		.byte	0x5
 1642 017c 35       		.byte	0x35
 1643 017d CC000000 		.4byte	0xcc
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 37


 1644 0181 14       		.byte	0x14
 1645 0182 08       		.uleb128 0x8
 1646 0183 5C010000 		.4byte	.LASF33
 1647 0187 05       		.byte	0x5
 1648 0188 36       		.byte	0x36
 1649 0189 CC000000 		.4byte	0xcc
 1650 018d 16       		.byte	0x16
 1651 018e 08       		.uleb128 0x8
 1652 018f 48000000 		.4byte	.LASF34
 1653 0193 05       		.byte	0x5
 1654 0194 37       		.byte	0x37
 1655 0195 CC000000 		.4byte	0xcc
 1656 0199 18       		.byte	0x18
 1657 019a 08       		.uleb128 0x8
 1658 019b A3010000 		.4byte	.LASF35
 1659 019f 05       		.byte	0x5
 1660 01a0 38       		.byte	0x38
 1661 01a1 CC000000 		.4byte	0xcc
 1662 01a5 1A       		.byte	0x1a
 1663 01a6 08       		.uleb128 0x8
 1664 01a7 1A030000 		.4byte	.LASF36
 1665 01ab 05       		.byte	0x5
 1666 01ac 39       		.byte	0x39
 1667 01ad CC000000 		.4byte	0xcc
 1668 01b1 1C       		.byte	0x1c
 1669 01b2 08       		.uleb128 0x8
 1670 01b3 80030000 		.4byte	.LASF37
 1671 01b7 05       		.byte	0x5
 1672 01b8 3A       		.byte	0x3a
 1673 01b9 CC000000 		.4byte	0xcc
 1674 01bd 1E       		.byte	0x1e
 1675 01be 00       		.byte	0
 1676 01bf 09       		.uleb128 0x9
 1677 01c0 70000000 		.4byte	.LASF94
 1678 01c4 04       		.byte	0x4
 1679 01c5 6F000000 		.4byte	0x6f
 1680 01c9 01       		.byte	0x1
 1681 01ca 27       		.byte	0x27
 1682 01cb FA010000 		.4byte	0x1fa
 1683 01cf 0A       		.uleb128 0xa
 1684 01d0 62030000 		.4byte	.LASF38
 1685 01d4 00       		.byte	0
 1686 01d5 0A       		.uleb128 0xa
 1687 01d6 AF030000 		.4byte	.LASF39
 1688 01da 01       		.byte	0x1
 1689 01db 0A       		.uleb128 0xa
 1690 01dc 17000000 		.4byte	.LASF40
 1691 01e0 02       		.byte	0x2
 1692 01e1 0A       		.uleb128 0xa
 1693 01e2 28010000 		.4byte	.LASF41
 1694 01e6 03       		.byte	0x3
 1695 01e7 0A       		.uleb128 0xa
 1696 01e8 BA020000 		.4byte	.LASF42
 1697 01ec 04       		.byte	0x4
 1698 01ed 0A       		.uleb128 0xa
 1699 01ee 24040000 		.4byte	.LASF43
 1700 01f2 05       		.byte	0x5
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 38


 1701 01f3 0A       		.uleb128 0xa
 1702 01f4 EB030000 		.4byte	.LASF44
 1703 01f8 06       		.byte	0x6
 1704 01f9 00       		.byte	0
 1705 01fa 0B       		.uleb128 0xb
 1706 01fb 45010000 		.4byte	.LASF45
 1707 01ff 01       		.byte	0x1
 1708 0200 40       		.byte	0x40
 1709 0201 00000000 		.4byte	.LFB64
 1710 0205 C8000000 		.4byte	.LFE64-.LFB64
 1711 0209 01       		.uleb128 0x1
 1712 020a 9C       		.byte	0x9c
 1713 020b 0B       		.uleb128 0xb
 1714 020c 0E050000 		.4byte	.LASF46
 1715 0210 01       		.byte	0x1
 1716 0211 50       		.byte	0x50
 1717 0212 00000000 		.4byte	.LFB65
 1718 0216 18000000 		.4byte	.LFE65-.LFB65
 1719 021a 01       		.uleb128 0x1
 1720 021b 9C       		.byte	0x9c
 1721 021c 0B       		.uleb128 0xb
 1722 021d DE010000 		.4byte	.LASF47
 1723 0221 01       		.byte	0x1
 1724 0222 57       		.byte	0x57
 1725 0223 00000000 		.4byte	.LFB66
 1726 0227 18000000 		.4byte	.LFE66-.LFB66
 1727 022b 01       		.uleb128 0x1
 1728 022c 9C       		.byte	0x9c
 1729 022d 0B       		.uleb128 0xb
 1730 022e F3030000 		.4byte	.LASF48
 1731 0232 01       		.byte	0x1
 1732 0233 5E       		.byte	0x5e
 1733 0234 00000000 		.4byte	.LFB67
 1734 0238 18000000 		.4byte	.LFE67-.LFB67
 1735 023c 01       		.uleb128 0x1
 1736 023d 9C       		.byte	0x9c
 1737 023e 0B       		.uleb128 0xb
 1738 023f 1C010000 		.4byte	.LASF49
 1739 0243 01       		.byte	0x1
 1740 0244 64       		.byte	0x64
 1741 0245 00000000 		.4byte	.LFB68
 1742 0249 18000000 		.4byte	.LFE68-.LFB68
 1743 024d 01       		.uleb128 0x1
 1744 024e 9C       		.byte	0x9c
 1745 024f 0B       		.uleb128 0xb
 1746 0250 23030000 		.4byte	.LASF50
 1747 0254 01       		.byte	0x1
 1748 0255 6A       		.byte	0x6a
 1749 0256 00000000 		.4byte	.LFB69
 1750 025a 18000000 		.4byte	.LFE69-.LFB69
 1751 025e 01       		.uleb128 0x1
 1752 025f 9C       		.byte	0x9c
 1753 0260 0B       		.uleb128 0xb
 1754 0261 00000000 		.4byte	.LASF51
 1755 0265 01       		.byte	0x1
 1756 0266 70       		.byte	0x70
 1757 0267 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 39


 1758 026b 18000000 		.4byte	.LFE70-.LFB70
 1759 026f 01       		.uleb128 0x1
 1760 0270 9C       		.byte	0x9c
 1761 0271 0B       		.uleb128 0xb
 1762 0272 0D030000 		.4byte	.LASF52
 1763 0276 01       		.byte	0x1
 1764 0277 76       		.byte	0x76
 1765 0278 00000000 		.4byte	.LFB71
 1766 027c 1A000000 		.4byte	.LFE71-.LFB71
 1767 0280 01       		.uleb128 0x1
 1768 0281 9C       		.byte	0x9c
 1769 0282 0C       		.uleb128 0xc
 1770 0283 17010000 		.4byte	.LASF53
 1771 0287 01       		.byte	0x1
 1772 0288 82       		.byte	0x82
 1773 0289 68000000 		.4byte	0x68
 1774 028d 00000000 		.4byte	.LFB72
 1775 0291 E0000000 		.4byte	.LFE72-.LFB72
 1776 0295 01       		.uleb128 0x1
 1777 0296 9C       		.byte	0x9c
 1778 0297 0D       		.uleb128 0xd
 1779 0298 51040000 		.4byte	.LASF95
 1780 029c 01       		.byte	0x1
 1781 029d B9       		.byte	0xb9
 1782 029e CC000000 		.4byte	0xcc
 1783 02a2 00000000 		.4byte	.LFB73
 1784 02a6 6C000000 		.4byte	.LFE73-.LFB73
 1785 02aa 01       		.uleb128 0x1
 1786 02ab 9C       		.byte	0x9c
 1787 02ac DB020000 		.4byte	0x2db
 1788 02b0 0E       		.uleb128 0xe
 1789 02b1 08040000 		.4byte	.LASF59
 1790 02b5 01       		.byte	0x1
 1791 02b6 B9       		.byte	0xb9
 1792 02b7 A8000000 		.4byte	0xa8
 1793 02bb 02       		.uleb128 0x2
 1794 02bc 91       		.byte	0x91
 1795 02bd 66       		.sleb128 -26
 1796 02be 0F       		.uleb128 0xf
 1797 02bf 63707300 		.ascii	"cps\000"
 1798 02c3 01       		.byte	0x1
 1799 02c4 BB       		.byte	0xbb
 1800 02c5 D8000000 		.4byte	0xd8
 1801 02c9 02       		.uleb128 0x2
 1802 02ca 91       		.byte	0x91
 1803 02cb 6C       		.sleb128 -20
 1804 02cc 0F       		.uleb128 0xf
 1805 02cd 72706D00 		.ascii	"rpm\000"
 1806 02d1 01       		.byte	0x1
 1807 02d2 BC       		.byte	0xbc
 1808 02d3 CC000000 		.4byte	0xcc
 1809 02d7 02       		.uleb128 0x2
 1810 02d8 91       		.byte	0x91
 1811 02d9 6A       		.sleb128 -22
 1812 02da 00       		.byte	0
 1813 02db 10       		.uleb128 0x10
 1814 02dc 4C030000 		.4byte	.LASF55
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 40


 1815 02e0 01       		.byte	0x1
 1816 02e1 C4       		.byte	0xc4
 1817 02e2 00000000 		.4byte	.LFB74
 1818 02e6 48000000 		.4byte	.LFE74-.LFB74
 1819 02ea 01       		.uleb128 0x1
 1820 02eb 9C       		.byte	0x9c
 1821 02ec 11       		.uleb128 0x11
 1822 02ed C9010000 		.4byte	.LASF57
 1823 02f1 01       		.byte	0x1
 1824 02f2 D2       		.byte	0xd2
 1825 02f3 BF010000 		.4byte	0x1bf
 1826 02f7 00000000 		.4byte	.LFB75
 1827 02fb 98010000 		.4byte	.LFE75-.LFB75
 1828 02ff 01       		.uleb128 0x1
 1829 0300 9C       		.byte	0x9c
 1830 0301 14030000 		.4byte	0x314
 1831 0305 12       		.uleb128 0x12
 1832 0306 E8040000 		.4byte	.LASF54
 1833 030a 01       		.byte	0x1
 1834 030b D3       		.byte	0xd3
 1835 030c BF010000 		.4byte	0x1bf
 1836 0310 02       		.uleb128 0x2
 1837 0311 91       		.byte	0x91
 1838 0312 74       		.sleb128 -12
 1839 0313 00       		.byte	0
 1840 0314 13       		.uleb128 0x13
 1841 0315 FC020000 		.4byte	.LASF56
 1842 0319 01       		.byte	0x1
 1843 031a 1501     		.2byte	0x115
 1844 031c 00000000 		.4byte	.LFB76
 1845 0320 68000000 		.4byte	.LFE76-.LFB76
 1846 0324 01       		.uleb128 0x1
 1847 0325 9C       		.byte	0x9c
 1848 0326 14       		.uleb128 0x14
 1849 0327 82010000 		.4byte	.LASF58
 1850 032b 01       		.byte	0x1
 1851 032c 3501     		.2byte	0x135
 1852 032e 00000000 		.4byte	.LFB77
 1853 0332 3E000000 		.4byte	.LFE77-.LFB77
 1854 0336 01       		.uleb128 0x1
 1855 0337 9C       		.byte	0x9c
 1856 0338 4A030000 		.4byte	0x34a
 1857 033c 15       		.uleb128 0x15
 1858 033d 7300     		.ascii	"s\000"
 1859 033f 01       		.byte	0x1
 1860 0340 3501     		.2byte	0x135
 1861 0342 84000000 		.4byte	0x84
 1862 0346 02       		.uleb128 0x2
 1863 0347 91       		.byte	0x91
 1864 0348 74       		.sleb128 -12
 1865 0349 00       		.byte	0
 1866 034a 14       		.uleb128 0x14
 1867 034b 0C000000 		.4byte	.LASF60
 1868 034f 01       		.byte	0x1
 1869 0350 4301     		.2byte	0x143
 1870 0352 00000000 		.4byte	.LFB78
 1871 0356 26000000 		.4byte	.LFE78-.LFB78
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 41


 1872 035a 01       		.uleb128 0x1
 1873 035b 9C       		.byte	0x9c
 1874 035c 6E030000 		.4byte	0x36e
 1875 0360 15       		.uleb128 0x15
 1876 0361 6300     		.ascii	"c\000"
 1877 0363 01       		.byte	0x1
 1878 0364 4301     		.2byte	0x143
 1879 0366 8A000000 		.4byte	0x8a
 1880 036a 02       		.uleb128 0x2
 1881 036b 91       		.byte	0x91
 1882 036c 77       		.sleb128 -9
 1883 036d 00       		.byte	0
 1884 036e 16       		.uleb128 0x16
 1885 036f 46040000 		.4byte	.LASF96
 1886 0373 01       		.byte	0x1
 1887 0374 4B01     		.2byte	0x14b
 1888 0376 00000000 		.4byte	.LFB79
 1889 037a C8000000 		.4byte	.LFE79-.LFB79
 1890 037e 01       		.uleb128 0x1
 1891 037f 9C       		.byte	0x9c
 1892 0380 B6030000 		.4byte	0x3b6
 1893 0384 17       		.uleb128 0x17
 1894 0385 E0030000 		.4byte	.LASF61
 1895 0389 01       		.byte	0x1
 1896 038a 5101     		.2byte	0x151
 1897 038c 9C000000 		.4byte	0x9c
 1898 0390 05       		.uleb128 0x5
 1899 0391 03       		.byte	0x3
 1900 0392 2C000000 		.4byte	usbStarted.8236
 1901 0396 17       		.uleb128 0x17
 1902 0397 F0020000 		.4byte	.LASF62
 1903 039b 01       		.byte	0x1
 1904 039c 5201     		.2byte	0x152
 1905 039e A8000000 		.4byte	0xa8
 1906 03a2 05       		.uleb128 0x5
 1907 03a3 03       		.byte	0x3
 1908 03a4 2E000000 		.4byte	usbBufCount.8237
 1909 03a8 18       		.uleb128 0x18
 1910 03a9 6300     		.ascii	"c\000"
 1911 03ab 01       		.byte	0x1
 1912 03ac 5301     		.2byte	0x153
 1913 03ae 9C000000 		.4byte	0x9c
 1914 03b2 02       		.uleb128 0x2
 1915 03b3 91       		.byte	0x91
 1916 03b4 77       		.sleb128 -9
 1917 03b5 00       		.byte	0
 1918 03b6 19       		.uleb128 0x19
 1919 03b7 87040000 		.4byte	.LASF63
 1920 03bb 06       		.byte	0x6
 1921 03bc 1207     		.2byte	0x712
 1922 03be C2030000 		.4byte	0x3c2
 1923 03c2 1A       		.uleb128 0x1a
 1924 03c3 91000000 		.4byte	0x91
 1925 03c7 1B       		.uleb128 0x1b
 1926 03c8 747300   		.ascii	"ts\000"
 1927 03cb 05       		.byte	0x5
 1928 03cc 10       		.byte	0x10
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 42


 1929 03cd 9C000000 		.4byte	0x9c
 1930 03d1 05       		.uleb128 0x5
 1931 03d2 03       		.byte	0x3
 1932 03d3 00000000 		.4byte	ts
 1933 03d7 1C       		.uleb128 0x1c
 1934 03d8 20000000 		.4byte	.LASF64
 1935 03dc 05       		.byte	0x5
 1936 03dd 11       		.byte	0x11
 1937 03de A8000000 		.4byte	0xa8
 1938 03e2 05       		.uleb128 0x5
 1939 03e3 03       		.byte	0x3
 1940 03e4 00000000 		.4byte	ts_enc
 1941 03e8 1C       		.uleb128 0x1c
 1942 03e9 3C040000 		.4byte	.LASF65
 1943 03ed 05       		.byte	0x5
 1944 03ee 12       		.byte	0x12
 1945 03ef A8000000 		.4byte	0xa8
 1946 03f3 05       		.uleb128 0x5
 1947 03f4 03       		.byte	0x3
 1948 03f5 00000000 		.4byte	ts_update
 1949 03f9 1C       		.uleb128 0x1c
 1950 03fa FF030000 		.4byte	.LASF66
 1951 03fe 05       		.byte	0x5
 1952 03ff 13       		.byte	0x13
 1953 0400 A8000000 		.4byte	0xa8
 1954 0404 05       		.uleb128 0x5
 1955 0405 03       		.byte	0x3
 1956 0406 00000000 		.4byte	ts_speed
 1957 040a 1C       		.uleb128 0x1c
 1958 040b 31040000 		.4byte	.LASF67
 1959 040f 05       		.byte	0x5
 1960 0410 14       		.byte	0x14
 1961 0411 A8000000 		.4byte	0xa8
 1962 0415 05       		.uleb128 0x5
 1963 0416 03       		.byte	0x3
 1964 0417 00000000 		.4byte	ts_display
 1965 041b 1C       		.uleb128 0x1c
 1966 041c 0E040000 		.4byte	.LASF68
 1967 0420 05       		.byte	0x5
 1968 0421 16       		.byte	0x16
 1969 0422 9C000000 		.4byte	0x9c
 1970 0426 05       		.uleb128 0x5
 1971 0427 03       		.byte	0x3
 1972 0428 00000000 		.4byte	flag_ts_enc
 1973 042c 1C       		.uleb128 0x1c
 1974 042d 94010000 		.4byte	.LASF69
 1975 0431 05       		.byte	0x5
 1976 0432 17       		.byte	0x17
 1977 0433 9C000000 		.4byte	0x9c
 1978 0437 05       		.uleb128 0x5
 1979 0438 03       		.byte	0x3
 1980 0439 00000000 		.4byte	flag_ts_update
 1981 043d 1C       		.uleb128 0x1c
 1982 043e 3A000000 		.4byte	.LASF70
 1983 0442 05       		.byte	0x5
 1984 0443 18       		.byte	0x18
 1985 0444 9C000000 		.4byte	0x9c
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 43


 1986 0448 05       		.uleb128 0x5
 1987 0449 03       		.byte	0x3
 1988 044a 00000000 		.4byte	flag_ts_speed
 1989 044e 1C       		.uleb128 0x1c
 1990 044f FB010000 		.4byte	.LASF71
 1991 0453 05       		.byte	0x5
 1992 0454 19       		.byte	0x19
 1993 0455 9C000000 		.4byte	0x9c
 1994 0459 05       		.uleb128 0x5
 1995 045a 03       		.byte	0x3
 1996 045b 00000000 		.4byte	flag_ts_display
 1997 045f 1C       		.uleb128 0x1c
 1998 0460 0B020000 		.4byte	.LASF72
 1999 0464 05       		.byte	0x5
 2000 0465 1C       		.byte	0x1c
 2001 0466 9C000000 		.4byte	0x9c
 2002 046a 05       		.uleb128 0x5
 2003 046b 03       		.byte	0x3
 2004 046c 00000000 		.4byte	flag_rx
 2005 0470 1C       		.uleb128 0x1c
 2006 0471 2E000000 		.4byte	.LASF73
 2007 0475 05       		.byte	0x5
 2008 0476 1D       		.byte	0x1d
 2009 0477 9C000000 		.4byte	0x9c
 2010 047b 05       		.uleb128 0x5
 2011 047c 03       		.byte	0x3
 2012 047d 00000000 		.4byte	flag_packet
 2013 0481 1C       		.uleb128 0x1c
 2014 0482 E1020000 		.4byte	.LASF74
 2015 0486 05       		.byte	0x5
 2016 0487 1E       		.byte	0x1e
 2017 0488 9C000000 		.4byte	0x9c
 2018 048c 05       		.uleb128 0x5
 2019 048d 03       		.byte	0x3
 2020 048e 00000000 		.4byte	flag_KB_string
 2021 0492 1C       		.uleb128 0x1c
 2022 0493 78020000 		.4byte	.LASF75
 2023 0497 05       		.byte	0x5
 2024 0498 20       		.byte	0x20
 2025 0499 9C000000 		.4byte	0x9c
 2026 049d 05       		.uleb128 0x5
 2027 049e 03       		.byte	0x3
 2028 049f 00000000 		.4byte	dataready_flag
 2029 04a3 1C       		.uleb128 0x1c
 2030 04a4 60040000 		.4byte	.LASF76
 2031 04a8 05       		.byte	0x5
 2032 04a9 22       		.byte	0x22
 2033 04aa 9C000000 		.4byte	0x9c
 2034 04ae 05       		.uleb128 0x5
 2035 04af 03       		.byte	0x3
 2036 04b0 00000000 		.4byte	flag_rf_transmission_active
 2037 04b4 1D       		.uleb128 0x1d
 2038 04b5 8A000000 		.4byte	0x8a
 2039 04b9 C4040000 		.4byte	0x4c4
 2040 04bd 1E       		.uleb128 0x1e
 2041 04be 7D000000 		.4byte	0x7d
 2042 04c2 3F       		.byte	0x3f
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 44


 2043 04c3 00       		.byte	0
 2044 04c4 1C       		.uleb128 0x1c
 2045 04c5 96030000 		.4byte	.LASF77
 2046 04c9 05       		.byte	0x5
 2047 04ca 25       		.byte	0x25
 2048 04cb B4040000 		.4byte	0x4b4
 2049 04cf 05       		.uleb128 0x5
 2050 04d0 03       		.byte	0x3
 2051 04d1 00000000 		.4byte	displaystring
 2052 04d5 1C       		.uleb128 0x1c
 2053 04d6 69010000 		.4byte	.LASF78
 2054 04da 05       		.byte	0x5
 2055 04db 26       		.byte	0x26
 2056 04dc B4040000 		.4byte	0x4b4
 2057 04e0 05       		.uleb128 0x5
 2058 04e1 03       		.byte	0x3
 2059 04e2 00000000 		.4byte	line
 2060 04e6 1C       		.uleb128 0x1c
 2061 04e7 33020000 		.4byte	.LASF79
 2062 04eb 05       		.byte	0x5
 2063 04ec 26       		.byte	0x26
 2064 04ed B4040000 		.4byte	0x4b4
 2065 04f1 05       		.uleb128 0x5
 2066 04f2 03       		.byte	0x3
 2067 04f3 00000000 		.4byte	entry
 2068 04f7 1D       		.uleb128 0x1d
 2069 04f8 9C000000 		.4byte	0x9c
 2070 04fc 07050000 		.4byte	0x507
 2071 0500 1E       		.uleb128 0x1e
 2072 0501 7D000000 		.4byte	0x7d
 2073 0505 3F       		.byte	0x3f
 2074 0506 00       		.byte	0
 2075 0507 1C       		.uleb128 0x1c
 2076 0508 7F000000 		.4byte	.LASF80
 2077 050c 05       		.byte	0x5
 2078 050d 27       		.byte	0x27
 2079 050e F7040000 		.4byte	0x4f7
 2080 0512 05       		.uleb128 0x5
 2081 0513 03       		.byte	0x3
 2082 0514 00000000 		.4byte	usbBuffer
 2083 0518 1C       		.uleb128 0x1c
 2084 0519 5A000000 		.4byte	.LASF81
 2085 051d 05       		.byte	0x5
 2086 051e 3C       		.byte	0x3c
 2087 051f E6000000 		.4byte	0xe6
 2088 0523 05       		.uleb128 0x5
 2089 0524 03       		.byte	0x3
 2090 0525 00000000 		.4byte	system_state
 2091 0529 1C       		.uleb128 0x1c
 2092 052a EA010000 		.4byte	.LASF82
 2093 052e 01       		.byte	0x1
 2094 052f 29       		.byte	0x29
 2095 0530 BF010000 		.4byte	0x1bf
 2096 0534 05       		.uleb128 0x5
 2097 0535 03       		.byte	0x3
 2098 0536 00000000 		.4byte	currentDirection
 2099 053a 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 45


 2100 053b 45020000 		.4byte	.LASF83
 2101 053f 01       		.byte	0x1
 2102 0540 2A       		.byte	0x2a
 2103 0541 BF010000 		.4byte	0x1bf
 2104 0545 05       		.uleb128 0x5
 2105 0546 03       		.byte	0x3
 2106 0547 00000000 		.4byte	previousDirection
 2107 054b 1B       		.uleb128 0x1b
 2108 054c 733100   		.ascii	"s1\000"
 2109 054f 01       		.byte	0x1
 2110 0550 2C       		.byte	0x2c
 2111 0551 9C000000 		.4byte	0x9c
 2112 0555 05       		.uleb128 0x5
 2113 0556 03       		.byte	0x3
 2114 0557 00000000 		.4byte	s1
 2115 055b 1B       		.uleb128 0x1b
 2116 055c 733200   		.ascii	"s2\000"
 2117 055f 01       		.byte	0x1
 2118 0560 2D       		.byte	0x2d
 2119 0561 9C000000 		.4byte	0x9c
 2120 0565 05       		.uleb128 0x5
 2121 0566 03       		.byte	0x3
 2122 0567 00000000 		.4byte	s2
 2123 056b 1B       		.uleb128 0x1b
 2124 056c 733300   		.ascii	"s3\000"
 2125 056f 01       		.byte	0x1
 2126 0570 2E       		.byte	0x2e
 2127 0571 9C000000 		.4byte	0x9c
 2128 0575 05       		.uleb128 0x5
 2129 0576 03       		.byte	0x3
 2130 0577 00000000 		.4byte	s3
 2131 057b 1B       		.uleb128 0x1b
 2132 057c 733400   		.ascii	"s4\000"
 2133 057f 01       		.byte	0x1
 2134 0580 2F       		.byte	0x2f
 2135 0581 9C000000 		.4byte	0x9c
 2136 0585 05       		.uleb128 0x5
 2137 0586 03       		.byte	0x3
 2138 0587 00000000 		.4byte	s4
 2139 058b 1B       		.uleb128 0x1b
 2140 058c 733500   		.ascii	"s5\000"
 2141 058f 01       		.byte	0x1
 2142 0590 30       		.byte	0x30
 2143 0591 9C000000 		.4byte	0x9c
 2144 0595 05       		.uleb128 0x5
 2145 0596 03       		.byte	0x3
 2146 0597 00000000 		.4byte	s5
 2147 059b 1B       		.uleb128 0x1b
 2148 059c 733600   		.ascii	"s6\000"
 2149 059f 01       		.byte	0x1
 2150 05a0 31       		.byte	0x31
 2151 05a1 9C000000 		.4byte	0x9c
 2152 05a5 05       		.uleb128 0x5
 2153 05a6 03       		.byte	0x3
 2154 05a7 00000000 		.4byte	s6
 2155 05ab 1C       		.uleb128 0x1c
 2156 05ac 21020000 		.4byte	.LASF84
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 46


 2157 05b0 01       		.byte	0x1
 2158 05b1 35       		.byte	0x35
 2159 05b2 B4000000 		.4byte	0xb4
 2160 05b6 05       		.uleb128 0x5
 2161 05b7 03       		.byte	0x3
 2162 05b8 00000000 		.4byte	totalMilliseconds
 2163 05bc 1C       		.uleb128 0x1c
 2164 05bd 57020000 		.4byte	.LASF85
 2165 05c1 01       		.byte	0x1
 2166 05c2 36       		.byte	0x36
 2167 05c3 B4000000 		.4byte	0xb4
 2168 05c7 05       		.uleb128 0x5
 2169 05c8 03       		.byte	0x3
 2170 05c9 00000000 		.4byte	totalDistance
 2171 05cd 1D       		.uleb128 0x1d
 2172 05ce 8A000000 		.4byte	0x8a
 2173 05d2 DD050000 		.4byte	0x5dd
 2174 05d6 1E       		.uleb128 0x1e
 2175 05d7 7D000000 		.4byte	0x7d
 2176 05db 44       		.byte	0x44
 2177 05dc 00       		.byte	0
 2178 05dd 1C       		.uleb128 0x1c
 2179 05de B9030000 		.4byte	.LASF86
 2180 05e2 01       		.byte	0x1
 2181 05e3 38       		.byte	0x38
 2182 05e4 CD050000 		.4byte	0x5cd
 2183 05e8 05       		.uleb128 0x5
 2184 05e9 03       		.byte	0x3
 2185 05ea 00000000 		.4byte	buffer
 2186 05ee 1C       		.uleb128 0x1c
 2187 05ef 6A030000 		.4byte	.LASF87
 2188 05f3 01       		.byte	0x1
 2189 05f4 39       		.byte	0x39
 2190 05f5 68000000 		.4byte	0x68
 2191 05f9 05       		.uleb128 0x5
 2192 05fa 03       		.byte	0x3
 2193 05fb 00000000 		.4byte	quadDec2Count
 2194 05ff 1C       		.uleb128 0x1c
 2195 0600 D8020000 		.4byte	.LASF88
 2196 0604 01       		.byte	0x1
 2197 0605 3A       		.byte	0x3a
 2198 0606 68000000 		.4byte	0x68
 2199 060a 05       		.uleb128 0x5
 2200 060b 03       		.byte	0x3
 2201 060c 00000000 		.4byte	timerInt
 2202 0610 1C       		.uleb128 0x1c
 2203 0611 65020000 		.4byte	.LASF89
 2204 0615 01       		.byte	0x1
 2205 0616 3B       		.byte	0x3b
 2206 0617 68000000 		.4byte	0x68
 2207 061b 05       		.uleb128 0x5
 2208 061c 03       		.byte	0x3
 2209 061d 00000000 		.4byte	keepLedOn
 2210 0621 00       		.byte	0
 2211              		.section	.debug_abbrev,"",%progbits
 2212              	.Ldebug_abbrev0:
 2213 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 47


 2214 0001 11       		.uleb128 0x11
 2215 0002 01       		.byte	0x1
 2216 0003 25       		.uleb128 0x25
 2217 0004 0E       		.uleb128 0xe
 2218 0005 13       		.uleb128 0x13
 2219 0006 0B       		.uleb128 0xb
 2220 0007 03       		.uleb128 0x3
 2221 0008 0E       		.uleb128 0xe
 2222 0009 1B       		.uleb128 0x1b
 2223 000a 0E       		.uleb128 0xe
 2224 000b 55       		.uleb128 0x55
 2225 000c 17       		.uleb128 0x17
 2226 000d 11       		.uleb128 0x11
 2227 000e 01       		.uleb128 0x1
 2228 000f 10       		.uleb128 0x10
 2229 0010 17       		.uleb128 0x17
 2230 0011 00       		.byte	0
 2231 0012 00       		.byte	0
 2232 0013 02       		.uleb128 0x2
 2233 0014 24       		.uleb128 0x24
 2234 0015 00       		.byte	0
 2235 0016 0B       		.uleb128 0xb
 2236 0017 0B       		.uleb128 0xb
 2237 0018 3E       		.uleb128 0x3e
 2238 0019 0B       		.uleb128 0xb
 2239 001a 03       		.uleb128 0x3
 2240 001b 0E       		.uleb128 0xe
 2241 001c 00       		.byte	0
 2242 001d 00       		.byte	0
 2243 001e 03       		.uleb128 0x3
 2244 001f 16       		.uleb128 0x16
 2245 0020 00       		.byte	0
 2246 0021 03       		.uleb128 0x3
 2247 0022 0E       		.uleb128 0xe
 2248 0023 3A       		.uleb128 0x3a
 2249 0024 0B       		.uleb128 0xb
 2250 0025 3B       		.uleb128 0x3b
 2251 0026 0B       		.uleb128 0xb
 2252 0027 49       		.uleb128 0x49
 2253 0028 13       		.uleb128 0x13
 2254 0029 00       		.byte	0
 2255 002a 00       		.byte	0
 2256 002b 04       		.uleb128 0x4
 2257 002c 24       		.uleb128 0x24
 2258 002d 00       		.byte	0
 2259 002e 0B       		.uleb128 0xb
 2260 002f 0B       		.uleb128 0xb
 2261 0030 3E       		.uleb128 0x3e
 2262 0031 0B       		.uleb128 0xb
 2263 0032 03       		.uleb128 0x3
 2264 0033 08       		.uleb128 0x8
 2265 0034 00       		.byte	0
 2266 0035 00       		.byte	0
 2267 0036 05       		.uleb128 0x5
 2268 0037 0F       		.uleb128 0xf
 2269 0038 00       		.byte	0
 2270 0039 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 48


 2271 003a 0B       		.uleb128 0xb
 2272 003b 49       		.uleb128 0x49
 2273 003c 13       		.uleb128 0x13
 2274 003d 00       		.byte	0
 2275 003e 00       		.byte	0
 2276 003f 06       		.uleb128 0x6
 2277 0040 16       		.uleb128 0x16
 2278 0041 00       		.byte	0
 2279 0042 03       		.uleb128 0x3
 2280 0043 0E       		.uleb128 0xe
 2281 0044 3A       		.uleb128 0x3a
 2282 0045 0B       		.uleb128 0xb
 2283 0046 3B       		.uleb128 0x3b
 2284 0047 05       		.uleb128 0x5
 2285 0048 49       		.uleb128 0x49
 2286 0049 13       		.uleb128 0x13
 2287 004a 00       		.byte	0
 2288 004b 00       		.byte	0
 2289 004c 07       		.uleb128 0x7
 2290 004d 13       		.uleb128 0x13
 2291 004e 01       		.byte	0x1
 2292 004f 03       		.uleb128 0x3
 2293 0050 0E       		.uleb128 0xe
 2294 0051 0B       		.uleb128 0xb
 2295 0052 0B       		.uleb128 0xb
 2296 0053 3A       		.uleb128 0x3a
 2297 0054 0B       		.uleb128 0xb
 2298 0055 3B       		.uleb128 0x3b
 2299 0056 0B       		.uleb128 0xb
 2300 0057 01       		.uleb128 0x1
 2301 0058 13       		.uleb128 0x13
 2302 0059 00       		.byte	0
 2303 005a 00       		.byte	0
 2304 005b 08       		.uleb128 0x8
 2305 005c 0D       		.uleb128 0xd
 2306 005d 00       		.byte	0
 2307 005e 03       		.uleb128 0x3
 2308 005f 0E       		.uleb128 0xe
 2309 0060 3A       		.uleb128 0x3a
 2310 0061 0B       		.uleb128 0xb
 2311 0062 3B       		.uleb128 0x3b
 2312 0063 0B       		.uleb128 0xb
 2313 0064 49       		.uleb128 0x49
 2314 0065 13       		.uleb128 0x13
 2315 0066 38       		.uleb128 0x38
 2316 0067 0B       		.uleb128 0xb
 2317 0068 00       		.byte	0
 2318 0069 00       		.byte	0
 2319 006a 09       		.uleb128 0x9
 2320 006b 04       		.uleb128 0x4
 2321 006c 01       		.byte	0x1
 2322 006d 03       		.uleb128 0x3
 2323 006e 0E       		.uleb128 0xe
 2324 006f 0B       		.uleb128 0xb
 2325 0070 0B       		.uleb128 0xb
 2326 0071 49       		.uleb128 0x49
 2327 0072 13       		.uleb128 0x13
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 49


 2328 0073 3A       		.uleb128 0x3a
 2329 0074 0B       		.uleb128 0xb
 2330 0075 3B       		.uleb128 0x3b
 2331 0076 0B       		.uleb128 0xb
 2332 0077 01       		.uleb128 0x1
 2333 0078 13       		.uleb128 0x13
 2334 0079 00       		.byte	0
 2335 007a 00       		.byte	0
 2336 007b 0A       		.uleb128 0xa
 2337 007c 28       		.uleb128 0x28
 2338 007d 00       		.byte	0
 2339 007e 03       		.uleb128 0x3
 2340 007f 0E       		.uleb128 0xe
 2341 0080 1C       		.uleb128 0x1c
 2342 0081 0B       		.uleb128 0xb
 2343 0082 00       		.byte	0
 2344 0083 00       		.byte	0
 2345 0084 0B       		.uleb128 0xb
 2346 0085 2E       		.uleb128 0x2e
 2347 0086 00       		.byte	0
 2348 0087 3F       		.uleb128 0x3f
 2349 0088 19       		.uleb128 0x19
 2350 0089 03       		.uleb128 0x3
 2351 008a 0E       		.uleb128 0xe
 2352 008b 3A       		.uleb128 0x3a
 2353 008c 0B       		.uleb128 0xb
 2354 008d 3B       		.uleb128 0x3b
 2355 008e 0B       		.uleb128 0xb
 2356 008f 27       		.uleb128 0x27
 2357 0090 19       		.uleb128 0x19
 2358 0091 11       		.uleb128 0x11
 2359 0092 01       		.uleb128 0x1
 2360 0093 12       		.uleb128 0x12
 2361 0094 06       		.uleb128 0x6
 2362 0095 40       		.uleb128 0x40
 2363 0096 18       		.uleb128 0x18
 2364 0097 9642     		.uleb128 0x2116
 2365 0099 19       		.uleb128 0x19
 2366 009a 00       		.byte	0
 2367 009b 00       		.byte	0
 2368 009c 0C       		.uleb128 0xc
 2369 009d 2E       		.uleb128 0x2e
 2370 009e 00       		.byte	0
 2371 009f 3F       		.uleb128 0x3f
 2372 00a0 19       		.uleb128 0x19
 2373 00a1 03       		.uleb128 0x3
 2374 00a2 0E       		.uleb128 0xe
 2375 00a3 3A       		.uleb128 0x3a
 2376 00a4 0B       		.uleb128 0xb
 2377 00a5 3B       		.uleb128 0x3b
 2378 00a6 0B       		.uleb128 0xb
 2379 00a7 49       		.uleb128 0x49
 2380 00a8 13       		.uleb128 0x13
 2381 00a9 11       		.uleb128 0x11
 2382 00aa 01       		.uleb128 0x1
 2383 00ab 12       		.uleb128 0x12
 2384 00ac 06       		.uleb128 0x6
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 50


 2385 00ad 40       		.uleb128 0x40
 2386 00ae 18       		.uleb128 0x18
 2387 00af 9642     		.uleb128 0x2116
 2388 00b1 19       		.uleb128 0x19
 2389 00b2 00       		.byte	0
 2390 00b3 00       		.byte	0
 2391 00b4 0D       		.uleb128 0xd
 2392 00b5 2E       		.uleb128 0x2e
 2393 00b6 01       		.byte	0x1
 2394 00b7 3F       		.uleb128 0x3f
 2395 00b8 19       		.uleb128 0x19
 2396 00b9 03       		.uleb128 0x3
 2397 00ba 0E       		.uleb128 0xe
 2398 00bb 3A       		.uleb128 0x3a
 2399 00bc 0B       		.uleb128 0xb
 2400 00bd 3B       		.uleb128 0x3b
 2401 00be 0B       		.uleb128 0xb
 2402 00bf 27       		.uleb128 0x27
 2403 00c0 19       		.uleb128 0x19
 2404 00c1 49       		.uleb128 0x49
 2405 00c2 13       		.uleb128 0x13
 2406 00c3 11       		.uleb128 0x11
 2407 00c4 01       		.uleb128 0x1
 2408 00c5 12       		.uleb128 0x12
 2409 00c6 06       		.uleb128 0x6
 2410 00c7 40       		.uleb128 0x40
 2411 00c8 18       		.uleb128 0x18
 2412 00c9 9642     		.uleb128 0x2116
 2413 00cb 19       		.uleb128 0x19
 2414 00cc 01       		.uleb128 0x1
 2415 00cd 13       		.uleb128 0x13
 2416 00ce 00       		.byte	0
 2417 00cf 00       		.byte	0
 2418 00d0 0E       		.uleb128 0xe
 2419 00d1 05       		.uleb128 0x5
 2420 00d2 00       		.byte	0
 2421 00d3 03       		.uleb128 0x3
 2422 00d4 0E       		.uleb128 0xe
 2423 00d5 3A       		.uleb128 0x3a
 2424 00d6 0B       		.uleb128 0xb
 2425 00d7 3B       		.uleb128 0x3b
 2426 00d8 0B       		.uleb128 0xb
 2427 00d9 49       		.uleb128 0x49
 2428 00da 13       		.uleb128 0x13
 2429 00db 02       		.uleb128 0x2
 2430 00dc 18       		.uleb128 0x18
 2431 00dd 00       		.byte	0
 2432 00de 00       		.byte	0
 2433 00df 0F       		.uleb128 0xf
 2434 00e0 34       		.uleb128 0x34
 2435 00e1 00       		.byte	0
 2436 00e2 03       		.uleb128 0x3
 2437 00e3 08       		.uleb128 0x8
 2438 00e4 3A       		.uleb128 0x3a
 2439 00e5 0B       		.uleb128 0xb
 2440 00e6 3B       		.uleb128 0x3b
 2441 00e7 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 51


 2442 00e8 49       		.uleb128 0x49
 2443 00e9 13       		.uleb128 0x13
 2444 00ea 02       		.uleb128 0x2
 2445 00eb 18       		.uleb128 0x18
 2446 00ec 00       		.byte	0
 2447 00ed 00       		.byte	0
 2448 00ee 10       		.uleb128 0x10
 2449 00ef 2E       		.uleb128 0x2e
 2450 00f0 00       		.byte	0
 2451 00f1 3F       		.uleb128 0x3f
 2452 00f2 19       		.uleb128 0x19
 2453 00f3 03       		.uleb128 0x3
 2454 00f4 0E       		.uleb128 0xe
 2455 00f5 3A       		.uleb128 0x3a
 2456 00f6 0B       		.uleb128 0xb
 2457 00f7 3B       		.uleb128 0x3b
 2458 00f8 0B       		.uleb128 0xb
 2459 00f9 11       		.uleb128 0x11
 2460 00fa 01       		.uleb128 0x1
 2461 00fb 12       		.uleb128 0x12
 2462 00fc 06       		.uleb128 0x6
 2463 00fd 40       		.uleb128 0x40
 2464 00fe 18       		.uleb128 0x18
 2465 00ff 9742     		.uleb128 0x2117
 2466 0101 19       		.uleb128 0x19
 2467 0102 00       		.byte	0
 2468 0103 00       		.byte	0
 2469 0104 11       		.uleb128 0x11
 2470 0105 2E       		.uleb128 0x2e
 2471 0106 01       		.byte	0x1
 2472 0107 3F       		.uleb128 0x3f
 2473 0108 19       		.uleb128 0x19
 2474 0109 03       		.uleb128 0x3
 2475 010a 0E       		.uleb128 0xe
 2476 010b 3A       		.uleb128 0x3a
 2477 010c 0B       		.uleb128 0xb
 2478 010d 3B       		.uleb128 0x3b
 2479 010e 0B       		.uleb128 0xb
 2480 010f 49       		.uleb128 0x49
 2481 0110 13       		.uleb128 0x13
 2482 0111 11       		.uleb128 0x11
 2483 0112 01       		.uleb128 0x1
 2484 0113 12       		.uleb128 0x12
 2485 0114 06       		.uleb128 0x6
 2486 0115 40       		.uleb128 0x40
 2487 0116 18       		.uleb128 0x18
 2488 0117 9742     		.uleb128 0x2117
 2489 0119 19       		.uleb128 0x19
 2490 011a 01       		.uleb128 0x1
 2491 011b 13       		.uleb128 0x13
 2492 011c 00       		.byte	0
 2493 011d 00       		.byte	0
 2494 011e 12       		.uleb128 0x12
 2495 011f 34       		.uleb128 0x34
 2496 0120 00       		.byte	0
 2497 0121 03       		.uleb128 0x3
 2498 0122 0E       		.uleb128 0xe
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 52


 2499 0123 3A       		.uleb128 0x3a
 2500 0124 0B       		.uleb128 0xb
 2501 0125 3B       		.uleb128 0x3b
 2502 0126 0B       		.uleb128 0xb
 2503 0127 49       		.uleb128 0x49
 2504 0128 13       		.uleb128 0x13
 2505 0129 02       		.uleb128 0x2
 2506 012a 18       		.uleb128 0x18
 2507 012b 00       		.byte	0
 2508 012c 00       		.byte	0
 2509 012d 13       		.uleb128 0x13
 2510 012e 2E       		.uleb128 0x2e
 2511 012f 00       		.byte	0
 2512 0130 3F       		.uleb128 0x3f
 2513 0131 19       		.uleb128 0x19
 2514 0132 03       		.uleb128 0x3
 2515 0133 0E       		.uleb128 0xe
 2516 0134 3A       		.uleb128 0x3a
 2517 0135 0B       		.uleb128 0xb
 2518 0136 3B       		.uleb128 0x3b
 2519 0137 05       		.uleb128 0x5
 2520 0138 11       		.uleb128 0x11
 2521 0139 01       		.uleb128 0x1
 2522 013a 12       		.uleb128 0x12
 2523 013b 06       		.uleb128 0x6
 2524 013c 40       		.uleb128 0x40
 2525 013d 18       		.uleb128 0x18
 2526 013e 9642     		.uleb128 0x2116
 2527 0140 19       		.uleb128 0x19
 2528 0141 00       		.byte	0
 2529 0142 00       		.byte	0
 2530 0143 14       		.uleb128 0x14
 2531 0144 2E       		.uleb128 0x2e
 2532 0145 01       		.byte	0x1
 2533 0146 3F       		.uleb128 0x3f
 2534 0147 19       		.uleb128 0x19
 2535 0148 03       		.uleb128 0x3
 2536 0149 0E       		.uleb128 0xe
 2537 014a 3A       		.uleb128 0x3a
 2538 014b 0B       		.uleb128 0xb
 2539 014c 3B       		.uleb128 0x3b
 2540 014d 05       		.uleb128 0x5
 2541 014e 27       		.uleb128 0x27
 2542 014f 19       		.uleb128 0x19
 2543 0150 11       		.uleb128 0x11
 2544 0151 01       		.uleb128 0x1
 2545 0152 12       		.uleb128 0x12
 2546 0153 06       		.uleb128 0x6
 2547 0154 40       		.uleb128 0x40
 2548 0155 18       		.uleb128 0x18
 2549 0156 9642     		.uleb128 0x2116
 2550 0158 19       		.uleb128 0x19
 2551 0159 01       		.uleb128 0x1
 2552 015a 13       		.uleb128 0x13
 2553 015b 00       		.byte	0
 2554 015c 00       		.byte	0
 2555 015d 15       		.uleb128 0x15
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 53


 2556 015e 05       		.uleb128 0x5
 2557 015f 00       		.byte	0
 2558 0160 03       		.uleb128 0x3
 2559 0161 08       		.uleb128 0x8
 2560 0162 3A       		.uleb128 0x3a
 2561 0163 0B       		.uleb128 0xb
 2562 0164 3B       		.uleb128 0x3b
 2563 0165 05       		.uleb128 0x5
 2564 0166 49       		.uleb128 0x49
 2565 0167 13       		.uleb128 0x13
 2566 0168 02       		.uleb128 0x2
 2567 0169 18       		.uleb128 0x18
 2568 016a 00       		.byte	0
 2569 016b 00       		.byte	0
 2570 016c 16       		.uleb128 0x16
 2571 016d 2E       		.uleb128 0x2e
 2572 016e 01       		.byte	0x1
 2573 016f 3F       		.uleb128 0x3f
 2574 0170 19       		.uleb128 0x19
 2575 0171 03       		.uleb128 0x3
 2576 0172 0E       		.uleb128 0xe
 2577 0173 3A       		.uleb128 0x3a
 2578 0174 0B       		.uleb128 0xb
 2579 0175 3B       		.uleb128 0x3b
 2580 0176 05       		.uleb128 0x5
 2581 0177 11       		.uleb128 0x11
 2582 0178 01       		.uleb128 0x1
 2583 0179 12       		.uleb128 0x12
 2584 017a 06       		.uleb128 0x6
 2585 017b 40       		.uleb128 0x40
 2586 017c 18       		.uleb128 0x18
 2587 017d 9642     		.uleb128 0x2116
 2588 017f 19       		.uleb128 0x19
 2589 0180 01       		.uleb128 0x1
 2590 0181 13       		.uleb128 0x13
 2591 0182 00       		.byte	0
 2592 0183 00       		.byte	0
 2593 0184 17       		.uleb128 0x17
 2594 0185 34       		.uleb128 0x34
 2595 0186 00       		.byte	0
 2596 0187 03       		.uleb128 0x3
 2597 0188 0E       		.uleb128 0xe
 2598 0189 3A       		.uleb128 0x3a
 2599 018a 0B       		.uleb128 0xb
 2600 018b 3B       		.uleb128 0x3b
 2601 018c 05       		.uleb128 0x5
 2602 018d 49       		.uleb128 0x49
 2603 018e 13       		.uleb128 0x13
 2604 018f 02       		.uleb128 0x2
 2605 0190 18       		.uleb128 0x18
 2606 0191 00       		.byte	0
 2607 0192 00       		.byte	0
 2608 0193 18       		.uleb128 0x18
 2609 0194 34       		.uleb128 0x34
 2610 0195 00       		.byte	0
 2611 0196 03       		.uleb128 0x3
 2612 0197 08       		.uleb128 0x8
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 54


 2613 0198 3A       		.uleb128 0x3a
 2614 0199 0B       		.uleb128 0xb
 2615 019a 3B       		.uleb128 0x3b
 2616 019b 05       		.uleb128 0x5
 2617 019c 49       		.uleb128 0x49
 2618 019d 13       		.uleb128 0x13
 2619 019e 02       		.uleb128 0x2
 2620 019f 18       		.uleb128 0x18
 2621 01a0 00       		.byte	0
 2622 01a1 00       		.byte	0
 2623 01a2 19       		.uleb128 0x19
 2624 01a3 34       		.uleb128 0x34
 2625 01a4 00       		.byte	0
 2626 01a5 03       		.uleb128 0x3
 2627 01a6 0E       		.uleb128 0xe
 2628 01a7 3A       		.uleb128 0x3a
 2629 01a8 0B       		.uleb128 0xb
 2630 01a9 3B       		.uleb128 0x3b
 2631 01aa 05       		.uleb128 0x5
 2632 01ab 49       		.uleb128 0x49
 2633 01ac 13       		.uleb128 0x13
 2634 01ad 3F       		.uleb128 0x3f
 2635 01ae 19       		.uleb128 0x19
 2636 01af 3C       		.uleb128 0x3c
 2637 01b0 19       		.uleb128 0x19
 2638 01b1 00       		.byte	0
 2639 01b2 00       		.byte	0
 2640 01b3 1A       		.uleb128 0x1a
 2641 01b4 35       		.uleb128 0x35
 2642 01b5 00       		.byte	0
 2643 01b6 49       		.uleb128 0x49
 2644 01b7 13       		.uleb128 0x13
 2645 01b8 00       		.byte	0
 2646 01b9 00       		.byte	0
 2647 01ba 1B       		.uleb128 0x1b
 2648 01bb 34       		.uleb128 0x34
 2649 01bc 00       		.byte	0
 2650 01bd 03       		.uleb128 0x3
 2651 01be 08       		.uleb128 0x8
 2652 01bf 3A       		.uleb128 0x3a
 2653 01c0 0B       		.uleb128 0xb
 2654 01c1 3B       		.uleb128 0x3b
 2655 01c2 0B       		.uleb128 0xb
 2656 01c3 49       		.uleb128 0x49
 2657 01c4 13       		.uleb128 0x13
 2658 01c5 3F       		.uleb128 0x3f
 2659 01c6 19       		.uleb128 0x19
 2660 01c7 02       		.uleb128 0x2
 2661 01c8 18       		.uleb128 0x18
 2662 01c9 00       		.byte	0
 2663 01ca 00       		.byte	0
 2664 01cb 1C       		.uleb128 0x1c
 2665 01cc 34       		.uleb128 0x34
 2666 01cd 00       		.byte	0
 2667 01ce 03       		.uleb128 0x3
 2668 01cf 0E       		.uleb128 0xe
 2669 01d0 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 55


 2670 01d1 0B       		.uleb128 0xb
 2671 01d2 3B       		.uleb128 0x3b
 2672 01d3 0B       		.uleb128 0xb
 2673 01d4 49       		.uleb128 0x49
 2674 01d5 13       		.uleb128 0x13
 2675 01d6 3F       		.uleb128 0x3f
 2676 01d7 19       		.uleb128 0x19
 2677 01d8 02       		.uleb128 0x2
 2678 01d9 18       		.uleb128 0x18
 2679 01da 00       		.byte	0
 2680 01db 00       		.byte	0
 2681 01dc 1D       		.uleb128 0x1d
 2682 01dd 01       		.uleb128 0x1
 2683 01de 01       		.byte	0x1
 2684 01df 49       		.uleb128 0x49
 2685 01e0 13       		.uleb128 0x13
 2686 01e1 01       		.uleb128 0x1
 2687 01e2 13       		.uleb128 0x13
 2688 01e3 00       		.byte	0
 2689 01e4 00       		.byte	0
 2690 01e5 1E       		.uleb128 0x1e
 2691 01e6 21       		.uleb128 0x21
 2692 01e7 00       		.byte	0
 2693 01e8 49       		.uleb128 0x49
 2694 01e9 13       		.uleb128 0x13
 2695 01ea 2F       		.uleb128 0x2f
 2696 01eb 0B       		.uleb128 0xb
 2697 01ec 00       		.byte	0
 2698 01ed 00       		.byte	0
 2699 01ee 00       		.byte	0
 2700              		.section	.debug_aranges,"",%progbits
 2701 0000 94000000 		.4byte	0x94
 2702 0004 0200     		.2byte	0x2
 2703 0006 00000000 		.4byte	.Ldebug_info0
 2704 000a 04       		.byte	0x4
 2705 000b 00       		.byte	0
 2706 000c 0000     		.2byte	0
 2707 000e 0000     		.2byte	0
 2708 0010 00000000 		.4byte	.LFB64
 2709 0014 C8000000 		.4byte	.LFE64-.LFB64
 2710 0018 00000000 		.4byte	.LFB65
 2711 001c 18000000 		.4byte	.LFE65-.LFB65
 2712 0020 00000000 		.4byte	.LFB66
 2713 0024 18000000 		.4byte	.LFE66-.LFB66
 2714 0028 00000000 		.4byte	.LFB67
 2715 002c 18000000 		.4byte	.LFE67-.LFB67
 2716 0030 00000000 		.4byte	.LFB68
 2717 0034 18000000 		.4byte	.LFE68-.LFB68
 2718 0038 00000000 		.4byte	.LFB69
 2719 003c 18000000 		.4byte	.LFE69-.LFB69
 2720 0040 00000000 		.4byte	.LFB70
 2721 0044 18000000 		.4byte	.LFE70-.LFB70
 2722 0048 00000000 		.4byte	.LFB71
 2723 004c 1A000000 		.4byte	.LFE71-.LFB71
 2724 0050 00000000 		.4byte	.LFB72
 2725 0054 E0000000 		.4byte	.LFE72-.LFB72
 2726 0058 00000000 		.4byte	.LFB73
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 56


 2727 005c 6C000000 		.4byte	.LFE73-.LFB73
 2728 0060 00000000 		.4byte	.LFB74
 2729 0064 48000000 		.4byte	.LFE74-.LFB74
 2730 0068 00000000 		.4byte	.LFB75
 2731 006c 98010000 		.4byte	.LFE75-.LFB75
 2732 0070 00000000 		.4byte	.LFB76
 2733 0074 68000000 		.4byte	.LFE76-.LFB76
 2734 0078 00000000 		.4byte	.LFB77
 2735 007c 3E000000 		.4byte	.LFE77-.LFB77
 2736 0080 00000000 		.4byte	.LFB78
 2737 0084 26000000 		.4byte	.LFE78-.LFB78
 2738 0088 00000000 		.4byte	.LFB79
 2739 008c C8000000 		.4byte	.LFE79-.LFB79
 2740 0090 00000000 		.4byte	0
 2741 0094 00000000 		.4byte	0
 2742              		.section	.debug_ranges,"",%progbits
 2743              	.Ldebug_ranges0:
 2744 0000 00000000 		.4byte	.LFB64
 2745 0004 C8000000 		.4byte	.LFE64
 2746 0008 00000000 		.4byte	.LFB65
 2747 000c 18000000 		.4byte	.LFE65
 2748 0010 00000000 		.4byte	.LFB66
 2749 0014 18000000 		.4byte	.LFE66
 2750 0018 00000000 		.4byte	.LFB67
 2751 001c 18000000 		.4byte	.LFE67
 2752 0020 00000000 		.4byte	.LFB68
 2753 0024 18000000 		.4byte	.LFE68
 2754 0028 00000000 		.4byte	.LFB69
 2755 002c 18000000 		.4byte	.LFE69
 2756 0030 00000000 		.4byte	.LFB70
 2757 0034 18000000 		.4byte	.LFE70
 2758 0038 00000000 		.4byte	.LFB71
 2759 003c 1A000000 		.4byte	.LFE71
 2760 0040 00000000 		.4byte	.LFB72
 2761 0044 E0000000 		.4byte	.LFE72
 2762 0048 00000000 		.4byte	.LFB73
 2763 004c 6C000000 		.4byte	.LFE73
 2764 0050 00000000 		.4byte	.LFB74
 2765 0054 48000000 		.4byte	.LFE74
 2766 0058 00000000 		.4byte	.LFB75
 2767 005c 98010000 		.4byte	.LFE75
 2768 0060 00000000 		.4byte	.LFB76
 2769 0064 68000000 		.4byte	.LFE76
 2770 0068 00000000 		.4byte	.LFB77
 2771 006c 3E000000 		.4byte	.LFE77
 2772 0070 00000000 		.4byte	.LFB78
 2773 0074 26000000 		.4byte	.LFE78
 2774 0078 00000000 		.4byte	.LFB79
 2775 007c C8000000 		.4byte	.LFE79
 2776 0080 00000000 		.4byte	0
 2777 0084 00000000 		.4byte	0
 2778              		.section	.debug_line,"",%progbits
 2779              	.Ldebug_line0:
 2780 0000 B4030000 		.section	.debug_str,"MS",%progbits,1
 2780      02005601 
 2780      00000201 
 2780      FB0E0D00 
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 57


 2780      01010101 
 2781              	.LASF51:
 2782 0000 53365F44 		.ascii	"S6_DETECTED\000"
 2782      45544543 
 2782      54454400 
 2783              	.LASF60:
 2784 000c 75736250 		.ascii	"usbPutChar\000"
 2784      75744368 
 2784      617200
 2785              	.LASF40:
 2786 0017 5475726E 		.ascii	"TurnLeft\000"
 2786      4C656674 
 2786      00
 2787              	.LASF64:
 2788 0020 74735F65 		.ascii	"ts_enc\000"
 2788      6E6300
 2789              	.LASF20:
 2790 0027 646F7562 		.ascii	"double\000"
 2790      6C6500
 2791              	.LASF73:
 2792 002e 666C6167 		.ascii	"flag_packet\000"
 2792      5F706163 
 2792      6B657400 
 2793              	.LASF70:
 2794 003a 666C6167 		.ascii	"flag_ts_speed\000"
 2794      5F74735F 
 2794      73706565 
 2794      6400
 2795              	.LASF34:
 2796 0048 67325F78 		.ascii	"g2_xpos\000"
 2796      706F7300 
 2797              	.LASF2:
 2798 0050 73686F72 		.ascii	"short int\000"
 2798      7420696E 
 2798      7400
 2799              	.LASF81:
 2800 005a 73797374 		.ascii	"system_state\000"
 2800      656D5F73 
 2800      74617465 
 2800      00
 2801              	.LASF10:
 2802 0067 73697A65 		.ascii	"sizetype\000"
 2802      74797065 
 2802      00
 2803              	.LASF94:
 2804 0070 44697265 		.ascii	"DirectionState\000"
 2804      6374696F 
 2804      6E537461 
 2804      746500
 2805              	.LASF80:
 2806 007f 75736242 		.ascii	"usbBuffer\000"
 2806      75666665 
 2806      7200
 2807              	.LASF90:
 2808 0089 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2808      43313120 
 2808      352E342E 
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 58


 2808      31203230 
 2808      31363036 
 2809 00bc 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2809      20726576 
 2809      6973696F 
 2809      6E203233 
 2809      37373135 
 2810 00ef 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2810      66756E63 
 2810      74696F6E 
 2810      2D736563 
 2810      74696F6E 
 2811              	.LASF53:
 2812 0117 6D61696E 		.ascii	"main\000"
 2812      00
 2813              	.LASF49:
 2814 011c 53345F44 		.ascii	"S4_DETECTED\000"
 2814      45544543 
 2814      54454400 
 2815              	.LASF41:
 2816 0128 41646A75 		.ascii	"AdjustToTheLeft\000"
 2816      7374546F 
 2816      5468654C 
 2816      65667400 
 2817              	.LASF15:
 2818 0138 75696E74 		.ascii	"uint16\000"
 2818      313600
 2819              	.LASF22:
 2820 013f 696E6465 		.ascii	"index\000"
 2820      7800
 2821              	.LASF45:
 2822 0145 73706565 		.ascii	"speedTimer\000"
 2822      6454696D 
 2822      657200
 2823              	.LASF18:
 2824 0150 696E7431 		.ascii	"int16\000"
 2824      3600
 2825              	.LASF14:
 2826 0156 75696E74 		.ascii	"uint8\000"
 2826      3800
 2827              	.LASF33:
 2828 015c 67315F64 		.ascii	"g1_direction\000"
 2828      69726563 
 2828      74696F6E 
 2828      00
 2829              	.LASF78:
 2830 0169 6C696E65 		.ascii	"line\000"
 2830      00
 2831              	.LASF19:
 2832 016e 666C6F61 		.ascii	"float\000"
 2832      7400
 2833              	.LASF6:
 2834 0174 6C6F6E67 		.ascii	"long long int\000"
 2834      206C6F6E 
 2834      6720696E 
 2834      7400
 2835              	.LASF58:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 59


 2836 0182 75736250 		.ascii	"usbPutString\000"
 2836      75745374 
 2836      72696E67 
 2836      00
 2837              	.LASF17:
 2838 018f 696E7438 		.ascii	"int8\000"
 2838      00
 2839              	.LASF69:
 2840 0194 666C6167 		.ascii	"flag_ts_update\000"
 2840      5F74735F 
 2840      75706461 
 2840      746500
 2841              	.LASF35:
 2842 01a3 67325F79 		.ascii	"g2_ypos\000"
 2842      706F7300 
 2843              	.LASF29:
 2844 01ab 67305F64 		.ascii	"g0_direction\000"
 2844      69726563 
 2844      74696F6E 
 2844      00
 2845              	.LASF26:
 2846 01b8 67305F78 		.ascii	"g0_xpos\000"
 2846      706F7300 
 2847              	.LASF4:
 2848 01c0 6C6F6E67 		.ascii	"long int\000"
 2848      20696E74 
 2848      00
 2849              	.LASF57:
 2850 01c9 43686563 		.ascii	"CheckSensorDirection\000"
 2850      6B53656E 
 2850      736F7244 
 2850      69726563 
 2850      74696F6E 
 2851              	.LASF47:
 2852 01de 53325F44 		.ascii	"S2_DETECTED\000"
 2852      45544543 
 2852      54454400 
 2853              	.LASF82:
 2854 01ea 63757272 		.ascii	"currentDirection\000"
 2854      656E7444 
 2854      69726563 
 2854      74696F6E 
 2854      00
 2855              	.LASF71:
 2856 01fb 666C6167 		.ascii	"flag_ts_display\000"
 2856      5F74735F 
 2856      64697370 
 2856      6C617900 
 2857              	.LASF72:
 2858 020b 666C6167 		.ascii	"flag_rx\000"
 2858      5F727800 
 2859              	.LASF1:
 2860 0213 756E7369 		.ascii	"unsigned char\000"
 2860      676E6564 
 2860      20636861 
 2860      7200
 2861              	.LASF84:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 60


 2862 0221 746F7461 		.ascii	"totalMilliseconds\000"
 2862      6C4D696C 
 2862      6C697365 
 2862      636F6E64 
 2862      7300
 2863              	.LASF79:
 2864 0233 656E7472 		.ascii	"entry\000"
 2864      7900
 2865              	.LASF9:
 2866 0239 6C6F6E67 		.ascii	"long double\000"
 2866      20646F75 
 2866      626C6500 
 2867              	.LASF83:
 2868 0245 70726576 		.ascii	"previousDirection\000"
 2868      696F7573 
 2868      44697265 
 2868      6374696F 
 2868      6E00
 2869              	.LASF85:
 2870 0257 746F7461 		.ascii	"totalDistance\000"
 2870      6C446973 
 2870      74616E63 
 2870      6500
 2871              	.LASF89:
 2872 0265 6B656570 		.ascii	"keepLedOn\000"
 2872      4C65644F 
 2872      6E00
 2873              	.LASF28:
 2874 026f 67305F73 		.ascii	"g0_speed\000"
 2874      70656564 
 2874      00
 2875              	.LASF75:
 2876 0278 64617461 		.ascii	"dataready_flag\000"
 2876      72656164 
 2876      795F666C 
 2876      616700
 2877              	.LASF30:
 2878 0287 67315F78 		.ascii	"g1_xpos\000"
 2878      706F7300 
 2879              	.LASF0:
 2880 028f 7369676E 		.ascii	"signed char\000"
 2880      65642063 
 2880      68617200 
 2881              	.LASF13:
 2882 029b 696E7433 		.ascii	"int32_t\000"
 2882      325F7400 
 2883              	.LASF7:
 2884 02a3 6C6F6E67 		.ascii	"long long unsigned int\000"
 2884      206C6F6E 
 2884      6720756E 
 2884      7369676E 
 2884      65642069 
 2885              	.LASF42:
 2886 02ba 41646A75 		.ascii	"AdjustToTheRight\000"
 2886      7374546F 
 2886      54686552 
 2886      69676874 
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 61


 2886      00
 2887              	.LASF8:
 2888 02cb 756E7369 		.ascii	"unsigned int\000"
 2888      676E6564 
 2888      20696E74 
 2888      00
 2889              	.LASF88:
 2890 02d8 74696D65 		.ascii	"timerInt\000"
 2890      72496E74 
 2890      00
 2891              	.LASF74:
 2892 02e1 666C6167 		.ascii	"flag_KB_string\000"
 2892      5F4B425F 
 2892      73747269 
 2892      6E6700
 2893              	.LASF62:
 2894 02f0 75736242 		.ascii	"usbBufCount\000"
 2894      7566436F 
 2894      756E7400 
 2895              	.LASF56:
 2896 02fc 53657452 		.ascii	"SetRobotMovement\000"
 2896      6F626F74 
 2896      4D6F7665 
 2896      6D656E74 
 2896      00
 2897              	.LASF52:
 2898 030d 54494D45 		.ascii	"TIMER_FINISH\000"
 2898      525F4649 
 2898      4E495348 
 2898      00
 2899              	.LASF36:
 2900 031a 67325F73 		.ascii	"g2_speed\000"
 2900      70656564 
 2900      00
 2901              	.LASF50:
 2902 0323 53355F44 		.ascii	"S5_DETECTED\000"
 2902      45544543 
 2902      54454400 
 2903              	.LASF3:
 2904 032f 73686F72 		.ascii	"short unsigned int\000"
 2904      7420756E 
 2904      7369676E 
 2904      65642069 
 2904      6E7400
 2905              	.LASF93:
 2906 0342 64617461 		.ascii	"data_main\000"
 2906      5F6D6169 
 2906      6E00
 2907              	.LASF55:
 2908 034c 52657365 		.ascii	"ResetSensorFlags\000"
 2908      7453656E 
 2908      736F7246 
 2908      6C616773 
 2908      00
 2909              	.LASF11:
 2910 035d 63686172 		.ascii	"char\000"
 2910      00
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 62


 2911              	.LASF38:
 2912 0362 466F7277 		.ascii	"Forward\000"
 2912      61726400 
 2913              	.LASF87:
 2914 036a 71756164 		.ascii	"quadDec2Count\000"
 2914      44656332 
 2914      436F756E 
 2914      7400
 2915              	.LASF31:
 2916 0378 67315F79 		.ascii	"g1_ypos\000"
 2916      706F7300 
 2917              	.LASF37:
 2918 0380 67325F64 		.ascii	"g2_direction\000"
 2918      69726563 
 2918      74696F6E 
 2918      00
 2919              	.LASF32:
 2920 038d 67315F73 		.ascii	"g1_speed\000"
 2920      70656564 
 2920      00
 2921              	.LASF77:
 2922 0396 64697370 		.ascii	"displaystring\000"
 2922      6C617973 
 2922      7472696E 
 2922      6700
 2923              	.LASF23:
 2924 03a4 726F626F 		.ascii	"robot_xpos\000"
 2924      745F7870 
 2924      6F7300
 2925              	.LASF39:
 2926 03af 5475726E 		.ascii	"TurnRight\000"
 2926      52696768 
 2926      7400
 2927              	.LASF86:
 2928 03b9 62756666 		.ascii	"buffer\000"
 2928      657200
 2929              	.LASF16:
 2930 03c0 75696E74 		.ascii	"uint32\000"
 2930      333200
 2931              	.LASF91:
 2932 03c7 6D61696E 		.ascii	"main.c\000"
 2932      2E6300
 2933              	.LASF5:
 2934 03ce 6C6F6E67 		.ascii	"long unsigned int\000"
 2934      20756E73 
 2934      69676E65 
 2934      6420696E 
 2934      7400
 2935              	.LASF61:
 2936 03e0 75736253 		.ascii	"usbStarted\000"
 2936      74617274 
 2936      656400
 2937              	.LASF44:
 2938 03eb 556E6B6E 		.ascii	"Unknown\000"
 2938      6F776E00 
 2939              	.LASF48:
 2940 03f3 53335F44 		.ascii	"S3_DETECTED\000"
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 63


 2940      45544543 
 2940      54454400 
 2941              	.LASF66:
 2942 03ff 74735F73 		.ascii	"ts_speed\000"
 2942      70656564 
 2942      00
 2943              	.LASF59:
 2944 0408 636F756E 		.ascii	"count\000"
 2944      7400
 2945              	.LASF68:
 2946 040e 666C6167 		.ascii	"flag_ts_enc\000"
 2946      5F74735F 
 2946      656E6300 
 2947              	.LASF12:
 2948 041a 5F5F696E 		.ascii	"__int32_t\000"
 2948      7433325F 
 2948      7400
 2949              	.LASF43:
 2950 0424 53746F70 		.ascii	"Stop\000"
 2950      00
 2951              	.LASF27:
 2952 0429 67305F79 		.ascii	"g0_ypos\000"
 2952      706F7300 
 2953              	.LASF67:
 2954 0431 74735F64 		.ascii	"ts_display\000"
 2954      6973706C 
 2954      617900
 2955              	.LASF65:
 2956 043c 74735F75 		.ascii	"ts_update\000"
 2956      70646174 
 2956      6500
 2957              	.LASF96:
 2958 0446 68616E64 		.ascii	"handle_usb\000"
 2958      6C655F75 
 2958      736200
 2959              	.LASF95:
 2960 0451 71756164 		.ascii	"quadCountToRPM\000"
 2960      436F756E 
 2960      74546F52 
 2960      504D00
 2961              	.LASF76:
 2962 0460 666C6167 		.ascii	"flag_rf_transmission_active\000"
 2962      5F72665F 
 2962      7472616E 
 2962      736D6973 
 2962      73696F6E 
 2963              	.LASF24:
 2964 047c 726F626F 		.ascii	"robot_ypos\000"
 2964      745F7970 
 2964      6F7300
 2965              	.LASF63:
 2966 0487 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2966      52784275 
 2966      66666572 
 2966      00
 2967              	.LASF92:
 2968 0494 433A5C50 		.ascii	"C:\\Projects\\University\\301-Robot\\psoc student p"
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cclJxy2u.s 			page 64


 2968      726F6A65 
 2968      6374735C 
 2968      556E6976 
 2968      65727369 
 2969 04c3 61636B5C 		.ascii	"ack\\psoc_code_base\\CS301_Class.cydsn\000"
 2969      70736F63 
 2969      5F636F64 
 2969      655F6261 
 2969      73655C43 
 2970              	.LASF54:
 2971 04e8 64697265 		.ascii	"directionState\000"
 2971      6374696F 
 2971      6E537461 
 2971      746500
 2972              	.LASF21:
 2973 04f7 72737369 		.ascii	"rssi\000"
 2973      00
 2974              	.LASF25:
 2975 04fc 726F626F 		.ascii	"robot_orientation\000"
 2975      745F6F72 
 2975      69656E74 
 2975      6174696F 
 2975      6E00
 2976              	.LASF46:
 2977 050e 53315F44 		.ascii	"S1_DETECTED\000"
 2977      45544543 
 2977      54454400 
 2978              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
