ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.global	currentDirection
 107              		.align	2
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 3


 108              		.type	currentDirection, %object
 109              		.size	currentDirection, 4
 110              	currentDirection:
 111 0044 05000000 		.word	5
 112              		.global	previousDirection
 113              		.align	2
 114              		.type	previousDirection, %object
 115              		.size	previousDirection, 4
 116              	previousDirection:
 117 0048 06000000 		.word	6
 118              		.global	s1
 119              		.bss
 120              		.type	s1, %object
 121              		.size	s1, 1
 122              	s1:
 123 0012 00       		.space	1
 124              		.global	s2
 125              		.type	s2, %object
 126              		.size	s2, 1
 127              	s2:
 128 0013 00       		.space	1
 129              		.global	s3
 130              		.type	s3, %object
 131              		.size	s3, 1
 132              	s3:
 133 0014 00       		.space	1
 134              		.global	s4
 135              		.type	s4, %object
 136              		.size	s4, 1
 137              	s4:
 138 0015 00       		.space	1
 139              		.global	s5
 140              		.type	s5, %object
 141              		.size	s5, 1
 142              	s5:
 143 0016 00       		.space	1
 144              		.global	s6
 145              		.type	s6, %object
 146              		.size	s6, 1
 147              	s6:
 148 0017 00       		.space	1
 149              		.global	totalMilliseconds
 150              		.align	2
 151              		.type	totalMilliseconds, %object
 152              		.size	totalMilliseconds, 4
 153              	totalMilliseconds:
 154 0018 00000000 		.space	4
 155              		.global	totalDistance
 156              		.align	2
 157              		.type	totalDistance, %object
 158              		.size	totalDistance, 4
 159              	totalDistance:
 160 001c 00000000 		.space	4
 161              		.comm	buffer,69,4
 162              		.global	quadDec2Count
 163              		.align	2
 164              		.type	quadDec2Count, %object
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 4


 165              		.size	quadDec2Count, 4
 166              	quadDec2Count:
 167 0020 00000000 		.space	4
 168              		.global	timerInt
 169              		.align	2
 170              		.type	timerInt, %object
 171              		.size	timerInt, 4
 172              	timerInt:
 173 0024 00000000 		.space	4
 174              		.global	keepLedOn
 175              		.align	2
 176              		.type	keepLedOn, %object
 177              		.size	keepLedOn, 4
 178              	keepLedOn:
 179 0028 00000000 		.space	4
 180              		.global	__aeabi_ui2d
 181              		.global	__aeabi_i2d
 182              		.global	__aeabi_ddiv
 183              		.global	__aeabi_dmul
 184              		.global	__aeabi_dadd
 185              		.global	__aeabi_d2uiz
 186              		.section	.text.speedTimer,"ax",%progbits
 187              		.align	2
 188              		.global	speedTimer
 189              		.thumb
 190              		.thumb_func
 191              		.type	speedTimer, %function
 192              	speedTimer:
 193              	.LFB64:
 194              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <string.h>
  19:main.c        **** #include <stdlib.h>
  20:main.c        **** #include <project.h>
  21:main.c        **** //* ========================================
  22:main.c        **** #include "defines.h"
  23:main.c        **** #include "vars.h"
  24:main.c        **** //#include "pathfinding.h"
  25:main.c        **** #include "initialise.h"
  26:main.c        **** #include "movement.h"
  27:main.c        **** //#include "usbUART.h"
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 5


  28:main.c        **** //* ========================================
  29:main.c        **** // USBUART
  30:main.c        **** void usbPutString(char *s);
  31:main.c        **** void usbPutChar(char c);
  32:main.c        **** void handle_usb();
  33:main.c        **** //* ========================================
  34:main.c        **** int16 quadCountToRPM(uint16 count);
  35:main.c        **** //* ========================================
  36:main.c        **** // Sensors, Course correction and Movement Direction.
  37:main.c        **** void ResetSensorFlags();
  38:main.c        **** void SetRobotMovement();
  39:main.c        **** enum DirectionState CheckSensorDirection();
  40:main.c        **** enum DirectionState {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown
  41:main.c        **** enum DirectionState currentDirection = Stop;
  42:main.c        **** enum DirectionState previousDirection = Unknown;
  43:main.c        **** // --- YIPPE
  44:main.c        **** // ----------------------------------------
  45:main.c        **** uint8 s1 = 0; // black = 0, white = 1
  46:main.c        **** uint8 s2 = 0;
  47:main.c        **** uint8 s3 = 0;
  48:main.c        **** uint8 s4 = 0;
  49:main.c        **** uint8 s5 = 0;
  50:main.c        **** uint8 s6 = 0;
  51:main.c        **** //* ========================================
  52:main.c        **** // Calculating Distance
  53:main.c        **** #define WHEEL_DIAMETER_MM 65
  54:main.c        **** uint32 totalMilliseconds = 0;
  55:main.c        **** uint32 totalDistance = 0; // in mm
  56:main.c        **** //* ========================================
  57:main.c        **** char buffer[69];
  58:main.c        **** int quadDec2Count = 0;
  59:main.c        **** int timerInt = 0;
  60:main.c        **** int keepLedOn = 0;
  61:main.c        **** 
  62:main.c        **** 
  63:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  64:main.c        **** 
  65:main.c        **** CY_ISR (speedTimer) {
 195              		.loc 1 65 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 1, uses_anonymous_args = 0
 199 0000 B0B5     		push	{r4, r5, r7, lr}
 200              		.cfi_def_cfa_offset 16
 201              		.cfi_offset 4, -16
 202              		.cfi_offset 5, -12
 203              		.cfi_offset 7, -8
 204              		.cfi_offset 14, -4
 205 0002 00AF     		add	r7, sp, #0
 206              		.cfi_def_cfa_register 7
  66:main.c        ****     timerInt = 1;
 207              		.loc 1 66 0
 208 0004 2A4B     		ldr	r3, .L3+8
 209 0006 0122     		movs	r2, #1
 210 0008 1A60     		str	r2, [r3]
  67:main.c        ****     //quadDec_M1 used for turning macros
  68:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 6


 211              		.loc 1 68 0
 212 000a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 213 000e 0346     		mov	r3, r0
 214 0010 1A46     		mov	r2, r3
 215 0012 284B     		ldr	r3, .L3+12
 216 0014 1A60     		str	r2, [r3]
  69:main.c        ****     
  70:main.c        ****     if (currentDirection == Forward && quadDec2Count != 0) {
 217              		.loc 1 70 0
 218 0016 284B     		ldr	r3, .L3+16
 219 0018 1B68     		ldr	r3, [r3]
 220 001a 002B     		cmp	r3, #0
 221 001c 38D1     		bne	.L2
 222              		.loc 1 70 0 is_stmt 0 discriminator 1
 223 001e 254B     		ldr	r3, .L3+12
 224 0020 1B68     		ldr	r3, [r3]
 225 0022 002B     		cmp	r3, #0
 226 0024 34D0     		beq	.L2
  71:main.c        ****         totalDistance = totalDistance + (abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM;
 227              		.loc 1 71 0 is_stmt 1
 228 0026 254B     		ldr	r3, .L3+20
 229 0028 1B68     		ldr	r3, [r3]
 230 002a 1846     		mov	r0, r3
 231 002c FFF7FEFF 		bl	__aeabi_ui2d
 232 0030 0446     		mov	r4, r0
 233 0032 0D46     		mov	r5, r1
 234 0034 1F4B     		ldr	r3, .L3+12
 235 0036 1B68     		ldr	r3, [r3]
 236 0038 002B     		cmp	r3, #0
 237 003a B8BF     		it	lt
 238 003c 5B42     		rsblt	r3, r3, #0
 239 003e 1846     		mov	r0, r3
 240 0040 FFF7FEFF 		bl	__aeabi_i2d
 241 0044 4FF00002 		mov	r2, #0
 242 0048 1D4B     		ldr	r3, .L3+24
 243 004a FFF7FEFF 		bl	__aeabi_ddiv
 244 004e 0246     		mov	r2, r0
 245 0050 0B46     		mov	r3, r1
 246 0052 1046     		mov	r0, r2
 247 0054 1946     		mov	r1, r3
 248 0056 14A3     		adr	r3, .L3
 249 0058 D3E90023 		ldrd	r2, [r3]
 250 005c FFF7FEFF 		bl	__aeabi_dmul
 251 0060 0246     		mov	r2, r0
 252 0062 0B46     		mov	r3, r1
 253 0064 1046     		mov	r0, r2
 254 0066 1946     		mov	r1, r3
 255 0068 4FF00002 		mov	r2, #0
 256 006c 154B     		ldr	r3, .L3+28
 257 006e FFF7FEFF 		bl	__aeabi_dmul
 258 0072 0246     		mov	r2, r0
 259 0074 0B46     		mov	r3, r1
 260 0076 2046     		mov	r0, r4
 261 0078 2946     		mov	r1, r5
 262 007a FFF7FEFF 		bl	__aeabi_dadd
 263 007e 0346     		mov	r3, r0
 264 0080 0C46     		mov	r4, r1
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 7


 265 0082 1846     		mov	r0, r3
 266 0084 2146     		mov	r1, r4
 267 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 268 008a 0246     		mov	r2, r0
 269 008c 0B4B     		ldr	r3, .L3+20
 270 008e 1A60     		str	r2, [r3]
 271              	.L2:
  72:main.c        ****     }
  73:main.c        ****     
  74:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 272              		.loc 1 74 0
 273 0090 0020     		movs	r0, #0
 274 0092 FFF7FEFF 		bl	QuadDec_M2_SetCounter
  75:main.c        ****     QuadDec_M2_Start(); // restart counter
 275              		.loc 1 75 0
 276 0096 FFF7FEFF 		bl	QuadDec_M2_Start
  76:main.c        ****     
  77:main.c        **** 
  78:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 277              		.loc 1 78 0
 278 009a FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
  79:main.c        **** }
 279              		.loc 1 79 0
 280 009e 00BF     		nop
 281 00a0 B0BD     		pop	{r4, r5, r7, pc}
 282              	.L4:
 283 00a2 00BFAFF3 		.align	3
 283      0080
 284              	.L3:
 285 00a8 182D4454 		.word	1413754136
 286 00ac FB210940 		.word	1074340347
 287 00b0 00000000 		.word	timerInt
 288 00b4 00000000 		.word	quadDec2Count
 289 00b8 00000000 		.word	currentDirection
 290 00bc 00000000 		.word	totalDistance
 291 00c0 00804C40 		.word	1078755328
 292 00c4 00405040 		.word	1079001088
 293              		.cfi_endproc
 294              	.LFE64:
 295              		.size	speedTimer, .-speedTimer
 296              		.section	.text.S1_DETECTED,"ax",%progbits
 297              		.align	2
 298              		.global	S1_DETECTED
 299              		.thumb
 300              		.thumb_func
 301              		.type	S1_DETECTED, %function
 302              	S1_DETECTED:
 303              	.LFB65:
  80:main.c        **** 
  81:main.c        **** CY_ISR(S1_DETECTED) {
 304              		.loc 1 81 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 1, uses_anonymous_args = 0
 308 0000 80B5     		push	{r7, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 7, -8
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 8


 311              		.cfi_offset 14, -4
 312 0002 00AF     		add	r7, sp, #0
 313              		.cfi_def_cfa_register 7
  82:main.c        ****     // Sensor has detected WHITE
  83:main.c        ****     s1 = 1; // , Black = 0, White = 1
 314              		.loc 1 83 0
 315 0004 034B     		ldr	r3, .L6
 316 0006 0122     		movs	r2, #1
 317 0008 1A70     		strb	r2, [r3]
  84:main.c        ****     LED_Write(1u);
 318              		.loc 1 84 0
 319 000a 0120     		movs	r0, #1
 320 000c FFF7FEFF 		bl	LED_Write
  85:main.c        ****     //moveForward();
  86:main.c        **** }
 321              		.loc 1 86 0
 322 0010 00BF     		nop
 323 0012 80BD     		pop	{r7, pc}
 324              	.L7:
 325              		.align	2
 326              	.L6:
 327 0014 00000000 		.word	s1
 328              		.cfi_endproc
 329              	.LFE65:
 330              		.size	S1_DETECTED, .-S1_DETECTED
 331              		.section	.text.S2_DETECTED,"ax",%progbits
 332              		.align	2
 333              		.global	S2_DETECTED
 334              		.thumb
 335              		.thumb_func
 336              		.type	S2_DETECTED, %function
 337              	S2_DETECTED:
 338              	.LFB66:
  87:main.c        **** 
  88:main.c        **** CY_ISR(S2_DETECTED) {
 339              		.loc 1 88 0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 0
 342              		@ frame_needed = 1, uses_anonymous_args = 0
 343 0000 80B5     		push	{r7, lr}
 344              		.cfi_def_cfa_offset 8
 345              		.cfi_offset 7, -8
 346              		.cfi_offset 14, -4
 347 0002 00AF     		add	r7, sp, #0
 348              		.cfi_def_cfa_register 7
  89:main.c        ****     // Sensor has detected WHITE
  90:main.c        ****     s2 = 1; // , Black = 0, White = 1
 349              		.loc 1 90 0
 350 0004 034B     		ldr	r3, .L9
 351 0006 0122     		movs	r2, #1
 352 0008 1A70     		strb	r2, [r3]
  91:main.c        ****     LED_Write(1u);
 353              		.loc 1 91 0
 354 000a 0120     		movs	r0, #1
 355 000c FFF7FEFF 		bl	LED_Write
  92:main.c        ****     //moveForward();
  93:main.c        **** }
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 9


 356              		.loc 1 93 0
 357 0010 00BF     		nop
 358 0012 80BD     		pop	{r7, pc}
 359              	.L10:
 360              		.align	2
 361              	.L9:
 362 0014 00000000 		.word	s2
 363              		.cfi_endproc
 364              	.LFE66:
 365              		.size	S2_DETECTED, .-S2_DETECTED
 366              		.section	.text.S3_DETECTED,"ax",%progbits
 367              		.align	2
 368              		.global	S3_DETECTED
 369              		.thumb
 370              		.thumb_func
 371              		.type	S3_DETECTED, %function
 372              	S3_DETECTED:
 373              	.LFB67:
  94:main.c        **** 
  95:main.c        **** CY_ISR(S3_DETECTED) {
 374              		.loc 1 95 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 1, uses_anonymous_args = 0
 378 0000 80B5     		push	{r7, lr}
 379              		.cfi_def_cfa_offset 8
 380              		.cfi_offset 7, -8
 381              		.cfi_offset 14, -4
 382 0002 00AF     		add	r7, sp, #0
 383              		.cfi_def_cfa_register 7
  96:main.c        ****     // Sensor has detected WHITE
  97:main.c        ****     s3 = 1; // , Black = 0, White = 1
 384              		.loc 1 97 0
 385 0004 034B     		ldr	r3, .L12
 386 0006 0122     		movs	r2, #1
 387 0008 1A70     		strb	r2, [r3]
  98:main.c        ****     LED_Write(1u);
 388              		.loc 1 98 0
 389 000a 0120     		movs	r0, #1
 390 000c FFF7FEFF 		bl	LED_Write
  99:main.c        **** }
 391              		.loc 1 99 0
 392 0010 00BF     		nop
 393 0012 80BD     		pop	{r7, pc}
 394              	.L13:
 395              		.align	2
 396              	.L12:
 397 0014 00000000 		.word	s3
 398              		.cfi_endproc
 399              	.LFE67:
 400              		.size	S3_DETECTED, .-S3_DETECTED
 401              		.section	.text.S4_DETECTED,"ax",%progbits
 402              		.align	2
 403              		.global	S4_DETECTED
 404              		.thumb
 405              		.thumb_func
 406              		.type	S4_DETECTED, %function
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 10


 407              	S4_DETECTED:
 408              	.LFB68:
 100:main.c        **** 
 101:main.c        **** CY_ISR(S4_DETECTED) {
 409              		.loc 1 101 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 1, uses_anonymous_args = 0
 413 0000 80B5     		push	{r7, lr}
 414              		.cfi_def_cfa_offset 8
 415              		.cfi_offset 7, -8
 416              		.cfi_offset 14, -4
 417 0002 00AF     		add	r7, sp, #0
 418              		.cfi_def_cfa_register 7
 102:main.c        ****     // Sensor has detected WHITE
 103:main.c        ****     s4 = 1; // , Black = 0, White = 1
 419              		.loc 1 103 0
 420 0004 034B     		ldr	r3, .L15
 421 0006 0122     		movs	r2, #1
 422 0008 1A70     		strb	r2, [r3]
 104:main.c        ****     LED_Write(1u);
 423              		.loc 1 104 0
 424 000a 0120     		movs	r0, #1
 425 000c FFF7FEFF 		bl	LED_Write
 105:main.c        **** }
 426              		.loc 1 105 0
 427 0010 00BF     		nop
 428 0012 80BD     		pop	{r7, pc}
 429              	.L16:
 430              		.align	2
 431              	.L15:
 432 0014 00000000 		.word	s4
 433              		.cfi_endproc
 434              	.LFE68:
 435              		.size	S4_DETECTED, .-S4_DETECTED
 436              		.section	.text.S5_DETECTED,"ax",%progbits
 437              		.align	2
 438              		.global	S5_DETECTED
 439              		.thumb
 440              		.thumb_func
 441              		.type	S5_DETECTED, %function
 442              	S5_DETECTED:
 443              	.LFB69:
 106:main.c        **** 
 107:main.c        **** CY_ISR(S5_DETECTED) {
 444              		.loc 1 107 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 1, uses_anonymous_args = 0
 448 0000 80B5     		push	{r7, lr}
 449              		.cfi_def_cfa_offset 8
 450              		.cfi_offset 7, -8
 451              		.cfi_offset 14, -4
 452 0002 00AF     		add	r7, sp, #0
 453              		.cfi_def_cfa_register 7
 108:main.c        ****     // Sensor has detected WHITE
 109:main.c        ****     s5 = 1; // , Black = 0, White = 1
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 11


 454              		.loc 1 109 0
 455 0004 034B     		ldr	r3, .L18
 456 0006 0122     		movs	r2, #1
 457 0008 1A70     		strb	r2, [r3]
 110:main.c        ****     LED_Write(1u);
 458              		.loc 1 110 0
 459 000a 0120     		movs	r0, #1
 460 000c FFF7FEFF 		bl	LED_Write
 111:main.c        **** }
 461              		.loc 1 111 0
 462 0010 00BF     		nop
 463 0012 80BD     		pop	{r7, pc}
 464              	.L19:
 465              		.align	2
 466              	.L18:
 467 0014 00000000 		.word	s5
 468              		.cfi_endproc
 469              	.LFE69:
 470              		.size	S5_DETECTED, .-S5_DETECTED
 471              		.section	.text.S6_DETECTED,"ax",%progbits
 472              		.align	2
 473              		.global	S6_DETECTED
 474              		.thumb
 475              		.thumb_func
 476              		.type	S6_DETECTED, %function
 477              	S6_DETECTED:
 478              	.LFB70:
 112:main.c        **** 
 113:main.c        **** CY_ISR(S6_DETECTED) {
 479              		.loc 1 113 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 1, uses_anonymous_args = 0
 483 0000 80B5     		push	{r7, lr}
 484              		.cfi_def_cfa_offset 8
 485              		.cfi_offset 7, -8
 486              		.cfi_offset 14, -4
 487 0002 00AF     		add	r7, sp, #0
 488              		.cfi_def_cfa_register 7
 114:main.c        ****     // Sensor has detected WHITE
 115:main.c        ****     s6 = 1; // , Black = 0, White = 1
 489              		.loc 1 115 0
 490 0004 034B     		ldr	r3, .L21
 491 0006 0122     		movs	r2, #1
 492 0008 1A70     		strb	r2, [r3]
 116:main.c        ****     LED_Write(1u);
 493              		.loc 1 116 0
 494 000a 0120     		movs	r0, #1
 495 000c FFF7FEFF 		bl	LED_Write
 117:main.c        **** }
 496              		.loc 1 117 0
 497 0010 00BF     		nop
 498 0012 80BD     		pop	{r7, pc}
 499              	.L22:
 500              		.align	2
 501              	.L21:
 502 0014 00000000 		.word	s6
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 12


 503              		.cfi_endproc
 504              	.LFE70:
 505              		.size	S6_DETECTED, .-S6_DETECTED
 506              		.section	.text.TIMER_FINISH,"ax",%progbits
 507              		.align	2
 508              		.global	TIMER_FINISH
 509              		.thumb
 510              		.thumb_func
 511              		.type	TIMER_FINISH, %function
 512              	TIMER_FINISH:
 513              	.LFB71:
 118:main.c        **** 
 119:main.c        **** CY_ISR(TIMER_FINISH) {
 514              		.loc 1 119 0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 1, uses_anonymous_args = 0
 518 0000 80B5     		push	{r7, lr}
 519              		.cfi_def_cfa_offset 8
 520              		.cfi_offset 7, -8
 521              		.cfi_offset 14, -4
 522 0002 00AF     		add	r7, sp, #0
 523              		.cfi_def_cfa_register 7
 120:main.c        ****     // Reset Sensor Flags for Next rising Eddge
 121:main.c        ****     // (s1 = 0, s2 = 0... etc.)
 122:main.c        ****     LED_Write(0u);
 524              		.loc 1 122 0
 525 0004 0020     		movs	r0, #0
 526 0006 FFF7FEFF 		bl	LED_Write
 123:main.c        ****     SetRobotMovement();
 527              		.loc 1 123 0
 528 000a FFF7FEFF 		bl	SetRobotMovement
 124:main.c        ****     ResetSensorFlags();
 529              		.loc 1 124 0
 530 000e FFF7FEFF 		bl	ResetSensorFlags
 125:main.c        **** 
 126:main.c        ****     Timer_LED_ReadStatusRegister();
 531              		.loc 1 126 0
 532 0012 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 127:main.c        **** }
 533              		.loc 1 127 0
 534 0016 00BF     		nop
 535 0018 80BD     		pop	{r7, pc}
 536              		.cfi_endproc
 537              	.LFE71:
 538              		.size	TIMER_FINISH, .-TIMER_FINISH
 539 001a 00BF     		.section	.rodata
 540              		.align	2
 541              	.LC0:
 542 0000 496E6974 		.ascii	"Initialised UART\000"
 542      69616C69 
 542      73656420 
 542      55415254 
 542      00
 543 0011 000000   		.align	2
 544              	.LC1:
 545 0014 256C7500 		.ascii	"%lu\000"
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 13


 546              		.align	2
 547              	.LC2:
 548 0018 2000     		.ascii	" \000"
 549              		.section	.text.main,"ax",%progbits
 550              		.align	2
 551              		.global	main
 552              		.thumb
 553              		.thumb_func
 554              		.type	main, %function
 555              	main:
 556              	.LFB72:
 128:main.c        **** 
 129:main.c        **** 
 130:main.c        **** int main()
 131:main.c        **** {
 557              		.loc 1 131 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 1, uses_anonymous_args = 0
 561 0000 80B5     		push	{r7, lr}
 562              		.cfi_def_cfa_offset 8
 563              		.cfi_offset 7, -8
 564              		.cfi_offset 14, -4
 565 0002 00AF     		add	r7, sp, #0
 566              		.cfi_def_cfa_register 7
 132:main.c        **** // --------------------------------    
 133:main.c        **** // ----- INITIALIZATIONS ----------
 134:main.c        ****     CYGlobalIntEnable;
 567              		.loc 1 134 0
 568              		.syntax unified
 569              	@ 134 "main.c" 1
 570 0004 62B6     		CPSIE   i
 571              	@ 0 "" 2
 135:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 572              		.loc 1 135 0
 573              		.thumb
 574              		.syntax unified
 575 0006 FFF7FEFF 		bl	init
 136:main.c        ****     //findPath(map, "");// find shortest path- store this in map
 137:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 576              		.loc 1 137 0
 577 000a 2548     		ldr	r0, .L28
 578 000c FFF7FEFF 		bl	isr_speed_StartEx
 138:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 579              		.loc 1 138 0
 580 0010 2448     		ldr	r0, .L28+4
 581 0012 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 139:main.c        ****     S1_detected_StartEx(S1_DETECTED);
 582              		.loc 1 139 0
 583 0016 2448     		ldr	r0, .L28+8
 584 0018 FFF7FEFF 		bl	S1_detected_StartEx
 140:main.c        ****     S2_detected_StartEx(S2_DETECTED);
 585              		.loc 1 140 0
 586 001c 2348     		ldr	r0, .L28+12
 587 001e FFF7FEFF 		bl	S2_detected_StartEx
 141:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 588              		.loc 1 141 0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 14


 589 0022 2348     		ldr	r0, .L28+16
 590 0024 FFF7FEFF 		bl	S3_detected_StartEx
 142:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 591              		.loc 1 142 0
 592 0028 2248     		ldr	r0, .L28+20
 593 002a FFF7FEFF 		bl	S4_detected_StartEx
 143:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 594              		.loc 1 143 0
 595 002e 2248     		ldr	r0, .L28+24
 596 0030 FFF7FEFF 		bl	S5_detected_StartEx
 144:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 597              		.loc 1 144 0
 598 0034 2148     		ldr	r0, .L28+28
 599 0036 FFF7FEFF 		bl	S6_detected_StartEx
 145:main.c        ****     Timer_LED_Start();
 600              		.loc 1 145 0
 601 003a FFF7FEFF 		bl	Timer_LED_Start
 146:main.c        ****     stopMoving();
 602              		.loc 1 146 0
 603 003e FFF7FEFF 		bl	stopMoving
 147:main.c        **** 
 148:main.c        **** // ------USB SETUP ----------------    
 149:main.c        **** #ifdef USE_USB    
 150:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 604              		.loc 1 150 0
 605 0042 0121     		movs	r1, #1
 606 0044 0020     		movs	r0, #0
 607 0046 FFF7FEFF 		bl	USBUART_Start
 151:main.c        **** #endif        
 152:main.c        ****     RF_BT_SELECT_Write(0);
 608              		.loc 1 152 0
 609 004a 0020     		movs	r0, #0
 610 004c FFF7FEFF 		bl	RF_BT_SELECT_Write
 153:main.c        ****     
 154:main.c        ****     usbPutString("Initialised UART");
 611              		.loc 1 154 0
 612 0050 1B48     		ldr	r0, .L28+32
 613 0052 FFF7FEFF 		bl	usbPutString
 614              	.L27:
 155:main.c        ****     for(;;)
 156:main.c        ****     {
 157:main.c        ****         //traverseMap(map);
 158:main.c        ****         //rotationAntiClockwise();
 159:main.c        ****         //rotationClockwise();
 160:main.c        ****         
 161:main.c        ****         
 162:main.c        ****         
 163:main.c        ****         if(timerInt == 1) {
 615              		.loc 1 163 0
 616 0056 1B4B     		ldr	r3, .L28+36
 617 0058 1B68     		ldr	r3, [r3]
 618 005a 012B     		cmp	r3, #1
 619 005c 15D1     		bne	.L25
 164:main.c        ****             timerInt = 0;
 620              		.loc 1 164 0
 621 005e 194B     		ldr	r3, .L28+36
 622 0060 0022     		movs	r2, #0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 15


 623 0062 1A60     		str	r2, [r3]
 165:main.c        ****             // calculate RPM of M2
 166:main.c        ****             quadCountToRPM(quadDec2Count);
 624              		.loc 1 166 0
 625 0064 184B     		ldr	r3, .L28+40
 626 0066 1B68     		ldr	r3, [r3]
 627 0068 9BB2     		uxth	r3, r3
 628 006a 1846     		mov	r0, r3
 629 006c FFF7FEFF 		bl	quadCountToRPM
 167:main.c        ****             sprintf(buffer, "%lu", totalDistance);
 630              		.loc 1 167 0
 631 0070 164B     		ldr	r3, .L28+44
 632 0072 1B68     		ldr	r3, [r3]
 633 0074 1A46     		mov	r2, r3
 634 0076 1649     		ldr	r1, .L28+48
 635 0078 1648     		ldr	r0, .L28+52
 636 007a FFF7FEFF 		bl	sprintf
 168:main.c        ****             usbPutString(buffer);
 637              		.loc 1 168 0
 638 007e 1548     		ldr	r0, .L28+52
 639 0080 FFF7FEFF 		bl	usbPutString
 169:main.c        ****             usbPutString(" ");
 640              		.loc 1 169 0
 641 0084 1448     		ldr	r0, .L28+56
 642 0086 FFF7FEFF 		bl	usbPutString
 643              	.L25:
 170:main.c        ****         }
 171:main.c        ****         handle_usb();
 644              		.loc 1 171 0
 645 008a FFF7FEFF 		bl	handle_usb
 172:main.c        ****         if (flag_KB_string == 1)
 646              		.loc 1 172 0
 647 008e 134B     		ldr	r3, .L28+60
 648 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 649 0092 012B     		cmp	r3, #1
 650 0094 DFD1     		bne	.L27
 173:main.c        ****         {
 174:main.c        ****             //usbPutString("Total Distance: ");
 175:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 176:main.c        ****             //usbPutString(buffer);
 177:main.c        ****             flag_KB_string = 0;
 651              		.loc 1 177 0
 652 0096 114B     		ldr	r3, .L28+60
 653 0098 0022     		movs	r2, #0
 654 009a 1A70     		strb	r2, [r3]
 178:main.c        ****         }           
 179:main.c        ****     }
 655              		.loc 1 179 0
 656 009c DBE7     		b	.L27
 657              	.L29:
 658 009e 00BF     		.align	2
 659              	.L28:
 660 00a0 00000000 		.word	speedTimer
 661 00a4 00000000 		.word	TIMER_FINISH
 662 00a8 00000000 		.word	S1_DETECTED
 663 00ac 00000000 		.word	S2_DETECTED
 664 00b0 00000000 		.word	S3_DETECTED
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 16


 665 00b4 00000000 		.word	S4_DETECTED
 666 00b8 00000000 		.word	S5_DETECTED
 667 00bc 00000000 		.word	S6_DETECTED
 668 00c0 00000000 		.word	.LC0
 669 00c4 00000000 		.word	timerInt
 670 00c8 00000000 		.word	quadDec2Count
 671 00cc 00000000 		.word	totalDistance
 672 00d0 14000000 		.word	.LC1
 673 00d4 00000000 		.word	buffer
 674 00d8 18000000 		.word	.LC2
 675 00dc 00000000 		.word	flag_KB_string
 676              		.cfi_endproc
 677              	.LFE72:
 678              		.size	main, .-main
 679              		.global	__aeabi_d2f
 680              		.global	__aeabi_fmul
 681              		.global	__aeabi_f2iz
 682              		.section	.rodata
 683 001a 0000     		.align	2
 684              	.LC3:
 685 001c 256400   		.ascii	"%d\000"
 686              		.section	.text.quadCountToRPM,"ax",%progbits
 687              		.align	2
 688              		.global	quadCountToRPM
 689              		.thumb
 690              		.thumb_func
 691              		.type	quadCountToRPM, %function
 692              	quadCountToRPM:
 693              	.LFB73:
 180:main.c        ****     return 0;
 181:main.c        **** }
 182:main.c        **** 
 183:main.c        **** // Calculations
 184:main.c        **** //* ========================================
 185:main.c        **** int16 quadCountToRPM(uint16 count)
 186:main.c        **** {
 694              		.loc 1 186 0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 16
 697              		@ frame_needed = 1, uses_anonymous_args = 0
 698 0000 90B5     		push	{r4, r7, lr}
 699              		.cfi_def_cfa_offset 12
 700              		.cfi_offset 4, -12
 701              		.cfi_offset 7, -8
 702              		.cfi_offset 14, -4
 703 0002 85B0     		sub	sp, sp, #20
 704              		.cfi_def_cfa_offset 32
 705 0004 00AF     		add	r7, sp, #0
 706              		.cfi_def_cfa_register 7
 707 0006 0346     		mov	r3, r0
 708 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 187:main.c        ****     float cps = count/57.00;
 709              		.loc 1 187 0
 710 000a FB88     		ldrh	r3, [r7, #6]
 711 000c 1846     		mov	r0, r3
 712 000e FFF7FEFF 		bl	__aeabi_i2d
 713 0012 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 17


 714 0016 114B     		ldr	r3, .L32
 715 0018 FFF7FEFF 		bl	__aeabi_ddiv
 716 001c 0346     		mov	r3, r0
 717 001e 0C46     		mov	r4, r1
 718 0020 1846     		mov	r0, r3
 719 0022 2146     		mov	r1, r4
 720 0024 FFF7FEFF 		bl	__aeabi_d2f
 721 0028 0346     		mov	r3, r0
 722 002a FB60     		str	r3, [r7, #12]	@ float
 188:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 723              		.loc 1 188 0
 724 002c 0C49     		ldr	r1, .L32+4
 725 002e F868     		ldr	r0, [r7, #12]	@ float
 726 0030 FFF7FEFF 		bl	__aeabi_fmul
 727 0034 0346     		mov	r3, r0
 728 0036 1846     		mov	r0, r3
 729 0038 FFF7FEFF 		bl	__aeabi_f2iz
 730 003c 0346     		mov	r3, r0
 731 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 189:main.c        ****     sprintf(buffer, "%d", rpm); // store in buffer
 732              		.loc 1 189 0
 733 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 734 0044 1A46     		mov	r2, r3
 735 0046 0749     		ldr	r1, .L32+8
 736 0048 0748     		ldr	r0, .L32+12
 737 004a FFF7FEFF 		bl	sprintf
 190:main.c        ****     return rpm;
 738              		.loc 1 190 0
 739 004e B7F90A30 		ldrsh	r3, [r7, #10]
 191:main.c        ****     //usbPutString(buffer);
 192:main.c        ****     //usbPutString("rpm ");
 193:main.c        **** }
 740              		.loc 1 193 0
 741 0052 1846     		mov	r0, r3
 742 0054 1437     		adds	r7, r7, #20
 743              		.cfi_def_cfa_offset 12
 744 0056 BD46     		mov	sp, r7
 745              		.cfi_def_cfa_register 13
 746              		@ sp needed
 747 0058 90BD     		pop	{r4, r7, pc}
 748              	.L33:
 749 005a 00BF     		.align	2
 750              	.L32:
 751 005c 00804C40 		.word	1078755328
 752 0060 00007041 		.word	1097859072
 753 0064 1C000000 		.word	.LC3
 754 0068 00000000 		.word	buffer
 755              		.cfi_endproc
 756              	.LFE73:
 757              		.size	quadCountToRPM, .-quadCountToRPM
 758              		.section	.text.ResetSensorFlags,"ax",%progbits
 759              		.align	2
 760              		.global	ResetSensorFlags
 761              		.thumb
 762              		.thumb_func
 763              		.type	ResetSensorFlags, %function
 764              	ResetSensorFlags:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 18


 765              	.LFB74:
 194:main.c        **** 
 195:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 196:main.c        **** void ResetSensorFlags() {
 766              		.loc 1 196 0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 1, uses_anonymous_args = 0
 770              		@ link register save eliminated.
 771 0000 80B4     		push	{r7}
 772              		.cfi_def_cfa_offset 4
 773              		.cfi_offset 7, -4
 774 0002 00AF     		add	r7, sp, #0
 775              		.cfi_def_cfa_register 7
 197:main.c        ****     s1 = 0;
 776              		.loc 1 197 0
 777 0004 0A4B     		ldr	r3, .L35
 778 0006 0022     		movs	r2, #0
 779 0008 1A70     		strb	r2, [r3]
 198:main.c        ****     s2 = 0;
 780              		.loc 1 198 0
 781 000a 0A4B     		ldr	r3, .L35+4
 782 000c 0022     		movs	r2, #0
 783 000e 1A70     		strb	r2, [r3]
 199:main.c        ****     s3 = 0;
 784              		.loc 1 199 0
 785 0010 094B     		ldr	r3, .L35+8
 786 0012 0022     		movs	r2, #0
 787 0014 1A70     		strb	r2, [r3]
 200:main.c        ****     s4 = 0;
 788              		.loc 1 200 0
 789 0016 094B     		ldr	r3, .L35+12
 790 0018 0022     		movs	r2, #0
 791 001a 1A70     		strb	r2, [r3]
 201:main.c        ****     s5 = 0;
 792              		.loc 1 201 0
 793 001c 084B     		ldr	r3, .L35+16
 794 001e 0022     		movs	r2, #0
 795 0020 1A70     		strb	r2, [r3]
 202:main.c        ****     s6 = 0;
 796              		.loc 1 202 0
 797 0022 084B     		ldr	r3, .L35+20
 798 0024 0022     		movs	r2, #0
 799 0026 1A70     		strb	r2, [r3]
 203:main.c        **** }
 800              		.loc 1 203 0
 801 0028 00BF     		nop
 802 002a BD46     		mov	sp, r7
 803              		.cfi_def_cfa_register 13
 804              		@ sp needed
 805 002c 80BC     		pop	{r7}
 806              		.cfi_restore 7
 807              		.cfi_def_cfa_offset 0
 808 002e 7047     		bx	lr
 809              	.L36:
 810              		.align	2
 811              	.L35:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 19


 812 0030 00000000 		.word	s1
 813 0034 00000000 		.word	s2
 814 0038 00000000 		.word	s3
 815 003c 00000000 		.word	s4
 816 0040 00000000 		.word	s5
 817 0044 00000000 		.word	s6
 818              		.cfi_endproc
 819              	.LFE74:
 820              		.size	ResetSensorFlags, .-ResetSensorFlags
 821              		.section	.text.CheckSensorDirection,"ax",%progbits
 822              		.align	2
 823              		.global	CheckSensorDirection
 824              		.thumb
 825              		.thumb_func
 826              		.type	CheckSensorDirection, %function
 827              	CheckSensorDirection:
 828              	.LFB75:
 204:main.c        **** 
 205:main.c        **** // This function checks the sensor flags s1-s6 through a boolean truth table and
 206:main.c        **** // returns a enum direction state depending on the flag configuration
 207:main.c        **** // if no conditons are met, it returns Unknown -- need to fix this edge case
 208:main.c        **** // s1 = 0 -- Black
 209:main.c        **** // s1 = 1 -- White
 210:main.c        **** enum DirectionState CheckSensorDirection() {
 829              		.loc 1 210 0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 8
 832              		@ frame_needed = 1, uses_anonymous_args = 0
 833              		@ link register save eliminated.
 834 0000 80B4     		push	{r7}
 835              		.cfi_def_cfa_offset 4
 836              		.cfi_offset 7, -4
 837 0002 83B0     		sub	sp, sp, #12
 838              		.cfi_def_cfa_offset 16
 839 0004 00AF     		add	r7, sp, #0
 840              		.cfi_def_cfa_register 7
 211:main.c        ****     enum DirectionState directionState = Stop;
 841              		.loc 1 211 0
 842 0006 0523     		movs	r3, #5
 843 0008 7B60     		str	r3, [r7, #4]
 212:main.c        ****     previousDirection = currentDirection;    
 844              		.loc 1 212 0
 845 000a 314B     		ldr	r3, .L44
 846 000c 1B68     		ldr	r3, [r3]
 847 000e 314A     		ldr	r2, .L44+4
 848 0010 1360     		str	r3, [r2]
 213:main.c        ****     
 214:main.c        ****     //forward if all sensors are on white // if (s1 && s4 && s5 && s6)
 215:main.c        ****     if (s1 && s2 && s4 && s5 && s6) {
 849              		.loc 1 215 0
 850 0012 314B     		ldr	r3, .L44+8
 851 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 852 0016 002B     		cmp	r3, #0
 853 0018 13D0     		beq	.L38
 854              		.loc 1 215 0 is_stmt 0 discriminator 1
 855 001a 304B     		ldr	r3, .L44+12
 856 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 20


 857 001e 002B     		cmp	r3, #0
 858 0020 0FD0     		beq	.L38
 859              		.loc 1 215 0 discriminator 2
 860 0022 2F4B     		ldr	r3, .L44+16
 861 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 862 0026 002B     		cmp	r3, #0
 863 0028 0BD0     		beq	.L38
 864              		.loc 1 215 0 discriminator 3
 865 002a 2E4B     		ldr	r3, .L44+20
 866 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 867 002e 002B     		cmp	r3, #0
 868 0030 07D0     		beq	.L38
 869              		.loc 1 215 0 discriminator 4
 870 0032 2D4B     		ldr	r3, .L44+24
 871 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 872 0036 002B     		cmp	r3, #0
 873 0038 03D0     		beq	.L38
 216:main.c        ****         directionState = Forward;
 874              		.loc 1 216 0 is_stmt 1
 875 003a 0023     		movs	r3, #0
 876 003c 7B60     		str	r3, [r7, #4]
 217:main.c        ****         return directionState;   
 877              		.loc 1 217 0
 878 003e 7B68     		ldr	r3, [r7, #4]
 879 0040 41E0     		b	.L39
 880              	.L38:
 218:main.c        ****     }
 219:main.c        ****     
 220:main.c        ****     
 221:main.c        ****     /* COURSE CORRECTION COURSE CORRECTION COURSE CORRETION */
 222:main.c        ****     // Only need to course correct when direction state is forward
 223:main.c        ****     /*
 224:main.c        ****     if (previousDirection == Forward || previousDirection == AdjustToTheLeft || previousDirection =
 225:main.c        ****         // If robot is deviating to the left where top right sensor and bottom left sensor is on bl
 226:main.c        ****         // we turn right until all sensors are on white again
 227:main.c        ****         if (!s1 && s2 && s3 && s4 && s5 && !s6) {
 228:main.c        ****             directionState = AdjustToTheRight;
 229:main.c        ****             return directionState;
 230:main.c        ****         }
 231:main.c        ****         
 232:main.c        ****         // If robot is deviating to the right where top left sensor and bottom right sensor is on b
 233:main.c        ****         // we turn left until all sensors are on white again
 234:main.c        ****         if (s1 && !s2 && s3 && s4 && !s5 && s6) {
 235:main.c        ****             directionState = AdjustToTheLeft;
 236:main.c        ****             return directionState;
 237:main.c        ****         }
 238:main.c        ****     }
 239:main.c        ****     */
 240:main.c        ****     /* COURSE CORRECTION COURSE CORRECTION COURSE CORRETION */
 241:main.c        ****     
 242:main.c        ****     // Left sensor is on black and right sensor is on white
 243:main.c        ****     
 244:main.c        ****     //turn left
 245:main.c        ****     /*
 246:main.c        ****     if (s1 && s2 && !s3 && s4 && s5 && s6) {
 247:main.c        ****         // if we sense turn left again after previous direcition was also turn left
 248:main.c        ****         // we move forward instead
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 21


 249:main.c        ****         
 250:main.c        ****         if (previousDirection == TurnLeft) {
 251:main.c        ****             directionState = Forward;
 252:main.c        ****             return directionState;
 253:main.c        ****         }
 254:main.c        ****         
 255:main.c        ****         
 256:main.c        ****         directionState = TurnLeft;
 257:main.c        ****         return directionState;
 258:main.c        ****     }*/
 259:main.c        ****     
 260:main.c        ****     // Right sensor is on white and right sensor is on black
 261:main.c        ****     // everything else is on white
 262:main.c        ****     //turn right
 263:main.c        ****     if (s1 && s2 && s3 && !s4 && s5 && s6) {
 881              		.loc 1 263 0
 882 0042 254B     		ldr	r3, .L44+8
 883 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 884 0046 002B     		cmp	r3, #0
 885 0048 17D0     		beq	.L40
 886              		.loc 1 263 0 is_stmt 0 discriminator 1
 887 004a 244B     		ldr	r3, .L44+12
 888 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 889 004e 002B     		cmp	r3, #0
 890 0050 13D0     		beq	.L40
 891              		.loc 1 263 0 discriminator 2
 892 0052 264B     		ldr	r3, .L44+28
 893 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 894 0056 002B     		cmp	r3, #0
 895 0058 0FD0     		beq	.L40
 896              		.loc 1 263 0 discriminator 3
 897 005a 214B     		ldr	r3, .L44+16
 898 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 899 005e 002B     		cmp	r3, #0
 900 0060 0BD1     		bne	.L40
 901              		.loc 1 263 0 discriminator 4
 902 0062 204B     		ldr	r3, .L44+20
 903 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 904 0066 002B     		cmp	r3, #0
 905 0068 07D0     		beq	.L40
 906              		.loc 1 263 0 discriminator 5
 907 006a 1F4B     		ldr	r3, .L44+24
 908 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 909 006e 002B     		cmp	r3, #0
 910 0070 03D0     		beq	.L40
 264:main.c        ****         // if we sense turn right again after previous direcition was also turn right
 265:main.c        ****         // we move forward instead
 266:main.c        ****         /*
 267:main.c        ****         if (previousDirection == TurnRight) {
 268:main.c        ****             directionState = Forward;
 269:main.c        ****             return directionState;
 270:main.c        ****         }*/
 271:main.c        ****         
 272:main.c        ****         directionState = TurnRight;
 911              		.loc 1 272 0 is_stmt 1
 912 0072 0123     		movs	r3, #1
 913 0074 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 22


 273:main.c        ****         return directionState;
 914              		.loc 1 273 0
 915 0076 7B68     		ldr	r3, [r7, #4]
 916 0078 25E0     		b	.L39
 917              	.L40:
 274:main.c        ****     }
 275:main.c        ****     
 276:main.c        ****     // if all sensors are on black -- we are currently in darkness so don't move
 277:main.c        ****     if (!(s1 && s2 && s3 && s4 && s5 && s6)) {
 918              		.loc 1 277 0
 919 007a 174B     		ldr	r3, .L44+8
 920 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 921 007e 002B     		cmp	r3, #0
 922 0080 13D0     		beq	.L41
 923              		.loc 1 277 0 is_stmt 0 discriminator 1
 924 0082 164B     		ldr	r3, .L44+12
 925 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 926 0086 002B     		cmp	r3, #0
 927 0088 0FD0     		beq	.L41
 928              		.loc 1 277 0 discriminator 2
 929 008a 184B     		ldr	r3, .L44+28
 930 008c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 931 008e 002B     		cmp	r3, #0
 932 0090 0BD0     		beq	.L41
 933              		.loc 1 277 0 discriminator 3
 934 0092 134B     		ldr	r3, .L44+16
 935 0094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 936 0096 002B     		cmp	r3, #0
 937 0098 07D0     		beq	.L41
 938              		.loc 1 277 0 discriminator 4
 939 009a 124B     		ldr	r3, .L44+20
 940 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 941 009e 002B     		cmp	r3, #0
 942 00a0 03D0     		beq	.L41
 943              		.loc 1 277 0 discriminator 5
 944 00a2 114B     		ldr	r3, .L44+24
 945 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 946 00a6 002B     		cmp	r3, #0
 947 00a8 03D1     		bne	.L42
 948              	.L41:
 278:main.c        ****         directionState = Stop;
 949              		.loc 1 278 0 is_stmt 1
 950 00aa 0523     		movs	r3, #5
 951 00ac 7B60     		str	r3, [r7, #4]
 279:main.c        ****         return directionState;
 952              		.loc 1 279 0
 953 00ae 7B68     		ldr	r3, [r7, #4]
 954 00b0 09E0     		b	.L39
 955              	.L42:
 280:main.c        ****     }
 281:main.c        ****     
 282:main.c        ****     // If the code gets up to this point then no conditions have been met
 283:main.c        ****     // The sensors are in a configuration that has not been covered
 284:main.c        ****     // The currentDirection to turn into is unknown.
 285:main.c        ****     
 286:main.c        ****     // if currentDirection is Unknown, we continue with the previous direction
 287:main.c        ****     // However, if the previous direction is also Unknown, we will just move forward.
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 23


 288:main.c        ****     if (previousDirection == Unknown) {
 956              		.loc 1 288 0
 957 00b2 084B     		ldr	r3, .L44+4
 958 00b4 1B68     		ldr	r3, [r3]
 959 00b6 062B     		cmp	r3, #6
 960 00b8 03D1     		bne	.L43
 289:main.c        ****         directionState = Forward;
 961              		.loc 1 289 0
 962 00ba 0023     		movs	r3, #0
 963 00bc 7B60     		str	r3, [r7, #4]
 290:main.c        ****         return directionState;
 964              		.loc 1 290 0
 965 00be 7B68     		ldr	r3, [r7, #4]
 966 00c0 01E0     		b	.L39
 967              	.L43:
 291:main.c        ****     }
 292:main.c        ****             
 293:main.c        ****     return previousDirection;
 968              		.loc 1 293 0
 969 00c2 044B     		ldr	r3, .L44+4
 970 00c4 1B68     		ldr	r3, [r3]
 971              	.L39:
 294:main.c        **** }
 972              		.loc 1 294 0
 973 00c6 1846     		mov	r0, r3
 974 00c8 0C37     		adds	r7, r7, #12
 975              		.cfi_def_cfa_offset 4
 976 00ca BD46     		mov	sp, r7
 977              		.cfi_def_cfa_register 13
 978              		@ sp needed
 979 00cc 80BC     		pop	{r7}
 980              		.cfi_restore 7
 981              		.cfi_def_cfa_offset 0
 982 00ce 7047     		bx	lr
 983              	.L45:
 984              		.align	2
 985              	.L44:
 986 00d0 00000000 		.word	currentDirection
 987 00d4 00000000 		.word	previousDirection
 988 00d8 00000000 		.word	s1
 989 00dc 00000000 		.word	s2
 990 00e0 00000000 		.word	s4
 991 00e4 00000000 		.word	s5
 992 00e8 00000000 		.word	s6
 993 00ec 00000000 		.word	s3
 994              		.cfi_endproc
 995              	.LFE75:
 996              		.size	CheckSensorDirection, .-CheckSensorDirection
 997              		.section	.text.SetRobotMovement,"ax",%progbits
 998              		.align	2
 999              		.global	SetRobotMovement
 1000              		.thumb
 1001              		.thumb_func
 1002              		.type	SetRobotMovement, %function
 1003              	SetRobotMovement:
 1004              	.LFB76:
 295:main.c        **** 
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 24


 296:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 297:main.c        **** void SetRobotMovement() {
 1005              		.loc 1 297 0
 1006              		.cfi_startproc
 1007              		@ args = 0, pretend = 0, frame = 0
 1008              		@ frame_needed = 1, uses_anonymous_args = 0
 1009 0000 80B5     		push	{r7, lr}
 1010              		.cfi_def_cfa_offset 8
 1011              		.cfi_offset 7, -8
 1012              		.cfi_offset 14, -4
 1013 0002 00AF     		add	r7, sp, #0
 1014              		.cfi_def_cfa_register 7
 298:main.c        ****     currentDirection = CheckSensorDirection();   
 1015              		.loc 1 298 0
 1016 0004 FFF7FEFF 		bl	CheckSensorDirection
 1017 0008 0246     		mov	r2, r0
 1018 000a 164B     		ldr	r3, .L58
 1019 000c 1A60     		str	r2, [r3]
 299:main.c        ****     
 300:main.c        ****     switch (currentDirection) {
 1020              		.loc 1 300 0
 1021 000e 154B     		ldr	r3, .L58
 1022 0010 1B68     		ldr	r3, [r3]
 1023 0012 062B     		cmp	r3, #6
 1024 0014 23D8     		bhi	.L56
 1025 0016 01A2     		adr	r2, .L49
 1026 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1027              		.p2align 2
 1028              	.L49:
 1029 001c 39000000 		.word	.L48+1
 1030 0020 3F000000 		.word	.L50+1
 1031 0024 45000000 		.word	.L51+1
 1032 0028 51000000 		.word	.L52+1
 1033 002c 4B000000 		.word	.L53+1
 1034 0030 57000000 		.word	.L54+1
 1035 0034 5D000000 		.word	.L57+1
 1036              		.p2align 1
 1037              	.L48:
 301:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 302:main.c        ****         case Forward:
 303:main.c        ****             moveForward();
 1038              		.loc 1 303 0
 1039 0038 FFF7FEFF 		bl	moveForward
 304:main.c        ****             break;
 1040              		.loc 1 304 0
 1041 003c 0FE0     		b	.L47
 1042              	.L50:
 305:main.c        ****         case TurnRight:
 306:main.c        ****             rotationClockwise();
 1043              		.loc 1 306 0
 1044 003e FFF7FEFF 		bl	rotationClockwise
 307:main.c        ****             break;
 1045              		.loc 1 307 0
 1046 0042 0CE0     		b	.L47
 1047              	.L51:
 308:main.c        ****         case TurnLeft:
 309:main.c        ****             rotationAntiClockwise();
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 25


 1048              		.loc 1 309 0
 1049 0044 FFF7FEFF 		bl	rotationAntiClockwise
 310:main.c        ****             break;
 1050              		.loc 1 310 0
 1051 0048 09E0     		b	.L47
 1052              	.L53:
 311:main.c        ****         case AdjustToTheRight:
 312:main.c        ****             keepRotatingClockwise();
 1053              		.loc 1 312 0
 1054 004a FFF7FEFF 		bl	keepRotatingClockwise
 313:main.c        ****             break;
 1055              		.loc 1 313 0
 1056 004e 06E0     		b	.L47
 1057              	.L52:
 314:main.c        ****         case AdjustToTheLeft:
 315:main.c        ****             keepRotatingAntiClockwise();
 1058              		.loc 1 315 0
 1059 0050 FFF7FEFF 		bl	keepRotatingAntiClockwise
 316:main.c        ****             break;
 1060              		.loc 1 316 0
 1061 0054 03E0     		b	.L47
 1062              	.L54:
 317:main.c        ****         case Stop:
 318:main.c        ****             stopMoving();
 1063              		.loc 1 318 0
 1064 0056 FFF7FEFF 		bl	stopMoving
 319:main.c        ****             break;
 1065              		.loc 1 319 0
 1066 005a 00E0     		b	.L47
 1067              	.L57:
 320:main.c        ****         case Unknown:
 321:main.c        ****             // UNKNOWN CONFIGURATION
 322:main.c        ****             break;  
 1068              		.loc 1 322 0
 1069 005c 00BF     		nop
 1070              	.L47:
 1071              	.L56:
 323:main.c        ****     }
 324:main.c        **** }
 1072              		.loc 1 324 0
 1073 005e 00BF     		nop
 1074 0060 80BD     		pop	{r7, pc}
 1075              	.L59:
 1076 0062 00BF     		.align	2
 1077              	.L58:
 1078 0064 00000000 		.word	currentDirection
 1079              		.cfi_endproc
 1080              	.LFE76:
 1081              		.size	SetRobotMovement, .-SetRobotMovement
 1082              		.section	.text.usbPutString,"ax",%progbits
 1083              		.align	2
 1084              		.global	usbPutString
 1085              		.thumb
 1086              		.thumb_func
 1087              		.type	usbPutString, %function
 1088              	usbPutString:
 1089              	.LFB77:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 26


 325:main.c        **** 
 326:main.c        **** // ======================================
 327:main.c        **** // USBUART
 328:main.c        **** //* ========================================
 329:main.c        ****     void usbPutString(char *s)
 330:main.c        **** {
 1090              		.loc 1 330 0
 1091              		.cfi_startproc
 1092              		@ args = 0, pretend = 0, frame = 8
 1093              		@ frame_needed = 1, uses_anonymous_args = 0
 1094 0000 80B5     		push	{r7, lr}
 1095              		.cfi_def_cfa_offset 8
 1096              		.cfi_offset 7, -8
 1097              		.cfi_offset 14, -4
 1098 0002 82B0     		sub	sp, sp, #8
 1099              		.cfi_def_cfa_offset 16
 1100 0004 00AF     		add	r7, sp, #0
 1101              		.cfi_def_cfa_register 7
 1102 0006 7860     		str	r0, [r7, #4]
 331:main.c        **** // !! Assumes that *s is a string with allocated space >=64 chars     
 332:main.c        **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 333:main.c        **** //  length to 62 char (63rd char is a '!')
 334:main.c        **** 
 335:main.c        **** #ifdef USE_USB     
 336:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1103              		.loc 1 336 0
 1104 0008 00BF     		nop
 1105              	.L61:
 1106              		.loc 1 336 0 is_stmt 0 discriminator 1
 1107 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 1108 000e 0346     		mov	r3, r0
 1109 0010 002B     		cmp	r3, #0
 1110 0012 FAD0     		beq	.L61
 337:main.c        ****     s[63]='\0';
 1111              		.loc 1 337 0 is_stmt 1
 1112 0014 7B68     		ldr	r3, [r7, #4]
 1113 0016 3F33     		adds	r3, r3, #63
 1114 0018 0022     		movs	r2, #0
 1115 001a 1A70     		strb	r2, [r3]
 338:main.c        ****     s[62]='!';
 1116              		.loc 1 338 0
 1117 001c 7B68     		ldr	r3, [r7, #4]
 1118 001e 3E33     		adds	r3, r3, #62
 1119 0020 2122     		movs	r2, #33
 1120 0022 1A70     		strb	r2, [r3]
 339:main.c        ****     USBUART_PutData((uint8*)s,strlen(s));
 1121              		.loc 1 339 0
 1122 0024 7868     		ldr	r0, [r7, #4]
 1123 0026 FFF7FEFF 		bl	strlen
 1124 002a 0346     		mov	r3, r0
 1125 002c 9BB2     		uxth	r3, r3
 1126 002e 1946     		mov	r1, r3
 1127 0030 7868     		ldr	r0, [r7, #4]
 1128 0032 FFF7FEFF 		bl	USBUART_PutData
 340:main.c        **** #endif
 341:main.c        **** }
 1129              		.loc 1 341 0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 27


 1130 0036 00BF     		nop
 1131 0038 0837     		adds	r7, r7, #8
 1132              		.cfi_def_cfa_offset 8
 1133 003a BD46     		mov	sp, r7
 1134              		.cfi_def_cfa_register 13
 1135              		@ sp needed
 1136 003c 80BD     		pop	{r7, pc}
 1137              		.cfi_endproc
 1138              	.LFE77:
 1139              		.size	usbPutString, .-usbPutString
 1140 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 1141              		.align	2
 1142              		.global	usbPutChar
 1143              		.thumb
 1144              		.thumb_func
 1145              		.type	usbPutChar, %function
 1146              	usbPutChar:
 1147              	.LFB78:
 342:main.c        **** //* ========================================
 343:main.c        **** void usbPutChar(char c)
 344:main.c        **** {
 1148              		.loc 1 344 0
 1149              		.cfi_startproc
 1150              		@ args = 0, pretend = 0, frame = 8
 1151              		@ frame_needed = 1, uses_anonymous_args = 0
 1152 0000 80B5     		push	{r7, lr}
 1153              		.cfi_def_cfa_offset 8
 1154              		.cfi_offset 7, -8
 1155              		.cfi_offset 14, -4
 1156 0002 82B0     		sub	sp, sp, #8
 1157              		.cfi_def_cfa_offset 16
 1158 0004 00AF     		add	r7, sp, #0
 1159              		.cfi_def_cfa_register 7
 1160 0006 0346     		mov	r3, r0
 1161 0008 FB71     		strb	r3, [r7, #7]
 345:main.c        **** #ifdef USE_USB     
 346:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1162              		.loc 1 346 0
 1163 000a 00BF     		nop
 1164              	.L63:
 1165              		.loc 1 346 0 is_stmt 0 discriminator 1
 1166 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 1167 0010 0346     		mov	r3, r0
 1168 0012 002B     		cmp	r3, #0
 1169 0014 FAD0     		beq	.L63
 347:main.c        ****     USBUART_PutChar(c);
 1170              		.loc 1 347 0 is_stmt 1
 1171 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1172 0018 1846     		mov	r0, r3
 1173 001a FFF7FEFF 		bl	USBUART_PutChar
 348:main.c        **** #endif    
 349:main.c        **** }
 1174              		.loc 1 349 0
 1175 001e 00BF     		nop
 1176 0020 0837     		adds	r7, r7, #8
 1177              		.cfi_def_cfa_offset 8
 1178 0022 BD46     		mov	sp, r7
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 28


 1179              		.cfi_def_cfa_register 13
 1180              		@ sp needed
 1181 0024 80BD     		pop	{r7, pc}
 1182              		.cfi_endproc
 1183              	.LFE78:
 1184              		.size	usbPutChar, .-usbPutChar
 1185 0026 00BF     		.section	.text.handle_usb,"ax",%progbits
 1186              		.align	2
 1187              		.global	handle_usb
 1188              		.thumb
 1189              		.thumb_func
 1190              		.type	handle_usb, %function
 1191              	handle_usb:
 1192              	.LFB79:
 350:main.c        **** //* ========================================
 351:main.c        **** void handle_usb()
 352:main.c        **** {
 1193              		.loc 1 352 0
 1194              		.cfi_startproc
 1195              		@ args = 0, pretend = 0, frame = 8
 1196              		@ frame_needed = 1, uses_anonymous_args = 0
 1197 0000 80B5     		push	{r7, lr}
 1198              		.cfi_def_cfa_offset 8
 1199              		.cfi_offset 7, -8
 1200              		.cfi_offset 14, -4
 1201 0002 82B0     		sub	sp, sp, #8
 1202              		.cfi_def_cfa_offset 16
 1203 0004 00AF     		add	r7, sp, #0
 1204              		.cfi_def_cfa_register 7
 353:main.c        ****     // handles input at terminal, echos it back to the terminal
 354:main.c        ****     // turn echo OFF, key emulation: only CR
 355:main.c        ****     // entered string is made available in 'line' and 'flag_KB_string' is set
 356:main.c        ****     
 357:main.c        ****     static uint8 usbStarted = FALSE;
 358:main.c        ****     static uint16 usbBufCount = 0;
 359:main.c        ****     uint8 c; 
 360:main.c        ****     
 361:main.c        **** 
 362:main.c        ****     if (!usbStarted)
 1205              		.loc 1 362 0
 1206 0006 2B4B     		ldr	r3, .L74
 1207 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1208 000a 002B     		cmp	r3, #0
 1209 000c 0AD1     		bne	.L65
 363:main.c        ****     {
 364:main.c        ****         if (USBUART_GetConfiguration())
 1210              		.loc 1 364 0
 1211 000e FFF7FEFF 		bl	USBUART_GetConfiguration
 1212 0012 0346     		mov	r3, r0
 1213 0014 002B     		cmp	r3, #0
 1214 0016 49D0     		beq	.L73
 365:main.c        ****         {
 366:main.c        ****             USBUART_CDC_Init();
 1215              		.loc 1 366 0
 1216 0018 FFF7FEFF 		bl	USBUART_CDC_Init
 367:main.c        ****             usbStarted = TRUE;
 1217              		.loc 1 367 0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 29


 1218 001c 254B     		ldr	r3, .L74
 1219 001e 0122     		movs	r2, #1
 1220 0020 1A70     		strb	r2, [r3]
 368:main.c        ****         }
 369:main.c        ****     }
 370:main.c        ****     else
 371:main.c        ****     {
 372:main.c        ****         if (USBUART_DataIsReady() != 0)
 373:main.c        ****         {  
 374:main.c        ****             c = USBUART_GetChar();
 375:main.c        **** 
 376:main.c        ****             if ((c == 13) || (c == 10))
 377:main.c        ****             {
 378:main.c        **** //                if (usbBufCount > 0)
 379:main.c        ****                 {
 380:main.c        ****                     entry[usbBufCount]= '\0';
 381:main.c        ****                     strcpy(line,entry);
 382:main.c        ****                     usbBufCount = 0;
 383:main.c        ****                     flag_KB_string = 1;
 384:main.c        ****                 }
 385:main.c        ****             }
 386:main.c        ****             else 
 387:main.c        ****             {
 388:main.c        ****                 if (((c == CHAR_BACKSP) || (c == CHAR_DEL) ) && (usbBufCount > 0) )
 389:main.c        ****                     usbBufCount--;
 390:main.c        ****                 else
 391:main.c        ****                 {
 392:main.c        ****                     if (usbBufCount > (BUF_SIZE-2) ) // one less else strtok triggers a crash
 393:main.c        ****                     {
 394:main.c        ****                        USBUART_PutChar('!');        
 395:main.c        ****                     }
 396:main.c        ****                     else
 397:main.c        ****                         entry[usbBufCount++] = c;  
 398:main.c        ****                 }  
 399:main.c        ****             }
 400:main.c        ****         }
 401:main.c        ****     }    
 402:main.c        **** }
 1221              		.loc 1 402 0
 1222 0022 43E0     		b	.L73
 1223              	.L65:
 372:main.c        ****         {  
 1224              		.loc 1 372 0
 1225 0024 FFF7FEFF 		bl	USBUART_DataIsReady
 1226 0028 0346     		mov	r3, r0
 1227 002a 002B     		cmp	r3, #0
 1228 002c 3ED0     		beq	.L73
 374:main.c        **** 
 1229              		.loc 1 374 0
 1230 002e FFF7FEFF 		bl	USBUART_GetChar
 1231 0032 0346     		mov	r3, r0
 1232 0034 FB71     		strb	r3, [r7, #7]
 376:main.c        ****             {
 1233              		.loc 1 376 0
 1234 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1235 0038 0D2B     		cmp	r3, #13
 1236 003a 02D0     		beq	.L68
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 30


 376:main.c        ****             {
 1237              		.loc 1 376 0 is_stmt 0 discriminator 1
 1238 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1239 003e 0A2B     		cmp	r3, #10
 1240 0040 10D1     		bne	.L69
 1241              	.L68:
 380:main.c        ****                     strcpy(line,entry);
 1242              		.loc 1 380 0 is_stmt 1
 1243 0042 1D4B     		ldr	r3, .L74+4
 1244 0044 1B88     		ldrh	r3, [r3]
 1245 0046 1A46     		mov	r2, r3
 1246 0048 1C4B     		ldr	r3, .L74+8
 1247 004a 0021     		movs	r1, #0
 1248 004c 9954     		strb	r1, [r3, r2]
 381:main.c        ****                     usbBufCount = 0;
 1249              		.loc 1 381 0
 1250 004e 1B49     		ldr	r1, .L74+8
 1251 0050 1B48     		ldr	r0, .L74+12
 1252 0052 FFF7FEFF 		bl	strcpy
 382:main.c        ****                     flag_KB_string = 1;
 1253              		.loc 1 382 0
 1254 0056 184B     		ldr	r3, .L74+4
 1255 0058 0022     		movs	r2, #0
 1256 005a 1A80     		strh	r2, [r3]	@ movhi
 383:main.c        ****                 }
 1257              		.loc 1 383 0
 1258 005c 194B     		ldr	r3, .L74+16
 1259 005e 0122     		movs	r2, #1
 1260 0060 1A70     		strb	r2, [r3]
 1261 0062 23E0     		b	.L67
 1262              	.L69:
 388:main.c        ****                     usbBufCount--;
 1263              		.loc 1 388 0
 1264 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1265 0066 082B     		cmp	r3, #8
 1266 0068 02D0     		beq	.L70
 388:main.c        ****                     usbBufCount--;
 1267              		.loc 1 388 0 is_stmt 0 discriminator 2
 1268 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1269 006c 7F2B     		cmp	r3, #127
 1270 006e 0AD1     		bne	.L71
 1271              	.L70:
 388:main.c        ****                     usbBufCount--;
 1272              		.loc 1 388 0 discriminator 3
 1273 0070 114B     		ldr	r3, .L74+4
 1274 0072 1B88     		ldrh	r3, [r3]
 1275 0074 002B     		cmp	r3, #0
 1276 0076 06D0     		beq	.L71
 389:main.c        ****                 else
 1277              		.loc 1 389 0 is_stmt 1
 1278 0078 0F4B     		ldr	r3, .L74+4
 1279 007a 1B88     		ldrh	r3, [r3]
 1280 007c 013B     		subs	r3, r3, #1
 1281 007e 9AB2     		uxth	r2, r3
 1282 0080 0D4B     		ldr	r3, .L74+4
 1283 0082 1A80     		strh	r2, [r3]	@ movhi
 1284 0084 12E0     		b	.L67
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 31


 1285              	.L71:
 392:main.c        ****                     {
 1286              		.loc 1 392 0
 1287 0086 0C4B     		ldr	r3, .L74+4
 1288 0088 1B88     		ldrh	r3, [r3]
 1289 008a 3E2B     		cmp	r3, #62
 1290 008c 03D9     		bls	.L72
 394:main.c        ****                     }
 1291              		.loc 1 394 0
 1292 008e 2120     		movs	r0, #33
 1293 0090 FFF7FEFF 		bl	USBUART_PutChar
 1294              		.loc 1 402 0
 1295 0094 0AE0     		b	.L73
 1296              	.L72:
 397:main.c        ****                 }  
 1297              		.loc 1 397 0
 1298 0096 084B     		ldr	r3, .L74+4
 1299 0098 1B88     		ldrh	r3, [r3]
 1300 009a 5A1C     		adds	r2, r3, #1
 1301 009c 91B2     		uxth	r1, r2
 1302 009e 064A     		ldr	r2, .L74+4
 1303 00a0 1180     		strh	r1, [r2]	@ movhi
 1304 00a2 1946     		mov	r1, r3
 1305 00a4 054A     		ldr	r2, .L74+8
 1306 00a6 FB79     		ldrb	r3, [r7, #7]
 1307 00a8 5354     		strb	r3, [r2, r1]
 1308              		.loc 1 402 0
 1309 00aa FFE7     		b	.L73
 1310              	.L67:
 1311              	.L73:
 1312 00ac 00BF     		nop
 1313 00ae 0837     		adds	r7, r7, #8
 1314              		.cfi_def_cfa_offset 8
 1315 00b0 BD46     		mov	sp, r7
 1316              		.cfi_def_cfa_register 13
 1317              		@ sp needed
 1318 00b2 80BD     		pop	{r7, pc}
 1319              	.L75:
 1320              		.align	2
 1321              	.L74:
 1322 00b4 2C000000 		.word	usbStarted.8236
 1323 00b8 2E000000 		.word	usbBufCount.8237
 1324 00bc 00000000 		.word	entry
 1325 00c0 00000000 		.word	line
 1326 00c4 00000000 		.word	flag_KB_string
 1327              		.cfi_endproc
 1328              	.LFE79:
 1329              		.size	handle_usb, .-handle_usb
 1330              		.bss
 1331              	usbStarted.8236:
 1332 002c 00       		.space	1
 1333 002d 00       		.align	1
 1334              	usbBufCount.8237:
 1335 002e 0000     		.space	2
 1336              		.text
 1337              	.Letext0:
 1338              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 32


 1339              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1340              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1341              		.file 5 "vars.h"
 1342              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1343              		.section	.debug_info,"",%progbits
 1344              	.Ldebug_info0:
 1345 0000 1E060000 		.4byte	0x61e
 1346 0004 0400     		.2byte	0x4
 1347 0006 00000000 		.4byte	.Ldebug_abbrev0
 1348 000a 04       		.byte	0x4
 1349 000b 01       		.uleb128 0x1
 1350 000c 89000000 		.4byte	.LASF90
 1351 0010 0C       		.byte	0xc
 1352 0011 C7030000 		.4byte	.LASF91
 1353 0015 94040000 		.4byte	.LASF92
 1354 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1355 001d 00000000 		.4byte	0
 1356 0021 00000000 		.4byte	.Ldebug_line0
 1357 0025 02       		.uleb128 0x2
 1358 0026 01       		.byte	0x1
 1359 0027 06       		.byte	0x6
 1360 0028 8F020000 		.4byte	.LASF0
 1361 002c 02       		.uleb128 0x2
 1362 002d 01       		.byte	0x1
 1363 002e 08       		.byte	0x8
 1364 002f 13020000 		.4byte	.LASF1
 1365 0033 02       		.uleb128 0x2
 1366 0034 02       		.byte	0x2
 1367 0035 05       		.byte	0x5
 1368 0036 50000000 		.4byte	.LASF2
 1369 003a 02       		.uleb128 0x2
 1370 003b 02       		.byte	0x2
 1371 003c 07       		.byte	0x7
 1372 003d 2F030000 		.4byte	.LASF3
 1373 0041 03       		.uleb128 0x3
 1374 0042 1A040000 		.4byte	.LASF12
 1375 0046 02       		.byte	0x2
 1376 0047 3F       		.byte	0x3f
 1377 0048 4C000000 		.4byte	0x4c
 1378 004c 02       		.uleb128 0x2
 1379 004d 04       		.byte	0x4
 1380 004e 05       		.byte	0x5
 1381 004f C0010000 		.4byte	.LASF4
 1382 0053 02       		.uleb128 0x2
 1383 0054 04       		.byte	0x4
 1384 0055 07       		.byte	0x7
 1385 0056 CE030000 		.4byte	.LASF5
 1386 005a 02       		.uleb128 0x2
 1387 005b 08       		.byte	0x8
 1388 005c 05       		.byte	0x5
 1389 005d 74010000 		.4byte	.LASF6
 1390 0061 02       		.uleb128 0x2
 1391 0062 08       		.byte	0x8
 1392 0063 07       		.byte	0x7
 1393 0064 A3020000 		.4byte	.LASF7
 1394 0068 04       		.uleb128 0x4
 1395 0069 04       		.byte	0x4
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 33


 1396 006a 05       		.byte	0x5
 1397 006b 696E7400 		.ascii	"int\000"
 1398 006f 02       		.uleb128 0x2
 1399 0070 04       		.byte	0x4
 1400 0071 07       		.byte	0x7
 1401 0072 CB020000 		.4byte	.LASF8
 1402 0076 02       		.uleb128 0x2
 1403 0077 08       		.byte	0x8
 1404 0078 04       		.byte	0x4
 1405 0079 39020000 		.4byte	.LASF9
 1406 007d 02       		.uleb128 0x2
 1407 007e 04       		.byte	0x4
 1408 007f 07       		.byte	0x7
 1409 0080 67000000 		.4byte	.LASF10
 1410 0084 05       		.uleb128 0x5
 1411 0085 04       		.byte	0x4
 1412 0086 8A000000 		.4byte	0x8a
 1413 008a 02       		.uleb128 0x2
 1414 008b 01       		.byte	0x1
 1415 008c 08       		.byte	0x8
 1416 008d 5D030000 		.4byte	.LASF11
 1417 0091 03       		.uleb128 0x3
 1418 0092 9B020000 		.4byte	.LASF13
 1419 0096 03       		.byte	0x3
 1420 0097 2C       		.byte	0x2c
 1421 0098 41000000 		.4byte	0x41
 1422 009c 06       		.uleb128 0x6
 1423 009d 56010000 		.4byte	.LASF14
 1424 00a1 04       		.byte	0x4
 1425 00a2 E901     		.2byte	0x1e9
 1426 00a4 2C000000 		.4byte	0x2c
 1427 00a8 06       		.uleb128 0x6
 1428 00a9 38010000 		.4byte	.LASF15
 1429 00ad 04       		.byte	0x4
 1430 00ae EA01     		.2byte	0x1ea
 1431 00b0 3A000000 		.4byte	0x3a
 1432 00b4 06       		.uleb128 0x6
 1433 00b5 C0030000 		.4byte	.LASF16
 1434 00b9 04       		.byte	0x4
 1435 00ba EB01     		.2byte	0x1eb
 1436 00bc 53000000 		.4byte	0x53
 1437 00c0 06       		.uleb128 0x6
 1438 00c1 8F010000 		.4byte	.LASF17
 1439 00c5 04       		.byte	0x4
 1440 00c6 EC01     		.2byte	0x1ec
 1441 00c8 25000000 		.4byte	0x25
 1442 00cc 06       		.uleb128 0x6
 1443 00cd 50010000 		.4byte	.LASF18
 1444 00d1 04       		.byte	0x4
 1445 00d2 ED01     		.2byte	0x1ed
 1446 00d4 33000000 		.4byte	0x33
 1447 00d8 02       		.uleb128 0x2
 1448 00d9 04       		.byte	0x4
 1449 00da 04       		.byte	0x4
 1450 00db 6E010000 		.4byte	.LASF19
 1451 00df 02       		.uleb128 0x2
 1452 00e0 08       		.byte	0x8
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 34


 1453 00e1 04       		.byte	0x4
 1454 00e2 27000000 		.4byte	.LASF20
 1455 00e6 07       		.uleb128 0x7
 1456 00e7 42030000 		.4byte	.LASF93
 1457 00eb 20       		.byte	0x20
 1458 00ec 05       		.byte	0x5
 1459 00ed 29       		.byte	0x29
 1460 00ee BF010000 		.4byte	0x1bf
 1461 00f2 08       		.uleb128 0x8
 1462 00f3 F7040000 		.4byte	.LASF21
 1463 00f7 05       		.byte	0x5
 1464 00f8 2A       		.byte	0x2a
 1465 00f9 C0000000 		.4byte	0xc0
 1466 00fd 00       		.byte	0
 1467 00fe 08       		.uleb128 0x8
 1468 00ff 3F010000 		.4byte	.LASF22
 1469 0103 05       		.byte	0x5
 1470 0104 2B       		.byte	0x2b
 1471 0105 9C000000 		.4byte	0x9c
 1472 0109 01       		.byte	0x1
 1473 010a 08       		.uleb128 0x8
 1474 010b A4030000 		.4byte	.LASF23
 1475 010f 05       		.byte	0x5
 1476 0110 2C       		.byte	0x2c
 1477 0111 CC000000 		.4byte	0xcc
 1478 0115 02       		.byte	0x2
 1479 0116 08       		.uleb128 0x8
 1480 0117 7C040000 		.4byte	.LASF24
 1481 011b 05       		.byte	0x5
 1482 011c 2D       		.byte	0x2d
 1483 011d CC000000 		.4byte	0xcc
 1484 0121 04       		.byte	0x4
 1485 0122 08       		.uleb128 0x8
 1486 0123 FC040000 		.4byte	.LASF25
 1487 0127 05       		.byte	0x5
 1488 0128 2E       		.byte	0x2e
 1489 0129 CC000000 		.4byte	0xcc
 1490 012d 06       		.byte	0x6
 1491 012e 08       		.uleb128 0x8
 1492 012f B8010000 		.4byte	.LASF26
 1493 0133 05       		.byte	0x5
 1494 0134 2F       		.byte	0x2f
 1495 0135 CC000000 		.4byte	0xcc
 1496 0139 08       		.byte	0x8
 1497 013a 08       		.uleb128 0x8
 1498 013b 29040000 		.4byte	.LASF27
 1499 013f 05       		.byte	0x5
 1500 0140 30       		.byte	0x30
 1501 0141 CC000000 		.4byte	0xcc
 1502 0145 0A       		.byte	0xa
 1503 0146 08       		.uleb128 0x8
 1504 0147 6F020000 		.4byte	.LASF28
 1505 014b 05       		.byte	0x5
 1506 014c 31       		.byte	0x31
 1507 014d CC000000 		.4byte	0xcc
 1508 0151 0C       		.byte	0xc
 1509 0152 08       		.uleb128 0x8
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 35


 1510 0153 AB010000 		.4byte	.LASF29
 1511 0157 05       		.byte	0x5
 1512 0158 32       		.byte	0x32
 1513 0159 CC000000 		.4byte	0xcc
 1514 015d 0E       		.byte	0xe
 1515 015e 08       		.uleb128 0x8
 1516 015f 87020000 		.4byte	.LASF30
 1517 0163 05       		.byte	0x5
 1518 0164 33       		.byte	0x33
 1519 0165 CC000000 		.4byte	0xcc
 1520 0169 10       		.byte	0x10
 1521 016a 08       		.uleb128 0x8
 1522 016b 78030000 		.4byte	.LASF31
 1523 016f 05       		.byte	0x5
 1524 0170 34       		.byte	0x34
 1525 0171 CC000000 		.4byte	0xcc
 1526 0175 12       		.byte	0x12
 1527 0176 08       		.uleb128 0x8
 1528 0177 8D030000 		.4byte	.LASF32
 1529 017b 05       		.byte	0x5
 1530 017c 35       		.byte	0x35
 1531 017d CC000000 		.4byte	0xcc
 1532 0181 14       		.byte	0x14
 1533 0182 08       		.uleb128 0x8
 1534 0183 5C010000 		.4byte	.LASF33
 1535 0187 05       		.byte	0x5
 1536 0188 36       		.byte	0x36
 1537 0189 CC000000 		.4byte	0xcc
 1538 018d 16       		.byte	0x16
 1539 018e 08       		.uleb128 0x8
 1540 018f 48000000 		.4byte	.LASF34
 1541 0193 05       		.byte	0x5
 1542 0194 37       		.byte	0x37
 1543 0195 CC000000 		.4byte	0xcc
 1544 0199 18       		.byte	0x18
 1545 019a 08       		.uleb128 0x8
 1546 019b A3010000 		.4byte	.LASF35
 1547 019f 05       		.byte	0x5
 1548 01a0 38       		.byte	0x38
 1549 01a1 CC000000 		.4byte	0xcc
 1550 01a5 1A       		.byte	0x1a
 1551 01a6 08       		.uleb128 0x8
 1552 01a7 1A030000 		.4byte	.LASF36
 1553 01ab 05       		.byte	0x5
 1554 01ac 39       		.byte	0x39
 1555 01ad CC000000 		.4byte	0xcc
 1556 01b1 1C       		.byte	0x1c
 1557 01b2 08       		.uleb128 0x8
 1558 01b3 80030000 		.4byte	.LASF37
 1559 01b7 05       		.byte	0x5
 1560 01b8 3A       		.byte	0x3a
 1561 01b9 CC000000 		.4byte	0xcc
 1562 01bd 1E       		.byte	0x1e
 1563 01be 00       		.byte	0
 1564 01bf 09       		.uleb128 0x9
 1565 01c0 70000000 		.4byte	.LASF94
 1566 01c4 04       		.byte	0x4
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 36


 1567 01c5 6F000000 		.4byte	0x6f
 1568 01c9 01       		.byte	0x1
 1569 01ca 27       		.byte	0x27
 1570 01cb FA010000 		.4byte	0x1fa
 1571 01cf 0A       		.uleb128 0xa
 1572 01d0 62030000 		.4byte	.LASF38
 1573 01d4 00       		.byte	0
 1574 01d5 0A       		.uleb128 0xa
 1575 01d6 AF030000 		.4byte	.LASF39
 1576 01da 01       		.byte	0x1
 1577 01db 0A       		.uleb128 0xa
 1578 01dc 17000000 		.4byte	.LASF40
 1579 01e0 02       		.byte	0x2
 1580 01e1 0A       		.uleb128 0xa
 1581 01e2 28010000 		.4byte	.LASF41
 1582 01e6 03       		.byte	0x3
 1583 01e7 0A       		.uleb128 0xa
 1584 01e8 BA020000 		.4byte	.LASF42
 1585 01ec 04       		.byte	0x4
 1586 01ed 0A       		.uleb128 0xa
 1587 01ee 24040000 		.4byte	.LASF43
 1588 01f2 05       		.byte	0x5
 1589 01f3 0A       		.uleb128 0xa
 1590 01f4 EB030000 		.4byte	.LASF44
 1591 01f8 06       		.byte	0x6
 1592 01f9 00       		.byte	0
 1593 01fa 0B       		.uleb128 0xb
 1594 01fb 45010000 		.4byte	.LASF45
 1595 01ff 01       		.byte	0x1
 1596 0200 41       		.byte	0x41
 1597 0201 00000000 		.4byte	.LFB64
 1598 0205 C8000000 		.4byte	.LFE64-.LFB64
 1599 0209 01       		.uleb128 0x1
 1600 020a 9C       		.byte	0x9c
 1601 020b 0B       		.uleb128 0xb
 1602 020c 0E050000 		.4byte	.LASF46
 1603 0210 01       		.byte	0x1
 1604 0211 51       		.byte	0x51
 1605 0212 00000000 		.4byte	.LFB65
 1606 0216 18000000 		.4byte	.LFE65-.LFB65
 1607 021a 01       		.uleb128 0x1
 1608 021b 9C       		.byte	0x9c
 1609 021c 0B       		.uleb128 0xb
 1610 021d DE010000 		.4byte	.LASF47
 1611 0221 01       		.byte	0x1
 1612 0222 58       		.byte	0x58
 1613 0223 00000000 		.4byte	.LFB66
 1614 0227 18000000 		.4byte	.LFE66-.LFB66
 1615 022b 01       		.uleb128 0x1
 1616 022c 9C       		.byte	0x9c
 1617 022d 0B       		.uleb128 0xb
 1618 022e F3030000 		.4byte	.LASF48
 1619 0232 01       		.byte	0x1
 1620 0233 5F       		.byte	0x5f
 1621 0234 00000000 		.4byte	.LFB67
 1622 0238 18000000 		.4byte	.LFE67-.LFB67
 1623 023c 01       		.uleb128 0x1
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 37


 1624 023d 9C       		.byte	0x9c
 1625 023e 0B       		.uleb128 0xb
 1626 023f 1C010000 		.4byte	.LASF49
 1627 0243 01       		.byte	0x1
 1628 0244 65       		.byte	0x65
 1629 0245 00000000 		.4byte	.LFB68
 1630 0249 18000000 		.4byte	.LFE68-.LFB68
 1631 024d 01       		.uleb128 0x1
 1632 024e 9C       		.byte	0x9c
 1633 024f 0B       		.uleb128 0xb
 1634 0250 23030000 		.4byte	.LASF50
 1635 0254 01       		.byte	0x1
 1636 0255 6B       		.byte	0x6b
 1637 0256 00000000 		.4byte	.LFB69
 1638 025a 18000000 		.4byte	.LFE69-.LFB69
 1639 025e 01       		.uleb128 0x1
 1640 025f 9C       		.byte	0x9c
 1641 0260 0B       		.uleb128 0xb
 1642 0261 00000000 		.4byte	.LASF51
 1643 0265 01       		.byte	0x1
 1644 0266 71       		.byte	0x71
 1645 0267 00000000 		.4byte	.LFB70
 1646 026b 18000000 		.4byte	.LFE70-.LFB70
 1647 026f 01       		.uleb128 0x1
 1648 0270 9C       		.byte	0x9c
 1649 0271 0B       		.uleb128 0xb
 1650 0272 0D030000 		.4byte	.LASF52
 1651 0276 01       		.byte	0x1
 1652 0277 77       		.byte	0x77
 1653 0278 00000000 		.4byte	.LFB71
 1654 027c 1A000000 		.4byte	.LFE71-.LFB71
 1655 0280 01       		.uleb128 0x1
 1656 0281 9C       		.byte	0x9c
 1657 0282 0C       		.uleb128 0xc
 1658 0283 17010000 		.4byte	.LASF53
 1659 0287 01       		.byte	0x1
 1660 0288 82       		.byte	0x82
 1661 0289 68000000 		.4byte	0x68
 1662 028d 00000000 		.4byte	.LFB72
 1663 0291 E0000000 		.4byte	.LFE72-.LFB72
 1664 0295 01       		.uleb128 0x1
 1665 0296 9C       		.byte	0x9c
 1666 0297 0D       		.uleb128 0xd
 1667 0298 51040000 		.4byte	.LASF95
 1668 029c 01       		.byte	0x1
 1669 029d B9       		.byte	0xb9
 1670 029e CC000000 		.4byte	0xcc
 1671 02a2 00000000 		.4byte	.LFB73
 1672 02a6 6C000000 		.4byte	.LFE73-.LFB73
 1673 02aa 01       		.uleb128 0x1
 1674 02ab 9C       		.byte	0x9c
 1675 02ac DB020000 		.4byte	0x2db
 1676 02b0 0E       		.uleb128 0xe
 1677 02b1 08040000 		.4byte	.LASF59
 1678 02b5 01       		.byte	0x1
 1679 02b6 B9       		.byte	0xb9
 1680 02b7 A8000000 		.4byte	0xa8
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 38


 1681 02bb 02       		.uleb128 0x2
 1682 02bc 91       		.byte	0x91
 1683 02bd 66       		.sleb128 -26
 1684 02be 0F       		.uleb128 0xf
 1685 02bf 63707300 		.ascii	"cps\000"
 1686 02c3 01       		.byte	0x1
 1687 02c4 BB       		.byte	0xbb
 1688 02c5 D8000000 		.4byte	0xd8
 1689 02c9 02       		.uleb128 0x2
 1690 02ca 91       		.byte	0x91
 1691 02cb 6C       		.sleb128 -20
 1692 02cc 0F       		.uleb128 0xf
 1693 02cd 72706D00 		.ascii	"rpm\000"
 1694 02d1 01       		.byte	0x1
 1695 02d2 BC       		.byte	0xbc
 1696 02d3 CC000000 		.4byte	0xcc
 1697 02d7 02       		.uleb128 0x2
 1698 02d8 91       		.byte	0x91
 1699 02d9 6A       		.sleb128 -22
 1700 02da 00       		.byte	0
 1701 02db 10       		.uleb128 0x10
 1702 02dc 4C030000 		.4byte	.LASF55
 1703 02e0 01       		.byte	0x1
 1704 02e1 C4       		.byte	0xc4
 1705 02e2 00000000 		.4byte	.LFB74
 1706 02e6 48000000 		.4byte	.LFE74-.LFB74
 1707 02ea 01       		.uleb128 0x1
 1708 02eb 9C       		.byte	0x9c
 1709 02ec 11       		.uleb128 0x11
 1710 02ed C9010000 		.4byte	.LASF57
 1711 02f1 01       		.byte	0x1
 1712 02f2 D2       		.byte	0xd2
 1713 02f3 BF010000 		.4byte	0x1bf
 1714 02f7 00000000 		.4byte	.LFB75
 1715 02fb F0000000 		.4byte	.LFE75-.LFB75
 1716 02ff 01       		.uleb128 0x1
 1717 0300 9C       		.byte	0x9c
 1718 0301 14030000 		.4byte	0x314
 1719 0305 12       		.uleb128 0x12
 1720 0306 E8040000 		.4byte	.LASF54
 1721 030a 01       		.byte	0x1
 1722 030b D3       		.byte	0xd3
 1723 030c BF010000 		.4byte	0x1bf
 1724 0310 02       		.uleb128 0x2
 1725 0311 91       		.byte	0x91
 1726 0312 74       		.sleb128 -12
 1727 0313 00       		.byte	0
 1728 0314 13       		.uleb128 0x13
 1729 0315 FC020000 		.4byte	.LASF56
 1730 0319 01       		.byte	0x1
 1731 031a 2901     		.2byte	0x129
 1732 031c 00000000 		.4byte	.LFB76
 1733 0320 68000000 		.4byte	.LFE76-.LFB76
 1734 0324 01       		.uleb128 0x1
 1735 0325 9C       		.byte	0x9c
 1736 0326 14       		.uleb128 0x14
 1737 0327 82010000 		.4byte	.LASF58
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 39


 1738 032b 01       		.byte	0x1
 1739 032c 4901     		.2byte	0x149
 1740 032e 00000000 		.4byte	.LFB77
 1741 0332 3E000000 		.4byte	.LFE77-.LFB77
 1742 0336 01       		.uleb128 0x1
 1743 0337 9C       		.byte	0x9c
 1744 0338 4A030000 		.4byte	0x34a
 1745 033c 15       		.uleb128 0x15
 1746 033d 7300     		.ascii	"s\000"
 1747 033f 01       		.byte	0x1
 1748 0340 4901     		.2byte	0x149
 1749 0342 84000000 		.4byte	0x84
 1750 0346 02       		.uleb128 0x2
 1751 0347 91       		.byte	0x91
 1752 0348 74       		.sleb128 -12
 1753 0349 00       		.byte	0
 1754 034a 14       		.uleb128 0x14
 1755 034b 0C000000 		.4byte	.LASF60
 1756 034f 01       		.byte	0x1
 1757 0350 5701     		.2byte	0x157
 1758 0352 00000000 		.4byte	.LFB78
 1759 0356 26000000 		.4byte	.LFE78-.LFB78
 1760 035a 01       		.uleb128 0x1
 1761 035b 9C       		.byte	0x9c
 1762 035c 6E030000 		.4byte	0x36e
 1763 0360 15       		.uleb128 0x15
 1764 0361 6300     		.ascii	"c\000"
 1765 0363 01       		.byte	0x1
 1766 0364 5701     		.2byte	0x157
 1767 0366 8A000000 		.4byte	0x8a
 1768 036a 02       		.uleb128 0x2
 1769 036b 91       		.byte	0x91
 1770 036c 77       		.sleb128 -9
 1771 036d 00       		.byte	0
 1772 036e 16       		.uleb128 0x16
 1773 036f 46040000 		.4byte	.LASF96
 1774 0373 01       		.byte	0x1
 1775 0374 5F01     		.2byte	0x15f
 1776 0376 00000000 		.4byte	.LFB79
 1777 037a C8000000 		.4byte	.LFE79-.LFB79
 1778 037e 01       		.uleb128 0x1
 1779 037f 9C       		.byte	0x9c
 1780 0380 B6030000 		.4byte	0x3b6
 1781 0384 17       		.uleb128 0x17
 1782 0385 E0030000 		.4byte	.LASF61
 1783 0389 01       		.byte	0x1
 1784 038a 6501     		.2byte	0x165
 1785 038c 9C000000 		.4byte	0x9c
 1786 0390 05       		.uleb128 0x5
 1787 0391 03       		.byte	0x3
 1788 0392 2C000000 		.4byte	usbStarted.8236
 1789 0396 17       		.uleb128 0x17
 1790 0397 F0020000 		.4byte	.LASF62
 1791 039b 01       		.byte	0x1
 1792 039c 6601     		.2byte	0x166
 1793 039e A8000000 		.4byte	0xa8
 1794 03a2 05       		.uleb128 0x5
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 40


 1795 03a3 03       		.byte	0x3
 1796 03a4 2E000000 		.4byte	usbBufCount.8237
 1797 03a8 18       		.uleb128 0x18
 1798 03a9 6300     		.ascii	"c\000"
 1799 03ab 01       		.byte	0x1
 1800 03ac 6701     		.2byte	0x167
 1801 03ae 9C000000 		.4byte	0x9c
 1802 03b2 02       		.uleb128 0x2
 1803 03b3 91       		.byte	0x91
 1804 03b4 77       		.sleb128 -9
 1805 03b5 00       		.byte	0
 1806 03b6 19       		.uleb128 0x19
 1807 03b7 87040000 		.4byte	.LASF63
 1808 03bb 06       		.byte	0x6
 1809 03bc 1207     		.2byte	0x712
 1810 03be C2030000 		.4byte	0x3c2
 1811 03c2 1A       		.uleb128 0x1a
 1812 03c3 91000000 		.4byte	0x91
 1813 03c7 1B       		.uleb128 0x1b
 1814 03c8 747300   		.ascii	"ts\000"
 1815 03cb 05       		.byte	0x5
 1816 03cc 10       		.byte	0x10
 1817 03cd 9C000000 		.4byte	0x9c
 1818 03d1 05       		.uleb128 0x5
 1819 03d2 03       		.byte	0x3
 1820 03d3 00000000 		.4byte	ts
 1821 03d7 1C       		.uleb128 0x1c
 1822 03d8 20000000 		.4byte	.LASF64
 1823 03dc 05       		.byte	0x5
 1824 03dd 11       		.byte	0x11
 1825 03de A8000000 		.4byte	0xa8
 1826 03e2 05       		.uleb128 0x5
 1827 03e3 03       		.byte	0x3
 1828 03e4 00000000 		.4byte	ts_enc
 1829 03e8 1C       		.uleb128 0x1c
 1830 03e9 3C040000 		.4byte	.LASF65
 1831 03ed 05       		.byte	0x5
 1832 03ee 12       		.byte	0x12
 1833 03ef A8000000 		.4byte	0xa8
 1834 03f3 05       		.uleb128 0x5
 1835 03f4 03       		.byte	0x3
 1836 03f5 00000000 		.4byte	ts_update
 1837 03f9 1C       		.uleb128 0x1c
 1838 03fa FF030000 		.4byte	.LASF66
 1839 03fe 05       		.byte	0x5
 1840 03ff 13       		.byte	0x13
 1841 0400 A8000000 		.4byte	0xa8
 1842 0404 05       		.uleb128 0x5
 1843 0405 03       		.byte	0x3
 1844 0406 00000000 		.4byte	ts_speed
 1845 040a 1C       		.uleb128 0x1c
 1846 040b 31040000 		.4byte	.LASF67
 1847 040f 05       		.byte	0x5
 1848 0410 14       		.byte	0x14
 1849 0411 A8000000 		.4byte	0xa8
 1850 0415 05       		.uleb128 0x5
 1851 0416 03       		.byte	0x3
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 41


 1852 0417 00000000 		.4byte	ts_display
 1853 041b 1C       		.uleb128 0x1c
 1854 041c 0E040000 		.4byte	.LASF68
 1855 0420 05       		.byte	0x5
 1856 0421 16       		.byte	0x16
 1857 0422 9C000000 		.4byte	0x9c
 1858 0426 05       		.uleb128 0x5
 1859 0427 03       		.byte	0x3
 1860 0428 00000000 		.4byte	flag_ts_enc
 1861 042c 1C       		.uleb128 0x1c
 1862 042d 94010000 		.4byte	.LASF69
 1863 0431 05       		.byte	0x5
 1864 0432 17       		.byte	0x17
 1865 0433 9C000000 		.4byte	0x9c
 1866 0437 05       		.uleb128 0x5
 1867 0438 03       		.byte	0x3
 1868 0439 00000000 		.4byte	flag_ts_update
 1869 043d 1C       		.uleb128 0x1c
 1870 043e 3A000000 		.4byte	.LASF70
 1871 0442 05       		.byte	0x5
 1872 0443 18       		.byte	0x18
 1873 0444 9C000000 		.4byte	0x9c
 1874 0448 05       		.uleb128 0x5
 1875 0449 03       		.byte	0x3
 1876 044a 00000000 		.4byte	flag_ts_speed
 1877 044e 1C       		.uleb128 0x1c
 1878 044f FB010000 		.4byte	.LASF71
 1879 0453 05       		.byte	0x5
 1880 0454 19       		.byte	0x19
 1881 0455 9C000000 		.4byte	0x9c
 1882 0459 05       		.uleb128 0x5
 1883 045a 03       		.byte	0x3
 1884 045b 00000000 		.4byte	flag_ts_display
 1885 045f 1C       		.uleb128 0x1c
 1886 0460 0B020000 		.4byte	.LASF72
 1887 0464 05       		.byte	0x5
 1888 0465 1C       		.byte	0x1c
 1889 0466 9C000000 		.4byte	0x9c
 1890 046a 05       		.uleb128 0x5
 1891 046b 03       		.byte	0x3
 1892 046c 00000000 		.4byte	flag_rx
 1893 0470 1C       		.uleb128 0x1c
 1894 0471 2E000000 		.4byte	.LASF73
 1895 0475 05       		.byte	0x5
 1896 0476 1D       		.byte	0x1d
 1897 0477 9C000000 		.4byte	0x9c
 1898 047b 05       		.uleb128 0x5
 1899 047c 03       		.byte	0x3
 1900 047d 00000000 		.4byte	flag_packet
 1901 0481 1C       		.uleb128 0x1c
 1902 0482 E1020000 		.4byte	.LASF74
 1903 0486 05       		.byte	0x5
 1904 0487 1E       		.byte	0x1e
 1905 0488 9C000000 		.4byte	0x9c
 1906 048c 05       		.uleb128 0x5
 1907 048d 03       		.byte	0x3
 1908 048e 00000000 		.4byte	flag_KB_string
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 42


 1909 0492 1C       		.uleb128 0x1c
 1910 0493 78020000 		.4byte	.LASF75
 1911 0497 05       		.byte	0x5
 1912 0498 20       		.byte	0x20
 1913 0499 9C000000 		.4byte	0x9c
 1914 049d 05       		.uleb128 0x5
 1915 049e 03       		.byte	0x3
 1916 049f 00000000 		.4byte	dataready_flag
 1917 04a3 1C       		.uleb128 0x1c
 1918 04a4 60040000 		.4byte	.LASF76
 1919 04a8 05       		.byte	0x5
 1920 04a9 22       		.byte	0x22
 1921 04aa 9C000000 		.4byte	0x9c
 1922 04ae 05       		.uleb128 0x5
 1923 04af 03       		.byte	0x3
 1924 04b0 00000000 		.4byte	flag_rf_transmission_active
 1925 04b4 1D       		.uleb128 0x1d
 1926 04b5 8A000000 		.4byte	0x8a
 1927 04b9 C4040000 		.4byte	0x4c4
 1928 04bd 1E       		.uleb128 0x1e
 1929 04be 7D000000 		.4byte	0x7d
 1930 04c2 3F       		.byte	0x3f
 1931 04c3 00       		.byte	0
 1932 04c4 1C       		.uleb128 0x1c
 1933 04c5 96030000 		.4byte	.LASF77
 1934 04c9 05       		.byte	0x5
 1935 04ca 25       		.byte	0x25
 1936 04cb B4040000 		.4byte	0x4b4
 1937 04cf 05       		.uleb128 0x5
 1938 04d0 03       		.byte	0x3
 1939 04d1 00000000 		.4byte	displaystring
 1940 04d5 1C       		.uleb128 0x1c
 1941 04d6 69010000 		.4byte	.LASF78
 1942 04da 05       		.byte	0x5
 1943 04db 26       		.byte	0x26
 1944 04dc B4040000 		.4byte	0x4b4
 1945 04e0 05       		.uleb128 0x5
 1946 04e1 03       		.byte	0x3
 1947 04e2 00000000 		.4byte	line
 1948 04e6 1C       		.uleb128 0x1c
 1949 04e7 33020000 		.4byte	.LASF79
 1950 04eb 05       		.byte	0x5
 1951 04ec 26       		.byte	0x26
 1952 04ed B4040000 		.4byte	0x4b4
 1953 04f1 05       		.uleb128 0x5
 1954 04f2 03       		.byte	0x3
 1955 04f3 00000000 		.4byte	entry
 1956 04f7 1D       		.uleb128 0x1d
 1957 04f8 9C000000 		.4byte	0x9c
 1958 04fc 07050000 		.4byte	0x507
 1959 0500 1E       		.uleb128 0x1e
 1960 0501 7D000000 		.4byte	0x7d
 1961 0505 3F       		.byte	0x3f
 1962 0506 00       		.byte	0
 1963 0507 1C       		.uleb128 0x1c
 1964 0508 7F000000 		.4byte	.LASF80
 1965 050c 05       		.byte	0x5
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 43


 1966 050d 27       		.byte	0x27
 1967 050e F7040000 		.4byte	0x4f7
 1968 0512 05       		.uleb128 0x5
 1969 0513 03       		.byte	0x3
 1970 0514 00000000 		.4byte	usbBuffer
 1971 0518 1C       		.uleb128 0x1c
 1972 0519 5A000000 		.4byte	.LASF81
 1973 051d 05       		.byte	0x5
 1974 051e 3C       		.byte	0x3c
 1975 051f E6000000 		.4byte	0xe6
 1976 0523 05       		.uleb128 0x5
 1977 0524 03       		.byte	0x3
 1978 0525 00000000 		.4byte	system_state
 1979 0529 1C       		.uleb128 0x1c
 1980 052a EA010000 		.4byte	.LASF82
 1981 052e 01       		.byte	0x1
 1982 052f 29       		.byte	0x29
 1983 0530 BF010000 		.4byte	0x1bf
 1984 0534 05       		.uleb128 0x5
 1985 0535 03       		.byte	0x3
 1986 0536 00000000 		.4byte	currentDirection
 1987 053a 1C       		.uleb128 0x1c
 1988 053b 45020000 		.4byte	.LASF83
 1989 053f 01       		.byte	0x1
 1990 0540 2A       		.byte	0x2a
 1991 0541 BF010000 		.4byte	0x1bf
 1992 0545 05       		.uleb128 0x5
 1993 0546 03       		.byte	0x3
 1994 0547 00000000 		.4byte	previousDirection
 1995 054b 1B       		.uleb128 0x1b
 1996 054c 733100   		.ascii	"s1\000"
 1997 054f 01       		.byte	0x1
 1998 0550 2D       		.byte	0x2d
 1999 0551 9C000000 		.4byte	0x9c
 2000 0555 05       		.uleb128 0x5
 2001 0556 03       		.byte	0x3
 2002 0557 00000000 		.4byte	s1
 2003 055b 1B       		.uleb128 0x1b
 2004 055c 733200   		.ascii	"s2\000"
 2005 055f 01       		.byte	0x1
 2006 0560 2E       		.byte	0x2e
 2007 0561 9C000000 		.4byte	0x9c
 2008 0565 05       		.uleb128 0x5
 2009 0566 03       		.byte	0x3
 2010 0567 00000000 		.4byte	s2
 2011 056b 1B       		.uleb128 0x1b
 2012 056c 733300   		.ascii	"s3\000"
 2013 056f 01       		.byte	0x1
 2014 0570 2F       		.byte	0x2f
 2015 0571 9C000000 		.4byte	0x9c
 2016 0575 05       		.uleb128 0x5
 2017 0576 03       		.byte	0x3
 2018 0577 00000000 		.4byte	s3
 2019 057b 1B       		.uleb128 0x1b
 2020 057c 733400   		.ascii	"s4\000"
 2021 057f 01       		.byte	0x1
 2022 0580 30       		.byte	0x30
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 44


 2023 0581 9C000000 		.4byte	0x9c
 2024 0585 05       		.uleb128 0x5
 2025 0586 03       		.byte	0x3
 2026 0587 00000000 		.4byte	s4
 2027 058b 1B       		.uleb128 0x1b
 2028 058c 733500   		.ascii	"s5\000"
 2029 058f 01       		.byte	0x1
 2030 0590 31       		.byte	0x31
 2031 0591 9C000000 		.4byte	0x9c
 2032 0595 05       		.uleb128 0x5
 2033 0596 03       		.byte	0x3
 2034 0597 00000000 		.4byte	s5
 2035 059b 1B       		.uleb128 0x1b
 2036 059c 733600   		.ascii	"s6\000"
 2037 059f 01       		.byte	0x1
 2038 05a0 32       		.byte	0x32
 2039 05a1 9C000000 		.4byte	0x9c
 2040 05a5 05       		.uleb128 0x5
 2041 05a6 03       		.byte	0x3
 2042 05a7 00000000 		.4byte	s6
 2043 05ab 1C       		.uleb128 0x1c
 2044 05ac 21020000 		.4byte	.LASF84
 2045 05b0 01       		.byte	0x1
 2046 05b1 36       		.byte	0x36
 2047 05b2 B4000000 		.4byte	0xb4
 2048 05b6 05       		.uleb128 0x5
 2049 05b7 03       		.byte	0x3
 2050 05b8 00000000 		.4byte	totalMilliseconds
 2051 05bc 1C       		.uleb128 0x1c
 2052 05bd 57020000 		.4byte	.LASF85
 2053 05c1 01       		.byte	0x1
 2054 05c2 37       		.byte	0x37
 2055 05c3 B4000000 		.4byte	0xb4
 2056 05c7 05       		.uleb128 0x5
 2057 05c8 03       		.byte	0x3
 2058 05c9 00000000 		.4byte	totalDistance
 2059 05cd 1D       		.uleb128 0x1d
 2060 05ce 8A000000 		.4byte	0x8a
 2061 05d2 DD050000 		.4byte	0x5dd
 2062 05d6 1E       		.uleb128 0x1e
 2063 05d7 7D000000 		.4byte	0x7d
 2064 05db 44       		.byte	0x44
 2065 05dc 00       		.byte	0
 2066 05dd 1C       		.uleb128 0x1c
 2067 05de B9030000 		.4byte	.LASF86
 2068 05e2 01       		.byte	0x1
 2069 05e3 39       		.byte	0x39
 2070 05e4 CD050000 		.4byte	0x5cd
 2071 05e8 05       		.uleb128 0x5
 2072 05e9 03       		.byte	0x3
 2073 05ea 00000000 		.4byte	buffer
 2074 05ee 1C       		.uleb128 0x1c
 2075 05ef 6A030000 		.4byte	.LASF87
 2076 05f3 01       		.byte	0x1
 2077 05f4 3A       		.byte	0x3a
 2078 05f5 68000000 		.4byte	0x68
 2079 05f9 05       		.uleb128 0x5
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 45


 2080 05fa 03       		.byte	0x3
 2081 05fb 00000000 		.4byte	quadDec2Count
 2082 05ff 1C       		.uleb128 0x1c
 2083 0600 D8020000 		.4byte	.LASF88
 2084 0604 01       		.byte	0x1
 2085 0605 3B       		.byte	0x3b
 2086 0606 68000000 		.4byte	0x68
 2087 060a 05       		.uleb128 0x5
 2088 060b 03       		.byte	0x3
 2089 060c 00000000 		.4byte	timerInt
 2090 0610 1C       		.uleb128 0x1c
 2091 0611 65020000 		.4byte	.LASF89
 2092 0615 01       		.byte	0x1
 2093 0616 3C       		.byte	0x3c
 2094 0617 68000000 		.4byte	0x68
 2095 061b 05       		.uleb128 0x5
 2096 061c 03       		.byte	0x3
 2097 061d 00000000 		.4byte	keepLedOn
 2098 0621 00       		.byte	0
 2099              		.section	.debug_abbrev,"",%progbits
 2100              	.Ldebug_abbrev0:
 2101 0000 01       		.uleb128 0x1
 2102 0001 11       		.uleb128 0x11
 2103 0002 01       		.byte	0x1
 2104 0003 25       		.uleb128 0x25
 2105 0004 0E       		.uleb128 0xe
 2106 0005 13       		.uleb128 0x13
 2107 0006 0B       		.uleb128 0xb
 2108 0007 03       		.uleb128 0x3
 2109 0008 0E       		.uleb128 0xe
 2110 0009 1B       		.uleb128 0x1b
 2111 000a 0E       		.uleb128 0xe
 2112 000b 55       		.uleb128 0x55
 2113 000c 17       		.uleb128 0x17
 2114 000d 11       		.uleb128 0x11
 2115 000e 01       		.uleb128 0x1
 2116 000f 10       		.uleb128 0x10
 2117 0010 17       		.uleb128 0x17
 2118 0011 00       		.byte	0
 2119 0012 00       		.byte	0
 2120 0013 02       		.uleb128 0x2
 2121 0014 24       		.uleb128 0x24
 2122 0015 00       		.byte	0
 2123 0016 0B       		.uleb128 0xb
 2124 0017 0B       		.uleb128 0xb
 2125 0018 3E       		.uleb128 0x3e
 2126 0019 0B       		.uleb128 0xb
 2127 001a 03       		.uleb128 0x3
 2128 001b 0E       		.uleb128 0xe
 2129 001c 00       		.byte	0
 2130 001d 00       		.byte	0
 2131 001e 03       		.uleb128 0x3
 2132 001f 16       		.uleb128 0x16
 2133 0020 00       		.byte	0
 2134 0021 03       		.uleb128 0x3
 2135 0022 0E       		.uleb128 0xe
 2136 0023 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 46


 2137 0024 0B       		.uleb128 0xb
 2138 0025 3B       		.uleb128 0x3b
 2139 0026 0B       		.uleb128 0xb
 2140 0027 49       		.uleb128 0x49
 2141 0028 13       		.uleb128 0x13
 2142 0029 00       		.byte	0
 2143 002a 00       		.byte	0
 2144 002b 04       		.uleb128 0x4
 2145 002c 24       		.uleb128 0x24
 2146 002d 00       		.byte	0
 2147 002e 0B       		.uleb128 0xb
 2148 002f 0B       		.uleb128 0xb
 2149 0030 3E       		.uleb128 0x3e
 2150 0031 0B       		.uleb128 0xb
 2151 0032 03       		.uleb128 0x3
 2152 0033 08       		.uleb128 0x8
 2153 0034 00       		.byte	0
 2154 0035 00       		.byte	0
 2155 0036 05       		.uleb128 0x5
 2156 0037 0F       		.uleb128 0xf
 2157 0038 00       		.byte	0
 2158 0039 0B       		.uleb128 0xb
 2159 003a 0B       		.uleb128 0xb
 2160 003b 49       		.uleb128 0x49
 2161 003c 13       		.uleb128 0x13
 2162 003d 00       		.byte	0
 2163 003e 00       		.byte	0
 2164 003f 06       		.uleb128 0x6
 2165 0040 16       		.uleb128 0x16
 2166 0041 00       		.byte	0
 2167 0042 03       		.uleb128 0x3
 2168 0043 0E       		.uleb128 0xe
 2169 0044 3A       		.uleb128 0x3a
 2170 0045 0B       		.uleb128 0xb
 2171 0046 3B       		.uleb128 0x3b
 2172 0047 05       		.uleb128 0x5
 2173 0048 49       		.uleb128 0x49
 2174 0049 13       		.uleb128 0x13
 2175 004a 00       		.byte	0
 2176 004b 00       		.byte	0
 2177 004c 07       		.uleb128 0x7
 2178 004d 13       		.uleb128 0x13
 2179 004e 01       		.byte	0x1
 2180 004f 03       		.uleb128 0x3
 2181 0050 0E       		.uleb128 0xe
 2182 0051 0B       		.uleb128 0xb
 2183 0052 0B       		.uleb128 0xb
 2184 0053 3A       		.uleb128 0x3a
 2185 0054 0B       		.uleb128 0xb
 2186 0055 3B       		.uleb128 0x3b
 2187 0056 0B       		.uleb128 0xb
 2188 0057 01       		.uleb128 0x1
 2189 0058 13       		.uleb128 0x13
 2190 0059 00       		.byte	0
 2191 005a 00       		.byte	0
 2192 005b 08       		.uleb128 0x8
 2193 005c 0D       		.uleb128 0xd
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 47


 2194 005d 00       		.byte	0
 2195 005e 03       		.uleb128 0x3
 2196 005f 0E       		.uleb128 0xe
 2197 0060 3A       		.uleb128 0x3a
 2198 0061 0B       		.uleb128 0xb
 2199 0062 3B       		.uleb128 0x3b
 2200 0063 0B       		.uleb128 0xb
 2201 0064 49       		.uleb128 0x49
 2202 0065 13       		.uleb128 0x13
 2203 0066 38       		.uleb128 0x38
 2204 0067 0B       		.uleb128 0xb
 2205 0068 00       		.byte	0
 2206 0069 00       		.byte	0
 2207 006a 09       		.uleb128 0x9
 2208 006b 04       		.uleb128 0x4
 2209 006c 01       		.byte	0x1
 2210 006d 03       		.uleb128 0x3
 2211 006e 0E       		.uleb128 0xe
 2212 006f 0B       		.uleb128 0xb
 2213 0070 0B       		.uleb128 0xb
 2214 0071 49       		.uleb128 0x49
 2215 0072 13       		.uleb128 0x13
 2216 0073 3A       		.uleb128 0x3a
 2217 0074 0B       		.uleb128 0xb
 2218 0075 3B       		.uleb128 0x3b
 2219 0076 0B       		.uleb128 0xb
 2220 0077 01       		.uleb128 0x1
 2221 0078 13       		.uleb128 0x13
 2222 0079 00       		.byte	0
 2223 007a 00       		.byte	0
 2224 007b 0A       		.uleb128 0xa
 2225 007c 28       		.uleb128 0x28
 2226 007d 00       		.byte	0
 2227 007e 03       		.uleb128 0x3
 2228 007f 0E       		.uleb128 0xe
 2229 0080 1C       		.uleb128 0x1c
 2230 0081 0B       		.uleb128 0xb
 2231 0082 00       		.byte	0
 2232 0083 00       		.byte	0
 2233 0084 0B       		.uleb128 0xb
 2234 0085 2E       		.uleb128 0x2e
 2235 0086 00       		.byte	0
 2236 0087 3F       		.uleb128 0x3f
 2237 0088 19       		.uleb128 0x19
 2238 0089 03       		.uleb128 0x3
 2239 008a 0E       		.uleb128 0xe
 2240 008b 3A       		.uleb128 0x3a
 2241 008c 0B       		.uleb128 0xb
 2242 008d 3B       		.uleb128 0x3b
 2243 008e 0B       		.uleb128 0xb
 2244 008f 27       		.uleb128 0x27
 2245 0090 19       		.uleb128 0x19
 2246 0091 11       		.uleb128 0x11
 2247 0092 01       		.uleb128 0x1
 2248 0093 12       		.uleb128 0x12
 2249 0094 06       		.uleb128 0x6
 2250 0095 40       		.uleb128 0x40
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 48


 2251 0096 18       		.uleb128 0x18
 2252 0097 9642     		.uleb128 0x2116
 2253 0099 19       		.uleb128 0x19
 2254 009a 00       		.byte	0
 2255 009b 00       		.byte	0
 2256 009c 0C       		.uleb128 0xc
 2257 009d 2E       		.uleb128 0x2e
 2258 009e 00       		.byte	0
 2259 009f 3F       		.uleb128 0x3f
 2260 00a0 19       		.uleb128 0x19
 2261 00a1 03       		.uleb128 0x3
 2262 00a2 0E       		.uleb128 0xe
 2263 00a3 3A       		.uleb128 0x3a
 2264 00a4 0B       		.uleb128 0xb
 2265 00a5 3B       		.uleb128 0x3b
 2266 00a6 0B       		.uleb128 0xb
 2267 00a7 49       		.uleb128 0x49
 2268 00a8 13       		.uleb128 0x13
 2269 00a9 11       		.uleb128 0x11
 2270 00aa 01       		.uleb128 0x1
 2271 00ab 12       		.uleb128 0x12
 2272 00ac 06       		.uleb128 0x6
 2273 00ad 40       		.uleb128 0x40
 2274 00ae 18       		.uleb128 0x18
 2275 00af 9642     		.uleb128 0x2116
 2276 00b1 19       		.uleb128 0x19
 2277 00b2 00       		.byte	0
 2278 00b3 00       		.byte	0
 2279 00b4 0D       		.uleb128 0xd
 2280 00b5 2E       		.uleb128 0x2e
 2281 00b6 01       		.byte	0x1
 2282 00b7 3F       		.uleb128 0x3f
 2283 00b8 19       		.uleb128 0x19
 2284 00b9 03       		.uleb128 0x3
 2285 00ba 0E       		.uleb128 0xe
 2286 00bb 3A       		.uleb128 0x3a
 2287 00bc 0B       		.uleb128 0xb
 2288 00bd 3B       		.uleb128 0x3b
 2289 00be 0B       		.uleb128 0xb
 2290 00bf 27       		.uleb128 0x27
 2291 00c0 19       		.uleb128 0x19
 2292 00c1 49       		.uleb128 0x49
 2293 00c2 13       		.uleb128 0x13
 2294 00c3 11       		.uleb128 0x11
 2295 00c4 01       		.uleb128 0x1
 2296 00c5 12       		.uleb128 0x12
 2297 00c6 06       		.uleb128 0x6
 2298 00c7 40       		.uleb128 0x40
 2299 00c8 18       		.uleb128 0x18
 2300 00c9 9642     		.uleb128 0x2116
 2301 00cb 19       		.uleb128 0x19
 2302 00cc 01       		.uleb128 0x1
 2303 00cd 13       		.uleb128 0x13
 2304 00ce 00       		.byte	0
 2305 00cf 00       		.byte	0
 2306 00d0 0E       		.uleb128 0xe
 2307 00d1 05       		.uleb128 0x5
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 49


 2308 00d2 00       		.byte	0
 2309 00d3 03       		.uleb128 0x3
 2310 00d4 0E       		.uleb128 0xe
 2311 00d5 3A       		.uleb128 0x3a
 2312 00d6 0B       		.uleb128 0xb
 2313 00d7 3B       		.uleb128 0x3b
 2314 00d8 0B       		.uleb128 0xb
 2315 00d9 49       		.uleb128 0x49
 2316 00da 13       		.uleb128 0x13
 2317 00db 02       		.uleb128 0x2
 2318 00dc 18       		.uleb128 0x18
 2319 00dd 00       		.byte	0
 2320 00de 00       		.byte	0
 2321 00df 0F       		.uleb128 0xf
 2322 00e0 34       		.uleb128 0x34
 2323 00e1 00       		.byte	0
 2324 00e2 03       		.uleb128 0x3
 2325 00e3 08       		.uleb128 0x8
 2326 00e4 3A       		.uleb128 0x3a
 2327 00e5 0B       		.uleb128 0xb
 2328 00e6 3B       		.uleb128 0x3b
 2329 00e7 0B       		.uleb128 0xb
 2330 00e8 49       		.uleb128 0x49
 2331 00e9 13       		.uleb128 0x13
 2332 00ea 02       		.uleb128 0x2
 2333 00eb 18       		.uleb128 0x18
 2334 00ec 00       		.byte	0
 2335 00ed 00       		.byte	0
 2336 00ee 10       		.uleb128 0x10
 2337 00ef 2E       		.uleb128 0x2e
 2338 00f0 00       		.byte	0
 2339 00f1 3F       		.uleb128 0x3f
 2340 00f2 19       		.uleb128 0x19
 2341 00f3 03       		.uleb128 0x3
 2342 00f4 0E       		.uleb128 0xe
 2343 00f5 3A       		.uleb128 0x3a
 2344 00f6 0B       		.uleb128 0xb
 2345 00f7 3B       		.uleb128 0x3b
 2346 00f8 0B       		.uleb128 0xb
 2347 00f9 11       		.uleb128 0x11
 2348 00fa 01       		.uleb128 0x1
 2349 00fb 12       		.uleb128 0x12
 2350 00fc 06       		.uleb128 0x6
 2351 00fd 40       		.uleb128 0x40
 2352 00fe 18       		.uleb128 0x18
 2353 00ff 9742     		.uleb128 0x2117
 2354 0101 19       		.uleb128 0x19
 2355 0102 00       		.byte	0
 2356 0103 00       		.byte	0
 2357 0104 11       		.uleb128 0x11
 2358 0105 2E       		.uleb128 0x2e
 2359 0106 01       		.byte	0x1
 2360 0107 3F       		.uleb128 0x3f
 2361 0108 19       		.uleb128 0x19
 2362 0109 03       		.uleb128 0x3
 2363 010a 0E       		.uleb128 0xe
 2364 010b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 50


 2365 010c 0B       		.uleb128 0xb
 2366 010d 3B       		.uleb128 0x3b
 2367 010e 0B       		.uleb128 0xb
 2368 010f 49       		.uleb128 0x49
 2369 0110 13       		.uleb128 0x13
 2370 0111 11       		.uleb128 0x11
 2371 0112 01       		.uleb128 0x1
 2372 0113 12       		.uleb128 0x12
 2373 0114 06       		.uleb128 0x6
 2374 0115 40       		.uleb128 0x40
 2375 0116 18       		.uleb128 0x18
 2376 0117 9742     		.uleb128 0x2117
 2377 0119 19       		.uleb128 0x19
 2378 011a 01       		.uleb128 0x1
 2379 011b 13       		.uleb128 0x13
 2380 011c 00       		.byte	0
 2381 011d 00       		.byte	0
 2382 011e 12       		.uleb128 0x12
 2383 011f 34       		.uleb128 0x34
 2384 0120 00       		.byte	0
 2385 0121 03       		.uleb128 0x3
 2386 0122 0E       		.uleb128 0xe
 2387 0123 3A       		.uleb128 0x3a
 2388 0124 0B       		.uleb128 0xb
 2389 0125 3B       		.uleb128 0x3b
 2390 0126 0B       		.uleb128 0xb
 2391 0127 49       		.uleb128 0x49
 2392 0128 13       		.uleb128 0x13
 2393 0129 02       		.uleb128 0x2
 2394 012a 18       		.uleb128 0x18
 2395 012b 00       		.byte	0
 2396 012c 00       		.byte	0
 2397 012d 13       		.uleb128 0x13
 2398 012e 2E       		.uleb128 0x2e
 2399 012f 00       		.byte	0
 2400 0130 3F       		.uleb128 0x3f
 2401 0131 19       		.uleb128 0x19
 2402 0132 03       		.uleb128 0x3
 2403 0133 0E       		.uleb128 0xe
 2404 0134 3A       		.uleb128 0x3a
 2405 0135 0B       		.uleb128 0xb
 2406 0136 3B       		.uleb128 0x3b
 2407 0137 05       		.uleb128 0x5
 2408 0138 11       		.uleb128 0x11
 2409 0139 01       		.uleb128 0x1
 2410 013a 12       		.uleb128 0x12
 2411 013b 06       		.uleb128 0x6
 2412 013c 40       		.uleb128 0x40
 2413 013d 18       		.uleb128 0x18
 2414 013e 9642     		.uleb128 0x2116
 2415 0140 19       		.uleb128 0x19
 2416 0141 00       		.byte	0
 2417 0142 00       		.byte	0
 2418 0143 14       		.uleb128 0x14
 2419 0144 2E       		.uleb128 0x2e
 2420 0145 01       		.byte	0x1
 2421 0146 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 51


 2422 0147 19       		.uleb128 0x19
 2423 0148 03       		.uleb128 0x3
 2424 0149 0E       		.uleb128 0xe
 2425 014a 3A       		.uleb128 0x3a
 2426 014b 0B       		.uleb128 0xb
 2427 014c 3B       		.uleb128 0x3b
 2428 014d 05       		.uleb128 0x5
 2429 014e 27       		.uleb128 0x27
 2430 014f 19       		.uleb128 0x19
 2431 0150 11       		.uleb128 0x11
 2432 0151 01       		.uleb128 0x1
 2433 0152 12       		.uleb128 0x12
 2434 0153 06       		.uleb128 0x6
 2435 0154 40       		.uleb128 0x40
 2436 0155 18       		.uleb128 0x18
 2437 0156 9642     		.uleb128 0x2116
 2438 0158 19       		.uleb128 0x19
 2439 0159 01       		.uleb128 0x1
 2440 015a 13       		.uleb128 0x13
 2441 015b 00       		.byte	0
 2442 015c 00       		.byte	0
 2443 015d 15       		.uleb128 0x15
 2444 015e 05       		.uleb128 0x5
 2445 015f 00       		.byte	0
 2446 0160 03       		.uleb128 0x3
 2447 0161 08       		.uleb128 0x8
 2448 0162 3A       		.uleb128 0x3a
 2449 0163 0B       		.uleb128 0xb
 2450 0164 3B       		.uleb128 0x3b
 2451 0165 05       		.uleb128 0x5
 2452 0166 49       		.uleb128 0x49
 2453 0167 13       		.uleb128 0x13
 2454 0168 02       		.uleb128 0x2
 2455 0169 18       		.uleb128 0x18
 2456 016a 00       		.byte	0
 2457 016b 00       		.byte	0
 2458 016c 16       		.uleb128 0x16
 2459 016d 2E       		.uleb128 0x2e
 2460 016e 01       		.byte	0x1
 2461 016f 3F       		.uleb128 0x3f
 2462 0170 19       		.uleb128 0x19
 2463 0171 03       		.uleb128 0x3
 2464 0172 0E       		.uleb128 0xe
 2465 0173 3A       		.uleb128 0x3a
 2466 0174 0B       		.uleb128 0xb
 2467 0175 3B       		.uleb128 0x3b
 2468 0176 05       		.uleb128 0x5
 2469 0177 11       		.uleb128 0x11
 2470 0178 01       		.uleb128 0x1
 2471 0179 12       		.uleb128 0x12
 2472 017a 06       		.uleb128 0x6
 2473 017b 40       		.uleb128 0x40
 2474 017c 18       		.uleb128 0x18
 2475 017d 9642     		.uleb128 0x2116
 2476 017f 19       		.uleb128 0x19
 2477 0180 01       		.uleb128 0x1
 2478 0181 13       		.uleb128 0x13
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 52


 2479 0182 00       		.byte	0
 2480 0183 00       		.byte	0
 2481 0184 17       		.uleb128 0x17
 2482 0185 34       		.uleb128 0x34
 2483 0186 00       		.byte	0
 2484 0187 03       		.uleb128 0x3
 2485 0188 0E       		.uleb128 0xe
 2486 0189 3A       		.uleb128 0x3a
 2487 018a 0B       		.uleb128 0xb
 2488 018b 3B       		.uleb128 0x3b
 2489 018c 05       		.uleb128 0x5
 2490 018d 49       		.uleb128 0x49
 2491 018e 13       		.uleb128 0x13
 2492 018f 02       		.uleb128 0x2
 2493 0190 18       		.uleb128 0x18
 2494 0191 00       		.byte	0
 2495 0192 00       		.byte	0
 2496 0193 18       		.uleb128 0x18
 2497 0194 34       		.uleb128 0x34
 2498 0195 00       		.byte	0
 2499 0196 03       		.uleb128 0x3
 2500 0197 08       		.uleb128 0x8
 2501 0198 3A       		.uleb128 0x3a
 2502 0199 0B       		.uleb128 0xb
 2503 019a 3B       		.uleb128 0x3b
 2504 019b 05       		.uleb128 0x5
 2505 019c 49       		.uleb128 0x49
 2506 019d 13       		.uleb128 0x13
 2507 019e 02       		.uleb128 0x2
 2508 019f 18       		.uleb128 0x18
 2509 01a0 00       		.byte	0
 2510 01a1 00       		.byte	0
 2511 01a2 19       		.uleb128 0x19
 2512 01a3 34       		.uleb128 0x34
 2513 01a4 00       		.byte	0
 2514 01a5 03       		.uleb128 0x3
 2515 01a6 0E       		.uleb128 0xe
 2516 01a7 3A       		.uleb128 0x3a
 2517 01a8 0B       		.uleb128 0xb
 2518 01a9 3B       		.uleb128 0x3b
 2519 01aa 05       		.uleb128 0x5
 2520 01ab 49       		.uleb128 0x49
 2521 01ac 13       		.uleb128 0x13
 2522 01ad 3F       		.uleb128 0x3f
 2523 01ae 19       		.uleb128 0x19
 2524 01af 3C       		.uleb128 0x3c
 2525 01b0 19       		.uleb128 0x19
 2526 01b1 00       		.byte	0
 2527 01b2 00       		.byte	0
 2528 01b3 1A       		.uleb128 0x1a
 2529 01b4 35       		.uleb128 0x35
 2530 01b5 00       		.byte	0
 2531 01b6 49       		.uleb128 0x49
 2532 01b7 13       		.uleb128 0x13
 2533 01b8 00       		.byte	0
 2534 01b9 00       		.byte	0
 2535 01ba 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 53


 2536 01bb 34       		.uleb128 0x34
 2537 01bc 00       		.byte	0
 2538 01bd 03       		.uleb128 0x3
 2539 01be 08       		.uleb128 0x8
 2540 01bf 3A       		.uleb128 0x3a
 2541 01c0 0B       		.uleb128 0xb
 2542 01c1 3B       		.uleb128 0x3b
 2543 01c2 0B       		.uleb128 0xb
 2544 01c3 49       		.uleb128 0x49
 2545 01c4 13       		.uleb128 0x13
 2546 01c5 3F       		.uleb128 0x3f
 2547 01c6 19       		.uleb128 0x19
 2548 01c7 02       		.uleb128 0x2
 2549 01c8 18       		.uleb128 0x18
 2550 01c9 00       		.byte	0
 2551 01ca 00       		.byte	0
 2552 01cb 1C       		.uleb128 0x1c
 2553 01cc 34       		.uleb128 0x34
 2554 01cd 00       		.byte	0
 2555 01ce 03       		.uleb128 0x3
 2556 01cf 0E       		.uleb128 0xe
 2557 01d0 3A       		.uleb128 0x3a
 2558 01d1 0B       		.uleb128 0xb
 2559 01d2 3B       		.uleb128 0x3b
 2560 01d3 0B       		.uleb128 0xb
 2561 01d4 49       		.uleb128 0x49
 2562 01d5 13       		.uleb128 0x13
 2563 01d6 3F       		.uleb128 0x3f
 2564 01d7 19       		.uleb128 0x19
 2565 01d8 02       		.uleb128 0x2
 2566 01d9 18       		.uleb128 0x18
 2567 01da 00       		.byte	0
 2568 01db 00       		.byte	0
 2569 01dc 1D       		.uleb128 0x1d
 2570 01dd 01       		.uleb128 0x1
 2571 01de 01       		.byte	0x1
 2572 01df 49       		.uleb128 0x49
 2573 01e0 13       		.uleb128 0x13
 2574 01e1 01       		.uleb128 0x1
 2575 01e2 13       		.uleb128 0x13
 2576 01e3 00       		.byte	0
 2577 01e4 00       		.byte	0
 2578 01e5 1E       		.uleb128 0x1e
 2579 01e6 21       		.uleb128 0x21
 2580 01e7 00       		.byte	0
 2581 01e8 49       		.uleb128 0x49
 2582 01e9 13       		.uleb128 0x13
 2583 01ea 2F       		.uleb128 0x2f
 2584 01eb 0B       		.uleb128 0xb
 2585 01ec 00       		.byte	0
 2586 01ed 00       		.byte	0
 2587 01ee 00       		.byte	0
 2588              		.section	.debug_aranges,"",%progbits
 2589 0000 94000000 		.4byte	0x94
 2590 0004 0200     		.2byte	0x2
 2591 0006 00000000 		.4byte	.Ldebug_info0
 2592 000a 04       		.byte	0x4
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 54


 2593 000b 00       		.byte	0
 2594 000c 0000     		.2byte	0
 2595 000e 0000     		.2byte	0
 2596 0010 00000000 		.4byte	.LFB64
 2597 0014 C8000000 		.4byte	.LFE64-.LFB64
 2598 0018 00000000 		.4byte	.LFB65
 2599 001c 18000000 		.4byte	.LFE65-.LFB65
 2600 0020 00000000 		.4byte	.LFB66
 2601 0024 18000000 		.4byte	.LFE66-.LFB66
 2602 0028 00000000 		.4byte	.LFB67
 2603 002c 18000000 		.4byte	.LFE67-.LFB67
 2604 0030 00000000 		.4byte	.LFB68
 2605 0034 18000000 		.4byte	.LFE68-.LFB68
 2606 0038 00000000 		.4byte	.LFB69
 2607 003c 18000000 		.4byte	.LFE69-.LFB69
 2608 0040 00000000 		.4byte	.LFB70
 2609 0044 18000000 		.4byte	.LFE70-.LFB70
 2610 0048 00000000 		.4byte	.LFB71
 2611 004c 1A000000 		.4byte	.LFE71-.LFB71
 2612 0050 00000000 		.4byte	.LFB72
 2613 0054 E0000000 		.4byte	.LFE72-.LFB72
 2614 0058 00000000 		.4byte	.LFB73
 2615 005c 6C000000 		.4byte	.LFE73-.LFB73
 2616 0060 00000000 		.4byte	.LFB74
 2617 0064 48000000 		.4byte	.LFE74-.LFB74
 2618 0068 00000000 		.4byte	.LFB75
 2619 006c F0000000 		.4byte	.LFE75-.LFB75
 2620 0070 00000000 		.4byte	.LFB76
 2621 0074 68000000 		.4byte	.LFE76-.LFB76
 2622 0078 00000000 		.4byte	.LFB77
 2623 007c 3E000000 		.4byte	.LFE77-.LFB77
 2624 0080 00000000 		.4byte	.LFB78
 2625 0084 26000000 		.4byte	.LFE78-.LFB78
 2626 0088 00000000 		.4byte	.LFB79
 2627 008c C8000000 		.4byte	.LFE79-.LFB79
 2628 0090 00000000 		.4byte	0
 2629 0094 00000000 		.4byte	0
 2630              		.section	.debug_ranges,"",%progbits
 2631              	.Ldebug_ranges0:
 2632 0000 00000000 		.4byte	.LFB64
 2633 0004 C8000000 		.4byte	.LFE64
 2634 0008 00000000 		.4byte	.LFB65
 2635 000c 18000000 		.4byte	.LFE65
 2636 0010 00000000 		.4byte	.LFB66
 2637 0014 18000000 		.4byte	.LFE66
 2638 0018 00000000 		.4byte	.LFB67
 2639 001c 18000000 		.4byte	.LFE67
 2640 0020 00000000 		.4byte	.LFB68
 2641 0024 18000000 		.4byte	.LFE68
 2642 0028 00000000 		.4byte	.LFB69
 2643 002c 18000000 		.4byte	.LFE69
 2644 0030 00000000 		.4byte	.LFB70
 2645 0034 18000000 		.4byte	.LFE70
 2646 0038 00000000 		.4byte	.LFB71
 2647 003c 1A000000 		.4byte	.LFE71
 2648 0040 00000000 		.4byte	.LFB72
 2649 0044 E0000000 		.4byte	.LFE72
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 55


 2650 0048 00000000 		.4byte	.LFB73
 2651 004c 6C000000 		.4byte	.LFE73
 2652 0050 00000000 		.4byte	.LFB74
 2653 0054 48000000 		.4byte	.LFE74
 2654 0058 00000000 		.4byte	.LFB75
 2655 005c F0000000 		.4byte	.LFE75
 2656 0060 00000000 		.4byte	.LFB76
 2657 0064 68000000 		.4byte	.LFE76
 2658 0068 00000000 		.4byte	.LFB77
 2659 006c 3E000000 		.4byte	.LFE77
 2660 0070 00000000 		.4byte	.LFB78
 2661 0074 26000000 		.4byte	.LFE78
 2662 0078 00000000 		.4byte	.LFB79
 2663 007c C8000000 		.4byte	.LFE79
 2664 0080 00000000 		.4byte	0
 2665 0084 00000000 		.4byte	0
 2666              		.section	.debug_line,"",%progbits
 2667              	.Ldebug_line0:
 2668 0000 61030000 		.section	.debug_str,"MS",%progbits,1
 2668      02005601 
 2668      00000201 
 2668      FB0E0D00 
 2668      01010101 
 2669              	.LASF51:
 2670 0000 53365F44 		.ascii	"S6_DETECTED\000"
 2670      45544543 
 2670      54454400 
 2671              	.LASF60:
 2672 000c 75736250 		.ascii	"usbPutChar\000"
 2672      75744368 
 2672      617200
 2673              	.LASF40:
 2674 0017 5475726E 		.ascii	"TurnLeft\000"
 2674      4C656674 
 2674      00
 2675              	.LASF64:
 2676 0020 74735F65 		.ascii	"ts_enc\000"
 2676      6E6300
 2677              	.LASF20:
 2678 0027 646F7562 		.ascii	"double\000"
 2678      6C6500
 2679              	.LASF73:
 2680 002e 666C6167 		.ascii	"flag_packet\000"
 2680      5F706163 
 2680      6B657400 
 2681              	.LASF70:
 2682 003a 666C6167 		.ascii	"flag_ts_speed\000"
 2682      5F74735F 
 2682      73706565 
 2682      6400
 2683              	.LASF34:
 2684 0048 67325F78 		.ascii	"g2_xpos\000"
 2684      706F7300 
 2685              	.LASF2:
 2686 0050 73686F72 		.ascii	"short int\000"
 2686      7420696E 
 2686      7400
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 56


 2687              	.LASF81:
 2688 005a 73797374 		.ascii	"system_state\000"
 2688      656D5F73 
 2688      74617465 
 2688      00
 2689              	.LASF10:
 2690 0067 73697A65 		.ascii	"sizetype\000"
 2690      74797065 
 2690      00
 2691              	.LASF94:
 2692 0070 44697265 		.ascii	"DirectionState\000"
 2692      6374696F 
 2692      6E537461 
 2692      746500
 2693              	.LASF80:
 2694 007f 75736242 		.ascii	"usbBuffer\000"
 2694      75666665 
 2694      7200
 2695              	.LASF90:
 2696 0089 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2696      43313120 
 2696      352E342E 
 2696      31203230 
 2696      31363036 
 2697 00bc 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2697      20726576 
 2697      6973696F 
 2697      6E203233 
 2697      37373135 
 2698 00ef 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2698      66756E63 
 2698      74696F6E 
 2698      2D736563 
 2698      74696F6E 
 2699              	.LASF53:
 2700 0117 6D61696E 		.ascii	"main\000"
 2700      00
 2701              	.LASF49:
 2702 011c 53345F44 		.ascii	"S4_DETECTED\000"
 2702      45544543 
 2702      54454400 
 2703              	.LASF41:
 2704 0128 41646A75 		.ascii	"AdjustToTheLeft\000"
 2704      7374546F 
 2704      5468654C 
 2704      65667400 
 2705              	.LASF15:
 2706 0138 75696E74 		.ascii	"uint16\000"
 2706      313600
 2707              	.LASF22:
 2708 013f 696E6465 		.ascii	"index\000"
 2708      7800
 2709              	.LASF45:
 2710 0145 73706565 		.ascii	"speedTimer\000"
 2710      6454696D 
 2710      657200
 2711              	.LASF18:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 57


 2712 0150 696E7431 		.ascii	"int16\000"
 2712      3600
 2713              	.LASF14:
 2714 0156 75696E74 		.ascii	"uint8\000"
 2714      3800
 2715              	.LASF33:
 2716 015c 67315F64 		.ascii	"g1_direction\000"
 2716      69726563 
 2716      74696F6E 
 2716      00
 2717              	.LASF78:
 2718 0169 6C696E65 		.ascii	"line\000"
 2718      00
 2719              	.LASF19:
 2720 016e 666C6F61 		.ascii	"float\000"
 2720      7400
 2721              	.LASF6:
 2722 0174 6C6F6E67 		.ascii	"long long int\000"
 2722      206C6F6E 
 2722      6720696E 
 2722      7400
 2723              	.LASF58:
 2724 0182 75736250 		.ascii	"usbPutString\000"
 2724      75745374 
 2724      72696E67 
 2724      00
 2725              	.LASF17:
 2726 018f 696E7438 		.ascii	"int8\000"
 2726      00
 2727              	.LASF69:
 2728 0194 666C6167 		.ascii	"flag_ts_update\000"
 2728      5F74735F 
 2728      75706461 
 2728      746500
 2729              	.LASF35:
 2730 01a3 67325F79 		.ascii	"g2_ypos\000"
 2730      706F7300 
 2731              	.LASF29:
 2732 01ab 67305F64 		.ascii	"g0_direction\000"
 2732      69726563 
 2732      74696F6E 
 2732      00
 2733              	.LASF26:
 2734 01b8 67305F78 		.ascii	"g0_xpos\000"
 2734      706F7300 
 2735              	.LASF4:
 2736 01c0 6C6F6E67 		.ascii	"long int\000"
 2736      20696E74 
 2736      00
 2737              	.LASF57:
 2738 01c9 43686563 		.ascii	"CheckSensorDirection\000"
 2738      6B53656E 
 2738      736F7244 
 2738      69726563 
 2738      74696F6E 
 2739              	.LASF47:
 2740 01de 53325F44 		.ascii	"S2_DETECTED\000"
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 58


 2740      45544543 
 2740      54454400 
 2741              	.LASF82:
 2742 01ea 63757272 		.ascii	"currentDirection\000"
 2742      656E7444 
 2742      69726563 
 2742      74696F6E 
 2742      00
 2743              	.LASF71:
 2744 01fb 666C6167 		.ascii	"flag_ts_display\000"
 2744      5F74735F 
 2744      64697370 
 2744      6C617900 
 2745              	.LASF72:
 2746 020b 666C6167 		.ascii	"flag_rx\000"
 2746      5F727800 
 2747              	.LASF1:
 2748 0213 756E7369 		.ascii	"unsigned char\000"
 2748      676E6564 
 2748      20636861 
 2748      7200
 2749              	.LASF84:
 2750 0221 746F7461 		.ascii	"totalMilliseconds\000"
 2750      6C4D696C 
 2750      6C697365 
 2750      636F6E64 
 2750      7300
 2751              	.LASF79:
 2752 0233 656E7472 		.ascii	"entry\000"
 2752      7900
 2753              	.LASF9:
 2754 0239 6C6F6E67 		.ascii	"long double\000"
 2754      20646F75 
 2754      626C6500 
 2755              	.LASF83:
 2756 0245 70726576 		.ascii	"previousDirection\000"
 2756      696F7573 
 2756      44697265 
 2756      6374696F 
 2756      6E00
 2757              	.LASF85:
 2758 0257 746F7461 		.ascii	"totalDistance\000"
 2758      6C446973 
 2758      74616E63 
 2758      6500
 2759              	.LASF89:
 2760 0265 6B656570 		.ascii	"keepLedOn\000"
 2760      4C65644F 
 2760      6E00
 2761              	.LASF28:
 2762 026f 67305F73 		.ascii	"g0_speed\000"
 2762      70656564 
 2762      00
 2763              	.LASF75:
 2764 0278 64617461 		.ascii	"dataready_flag\000"
 2764      72656164 
 2764      795F666C 
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 59


 2764      616700
 2765              	.LASF30:
 2766 0287 67315F78 		.ascii	"g1_xpos\000"
 2766      706F7300 
 2767              	.LASF0:
 2768 028f 7369676E 		.ascii	"signed char\000"
 2768      65642063 
 2768      68617200 
 2769              	.LASF13:
 2770 029b 696E7433 		.ascii	"int32_t\000"
 2770      325F7400 
 2771              	.LASF7:
 2772 02a3 6C6F6E67 		.ascii	"long long unsigned int\000"
 2772      206C6F6E 
 2772      6720756E 
 2772      7369676E 
 2772      65642069 
 2773              	.LASF42:
 2774 02ba 41646A75 		.ascii	"AdjustToTheRight\000"
 2774      7374546F 
 2774      54686552 
 2774      69676874 
 2774      00
 2775              	.LASF8:
 2776 02cb 756E7369 		.ascii	"unsigned int\000"
 2776      676E6564 
 2776      20696E74 
 2776      00
 2777              	.LASF88:
 2778 02d8 74696D65 		.ascii	"timerInt\000"
 2778      72496E74 
 2778      00
 2779              	.LASF74:
 2780 02e1 666C6167 		.ascii	"flag_KB_string\000"
 2780      5F4B425F 
 2780      73747269 
 2780      6E6700
 2781              	.LASF62:
 2782 02f0 75736242 		.ascii	"usbBufCount\000"
 2782      7566436F 
 2782      756E7400 
 2783              	.LASF56:
 2784 02fc 53657452 		.ascii	"SetRobotMovement\000"
 2784      6F626F74 
 2784      4D6F7665 
 2784      6D656E74 
 2784      00
 2785              	.LASF52:
 2786 030d 54494D45 		.ascii	"TIMER_FINISH\000"
 2786      525F4649 
 2786      4E495348 
 2786      00
 2787              	.LASF36:
 2788 031a 67325F73 		.ascii	"g2_speed\000"
 2788      70656564 
 2788      00
 2789              	.LASF50:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 60


 2790 0323 53355F44 		.ascii	"S5_DETECTED\000"
 2790      45544543 
 2790      54454400 
 2791              	.LASF3:
 2792 032f 73686F72 		.ascii	"short unsigned int\000"
 2792      7420756E 
 2792      7369676E 
 2792      65642069 
 2792      6E7400
 2793              	.LASF93:
 2794 0342 64617461 		.ascii	"data_main\000"
 2794      5F6D6169 
 2794      6E00
 2795              	.LASF55:
 2796 034c 52657365 		.ascii	"ResetSensorFlags\000"
 2796      7453656E 
 2796      736F7246 
 2796      6C616773 
 2796      00
 2797              	.LASF11:
 2798 035d 63686172 		.ascii	"char\000"
 2798      00
 2799              	.LASF38:
 2800 0362 466F7277 		.ascii	"Forward\000"
 2800      61726400 
 2801              	.LASF87:
 2802 036a 71756164 		.ascii	"quadDec2Count\000"
 2802      44656332 
 2802      436F756E 
 2802      7400
 2803              	.LASF31:
 2804 0378 67315F79 		.ascii	"g1_ypos\000"
 2804      706F7300 
 2805              	.LASF37:
 2806 0380 67325F64 		.ascii	"g2_direction\000"
 2806      69726563 
 2806      74696F6E 
 2806      00
 2807              	.LASF32:
 2808 038d 67315F73 		.ascii	"g1_speed\000"
 2808      70656564 
 2808      00
 2809              	.LASF77:
 2810 0396 64697370 		.ascii	"displaystring\000"
 2810      6C617973 
 2810      7472696E 
 2810      6700
 2811              	.LASF23:
 2812 03a4 726F626F 		.ascii	"robot_xpos\000"
 2812      745F7870 
 2812      6F7300
 2813              	.LASF39:
 2814 03af 5475726E 		.ascii	"TurnRight\000"
 2814      52696768 
 2814      7400
 2815              	.LASF86:
 2816 03b9 62756666 		.ascii	"buffer\000"
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 61


 2816      657200
 2817              	.LASF16:
 2818 03c0 75696E74 		.ascii	"uint32\000"
 2818      333200
 2819              	.LASF91:
 2820 03c7 6D61696E 		.ascii	"main.c\000"
 2820      2E6300
 2821              	.LASF5:
 2822 03ce 6C6F6E67 		.ascii	"long unsigned int\000"
 2822      20756E73 
 2822      69676E65 
 2822      6420696E 
 2822      7400
 2823              	.LASF61:
 2824 03e0 75736253 		.ascii	"usbStarted\000"
 2824      74617274 
 2824      656400
 2825              	.LASF44:
 2826 03eb 556E6B6E 		.ascii	"Unknown\000"
 2826      6F776E00 
 2827              	.LASF48:
 2828 03f3 53335F44 		.ascii	"S3_DETECTED\000"
 2828      45544543 
 2828      54454400 
 2829              	.LASF66:
 2830 03ff 74735F73 		.ascii	"ts_speed\000"
 2830      70656564 
 2830      00
 2831              	.LASF59:
 2832 0408 636F756E 		.ascii	"count\000"
 2832      7400
 2833              	.LASF68:
 2834 040e 666C6167 		.ascii	"flag_ts_enc\000"
 2834      5F74735F 
 2834      656E6300 
 2835              	.LASF12:
 2836 041a 5F5F696E 		.ascii	"__int32_t\000"
 2836      7433325F 
 2836      7400
 2837              	.LASF43:
 2838 0424 53746F70 		.ascii	"Stop\000"
 2838      00
 2839              	.LASF27:
 2840 0429 67305F79 		.ascii	"g0_ypos\000"
 2840      706F7300 
 2841              	.LASF67:
 2842 0431 74735F64 		.ascii	"ts_display\000"
 2842      6973706C 
 2842      617900
 2843              	.LASF65:
 2844 043c 74735F75 		.ascii	"ts_update\000"
 2844      70646174 
 2844      6500
 2845              	.LASF96:
 2846 0446 68616E64 		.ascii	"handle_usb\000"
 2846      6C655F75 
 2846      736200
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccyAnvJd.s 			page 62


 2847              	.LASF95:
 2848 0451 71756164 		.ascii	"quadCountToRPM\000"
 2848      436F756E 
 2848      74546F52 
 2848      504D00
 2849              	.LASF76:
 2850 0460 666C6167 		.ascii	"flag_rf_transmission_active\000"
 2850      5F72665F 
 2850      7472616E 
 2850      736D6973 
 2850      73696F6E 
 2851              	.LASF24:
 2852 047c 726F626F 		.ascii	"robot_ypos\000"
 2852      745F7970 
 2852      6F7300
 2853              	.LASF63:
 2854 0487 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2854      52784275 
 2854      66666572 
 2854      00
 2855              	.LASF92:
 2856 0494 433A5C50 		.ascii	"C:\\Projects\\University\\301-Robot\\psoc student p"
 2856      726F6A65 
 2856      6374735C 
 2856      556E6976 
 2856      65727369 
 2857 04c3 61636B5C 		.ascii	"ack\\psoc_code_base\\CS301_Class.cydsn\000"
 2857      70736F63 
 2857      5F636F64 
 2857      655F6261 
 2857      73655C43 
 2858              	.LASF54:
 2859 04e8 64697265 		.ascii	"directionState\000"
 2859      6374696F 
 2859      6E537461 
 2859      746500
 2860              	.LASF21:
 2861 04f7 72737369 		.ascii	"rssi\000"
 2861      00
 2862              	.LASF25:
 2863 04fc 726F626F 		.ascii	"robot_orientation\000"
 2863      745F6F72 
 2863      69656E74 
 2863      6174696F 
 2863      6E00
 2864              	.LASF46:
 2865 050e 53315F44 		.ascii	"S1_DETECTED\000"
 2865      45544543 
 2865      54454400 
 2866              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
