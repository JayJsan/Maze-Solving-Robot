ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.global	currentDirection
 107              		.align	2
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 3


 108              		.type	currentDirection, %object
 109              		.size	currentDirection, 4
 110              	currentDirection:
 111 0044 05000000 		.word	5
 112              		.global	previousDirection
 113              		.align	2
 114              		.type	previousDirection, %object
 115              		.size	previousDirection, 4
 116              	previousDirection:
 117 0048 06000000 		.word	6
 118              		.global	s1
 119              		.bss
 120              		.type	s1, %object
 121              		.size	s1, 1
 122              	s1:
 123 0012 00       		.space	1
 124              		.global	s2
 125              		.type	s2, %object
 126              		.size	s2, 1
 127              	s2:
 128 0013 00       		.space	1
 129              		.global	s3
 130              		.type	s3, %object
 131              		.size	s3, 1
 132              	s3:
 133 0014 00       		.space	1
 134              		.global	s4
 135              		.type	s4, %object
 136              		.size	s4, 1
 137              	s4:
 138 0015 00       		.space	1
 139              		.global	s5
 140              		.type	s5, %object
 141              		.size	s5, 1
 142              	s5:
 143 0016 00       		.space	1
 144              		.global	s6
 145              		.type	s6, %object
 146              		.size	s6, 1
 147              	s6:
 148 0017 00       		.space	1
 149              		.global	totalMilliseconds
 150              		.align	2
 151              		.type	totalMilliseconds, %object
 152              		.size	totalMilliseconds, 4
 153              	totalMilliseconds:
 154 0018 00000000 		.space	4
 155              		.global	totalDistance
 156              		.align	2
 157              		.type	totalDistance, %object
 158              		.size	totalDistance, 4
 159              	totalDistance:
 160 001c 00000000 		.space	4
 161              		.comm	buffer,69,4
 162              		.global	quadDec2Count
 163              		.align	2
 164              		.type	quadDec2Count, %object
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 4


 165              		.size	quadDec2Count, 4
 166              	quadDec2Count:
 167 0020 00000000 		.space	4
 168              		.global	timerInt
 169              		.align	2
 170              		.type	timerInt, %object
 171              		.size	timerInt, 4
 172              	timerInt:
 173 0024 00000000 		.space	4
 174              		.global	keepLedOn
 175              		.align	2
 176              		.type	keepLedOn, %object
 177              		.size	keepLedOn, 4
 178              	keepLedOn:
 179 0028 00000000 		.space	4
 180              		.global	__aeabi_i2d
 181              		.global	__aeabi_ddiv
 182              		.global	__aeabi_dmul
 183              		.global	__aeabi_d2uiz
 184              		.section	.text.speedTimer,"ax",%progbits
 185              		.align	2
 186              		.global	speedTimer
 187              		.thumb
 188              		.thumb_func
 189              		.type	speedTimer, %function
 190              	speedTimer:
 191              	.LFB64:
 192              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <string.h>
  19:main.c        **** #include <stdlib.h>
  20:main.c        **** #include <project.h>
  21:main.c        **** //* ========================================
  22:main.c        **** #include "defines.h"
  23:main.c        **** #include "vars.h"
  24:main.c        **** //#include "pathfinding.h"
  25:main.c        **** #include "initialise.h"
  26:main.c        **** #include "movement.h"
  27:main.c        **** #include "usbUART.h"
  28:main.c        **** //* ========================================
  29:main.c        **** // USBUART
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 5


  30:main.c        **** void usbPutString(char *s);
  31:main.c        **** void usbPutChar(char c);
  32:main.c        **** void handle_usb();
  33:main.c        **** //* ========================================
  34:main.c        **** int16 quadCountToRPM(uint16 count);
  35:main.c        **** //* ========================================
  36:main.c        **** // Sensors, Course correction and Movement Direction.
  37:main.c        **** void ResetSensorFlags();
  38:main.c        **** void SetRobotMovement();
  39:main.c        **** enum DirectionState CheckSensorDirection();
  40:main.c        **** enum DirectionState {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown
  41:main.c        **** enum DirectionState currentDirection = Stop;
  42:main.c        **** enum DirectionState previousDirection = Unknown;
  43:main.c        **** // --- YIPPE
  44:main.c        **** // ----------------------------------------
  45:main.c        **** uint8 s1 = 0; // black = 0, white = 1
  46:main.c        **** uint8 s2 = 0;
  47:main.c        **** uint8 s3 = 0;
  48:main.c        **** uint8 s4 = 0;
  49:main.c        **** uint8 s5 = 0;
  50:main.c        **** uint8 s6 = 0;
  51:main.c        **** //* ========================================
  52:main.c        **** // Calculating Distance
  53:main.c        **** #define WHEEL_DIAMETER_MM 65
  54:main.c        **** uint32 totalMilliseconds = 0;
  55:main.c        **** uint32 totalDistance = 0; // in mm
  56:main.c        **** //* ========================================
  57:main.c        **** char buffer[69];
  58:main.c        **** int quadDec2Count = 0;
  59:main.c        **** int timerInt = 0;
  60:main.c        **** int keepLedOn = 0;
  61:main.c        **** 
  62:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  63:main.c        **** 
  64:main.c        **** CY_ISR (speedTimer) {
 193              		.loc 1 64 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 8
 196              		@ frame_needed = 1, uses_anonymous_args = 0
 197 0000 90B5     		push	{r4, r7, lr}
 198              		.cfi_def_cfa_offset 12
 199              		.cfi_offset 4, -12
 200              		.cfi_offset 7, -8
 201              		.cfi_offset 14, -4
 202 0002 83B0     		sub	sp, sp, #12
 203              		.cfi_def_cfa_offset 24
 204 0004 00AF     		add	r7, sp, #0
 205              		.cfi_def_cfa_register 7
  65:main.c        ****     timerInt = 1;
 206              		.loc 1 65 0
 207 0006 2C4B     		ldr	r3, .L3+8
 208 0008 0122     		movs	r2, #1
 209 000a 1A60     		str	r2, [r3]
  66:main.c        ****     //quadDec_M1 used for turning macros
  67:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 210              		.loc 1 67 0
 211 000c FFF7FEFF 		bl	QuadDec_M2_GetCounter
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 6


 212 0010 0346     		mov	r3, r0
 213 0012 1A46     		mov	r2, r3
 214 0014 294B     		ldr	r3, .L3+12
 215 0016 1A60     		str	r2, [r3]
  68:main.c        ****     
  69:main.c        ****     if (currentDirection == Forward && quadDec2Count != 0) {
 216              		.loc 1 69 0
 217 0018 294B     		ldr	r3, .L3+16
 218 001a 1B68     		ldr	r3, [r3]
 219 001c 002B     		cmp	r3, #0
 220 001e 39D1     		bne	.L2
 221              		.loc 1 69 0 is_stmt 0 discriminator 1
 222 0020 264B     		ldr	r3, .L3+12
 223 0022 1B68     		ldr	r3, [r3]
 224 0024 002B     		cmp	r3, #0
 225 0026 35D0     		beq	.L2
 226              	.LBB2:
  70:main.c        ****         uint32 newDistance = ((abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM)/4;
 227              		.loc 1 70 0 is_stmt 1
 228 0028 244B     		ldr	r3, .L3+12
 229 002a 1B68     		ldr	r3, [r3]
 230 002c 002B     		cmp	r3, #0
 231 002e B8BF     		it	lt
 232 0030 5B42     		rsblt	r3, r3, #0
 233 0032 1846     		mov	r0, r3
 234 0034 FFF7FEFF 		bl	__aeabi_i2d
 235 0038 4FF00002 		mov	r2, #0
 236 003c 214B     		ldr	r3, .L3+20
 237 003e FFF7FEFF 		bl	__aeabi_ddiv
 238 0042 0346     		mov	r3, r0
 239 0044 0C46     		mov	r4, r1
 240 0046 1846     		mov	r0, r3
 241 0048 2146     		mov	r1, r4
 242 004a 19A3     		adr	r3, .L3
 243 004c D3E90023 		ldrd	r2, [r3]
 244 0050 FFF7FEFF 		bl	__aeabi_dmul
 245 0054 0346     		mov	r3, r0
 246 0056 0C46     		mov	r4, r1
 247 0058 1846     		mov	r0, r3
 248 005a 2146     		mov	r1, r4
 249 005c 4FF00002 		mov	r2, #0
 250 0060 194B     		ldr	r3, .L3+24
 251 0062 FFF7FEFF 		bl	__aeabi_dmul
 252 0066 0346     		mov	r3, r0
 253 0068 0C46     		mov	r4, r1
 254 006a 1846     		mov	r0, r3
 255 006c 2146     		mov	r1, r4
 256 006e 4FF00002 		mov	r2, #0
 257 0072 164B     		ldr	r3, .L3+28
 258 0074 FFF7FEFF 		bl	__aeabi_ddiv
 259 0078 0346     		mov	r3, r0
 260 007a 0C46     		mov	r4, r1
 261 007c 1846     		mov	r0, r3
 262 007e 2146     		mov	r1, r4
 263 0080 FFF7FEFF 		bl	__aeabi_d2uiz
 264 0084 0346     		mov	r3, r0
 265 0086 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 7


  71:main.c        ****         
  72:main.c        ****         totalDistance = totalDistance + newDistance;
 266              		.loc 1 72 0
 267 0088 114B     		ldr	r3, .L3+32
 268 008a 1A68     		ldr	r2, [r3]
 269 008c 7B68     		ldr	r3, [r7, #4]
 270 008e 1344     		add	r3, r3, r2
 271 0090 0F4A     		ldr	r2, .L3+32
 272 0092 1360     		str	r3, [r2]
 273              	.L2:
 274              	.LBE2:
  73:main.c        ****     }
  74:main.c        ****     
  75:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 275              		.loc 1 75 0
 276 0094 0020     		movs	r0, #0
 277 0096 FFF7FEFF 		bl	QuadDec_M2_SetCounter
  76:main.c        ****     QuadDec_M2_Start(); // restart counter
 278              		.loc 1 76 0
 279 009a FFF7FEFF 		bl	QuadDec_M2_Start
  77:main.c        ****     
  78:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 280              		.loc 1 78 0
 281 009e FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
  79:main.c        **** }
 282              		.loc 1 79 0
 283 00a2 00BF     		nop
 284 00a4 0C37     		adds	r7, r7, #12
 285              		.cfi_def_cfa_offset 12
 286 00a6 BD46     		mov	sp, r7
 287              		.cfi_def_cfa_register 13
 288              		@ sp needed
 289 00a8 90BD     		pop	{r4, r7, pc}
 290              	.L4:
 291 00aa 00BFAFF3 		.align	3
 291      0080
 292              	.L3:
 293 00b0 182D4454 		.word	1413754136
 294 00b4 FB210940 		.word	1074340347
 295 00b8 00000000 		.word	timerInt
 296 00bc 00000000 		.word	quadDec2Count
 297 00c0 00000000 		.word	currentDirection
 298 00c4 00804C40 		.word	1078755328
 299 00c8 00405040 		.word	1079001088
 300 00cc 00001040 		.word	1074790400
 301 00d0 00000000 		.word	totalDistance
 302              		.cfi_endproc
 303              	.LFE64:
 304              		.size	speedTimer, .-speedTimer
 305              		.section	.text.S1_DETECTED,"ax",%progbits
 306              		.align	2
 307              		.global	S1_DETECTED
 308              		.thumb
 309              		.thumb_func
 310              		.type	S1_DETECTED, %function
 311              	S1_DETECTED:
 312              	.LFB65:
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 8


  80:main.c        **** 
  81:main.c        **** CY_ISR(S1_DETECTED) {
 313              		.loc 1 81 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 1, uses_anonymous_args = 0
 317              		@ link register save eliminated.
 318 0000 80B4     		push	{r7}
 319              		.cfi_def_cfa_offset 4
 320              		.cfi_offset 7, -4
 321 0002 00AF     		add	r7, sp, #0
 322              		.cfi_def_cfa_register 7
  82:main.c        ****     // Sensor has detected WHITE
  83:main.c        ****     s1 = 1; // , Black = 0, White = 1
 323              		.loc 1 83 0
 324 0004 034B     		ldr	r3, .L6
 325 0006 0122     		movs	r2, #1
 326 0008 1A70     		strb	r2, [r3]
  84:main.c        ****     //LED_Write(1u);
  85:main.c        ****     //moveForward();
  86:main.c        **** }
 327              		.loc 1 86 0
 328 000a 00BF     		nop
 329 000c BD46     		mov	sp, r7
 330              		.cfi_def_cfa_register 13
 331              		@ sp needed
 332 000e 80BC     		pop	{r7}
 333              		.cfi_restore 7
 334              		.cfi_def_cfa_offset 0
 335 0010 7047     		bx	lr
 336              	.L7:
 337 0012 00BF     		.align	2
 338              	.L6:
 339 0014 00000000 		.word	s1
 340              		.cfi_endproc
 341              	.LFE65:
 342              		.size	S1_DETECTED, .-S1_DETECTED
 343              		.section	.text.S2_DETECTED,"ax",%progbits
 344              		.align	2
 345              		.global	S2_DETECTED
 346              		.thumb
 347              		.thumb_func
 348              		.type	S2_DETECTED, %function
 349              	S2_DETECTED:
 350              	.LFB66:
  87:main.c        **** 
  88:main.c        **** CY_ISR(S2_DETECTED) {
 351              		.loc 1 88 0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 1, uses_anonymous_args = 0
 355              		@ link register save eliminated.
 356 0000 80B4     		push	{r7}
 357              		.cfi_def_cfa_offset 4
 358              		.cfi_offset 7, -4
 359 0002 00AF     		add	r7, sp, #0
 360              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 9


  89:main.c        ****     // Sensor has detected WHITE
  90:main.c        ****     s2 = 1; // , Black = 0, White = 1
 361              		.loc 1 90 0
 362 0004 034B     		ldr	r3, .L9
 363 0006 0122     		movs	r2, #1
 364 0008 1A70     		strb	r2, [r3]
  91:main.c        ****     //LED_Write(1u);
  92:main.c        ****     //moveForward();
  93:main.c        **** }
 365              		.loc 1 93 0
 366 000a 00BF     		nop
 367 000c BD46     		mov	sp, r7
 368              		.cfi_def_cfa_register 13
 369              		@ sp needed
 370 000e 80BC     		pop	{r7}
 371              		.cfi_restore 7
 372              		.cfi_def_cfa_offset 0
 373 0010 7047     		bx	lr
 374              	.L10:
 375 0012 00BF     		.align	2
 376              	.L9:
 377 0014 00000000 		.word	s2
 378              		.cfi_endproc
 379              	.LFE66:
 380              		.size	S2_DETECTED, .-S2_DETECTED
 381              		.section	.text.S3_DETECTED,"ax",%progbits
 382              		.align	2
 383              		.global	S3_DETECTED
 384              		.thumb
 385              		.thumb_func
 386              		.type	S3_DETECTED, %function
 387              	S3_DETECTED:
 388              	.LFB67:
  94:main.c        **** 
  95:main.c        **** CY_ISR(S3_DETECTED) {
 389              		.loc 1 95 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 1, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 394 0000 80B4     		push	{r7}
 395              		.cfi_def_cfa_offset 4
 396              		.cfi_offset 7, -4
 397 0002 00AF     		add	r7, sp, #0
 398              		.cfi_def_cfa_register 7
  96:main.c        ****     // Sensor has detected WHITE
  97:main.c        ****     s3 = 1; // , Black = 0, White = 1
 399              		.loc 1 97 0
 400 0004 034B     		ldr	r3, .L12
 401 0006 0122     		movs	r2, #1
 402 0008 1A70     		strb	r2, [r3]
  98:main.c        ****     //LED_Write(1u);
  99:main.c        **** }
 403              		.loc 1 99 0
 404 000a 00BF     		nop
 405 000c BD46     		mov	sp, r7
 406              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 10


 407              		@ sp needed
 408 000e 80BC     		pop	{r7}
 409              		.cfi_restore 7
 410              		.cfi_def_cfa_offset 0
 411 0010 7047     		bx	lr
 412              	.L13:
 413 0012 00BF     		.align	2
 414              	.L12:
 415 0014 00000000 		.word	s3
 416              		.cfi_endproc
 417              	.LFE67:
 418              		.size	S3_DETECTED, .-S3_DETECTED
 419              		.section	.text.S4_DETECTED,"ax",%progbits
 420              		.align	2
 421              		.global	S4_DETECTED
 422              		.thumb
 423              		.thumb_func
 424              		.type	S4_DETECTED, %function
 425              	S4_DETECTED:
 426              	.LFB68:
 100:main.c        **** 
 101:main.c        **** CY_ISR(S4_DETECTED) {
 427              		.loc 1 101 0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 0
 430              		@ frame_needed = 1, uses_anonymous_args = 0
 431              		@ link register save eliminated.
 432 0000 80B4     		push	{r7}
 433              		.cfi_def_cfa_offset 4
 434              		.cfi_offset 7, -4
 435 0002 00AF     		add	r7, sp, #0
 436              		.cfi_def_cfa_register 7
 102:main.c        ****     // Sensor has detected WHITE
 103:main.c        ****     s4 = 1; // , Black = 0, White = 1
 437              		.loc 1 103 0
 438 0004 034B     		ldr	r3, .L15
 439 0006 0122     		movs	r2, #1
 440 0008 1A70     		strb	r2, [r3]
 104:main.c        ****     //LED_Write(1u);
 105:main.c        **** }
 441              		.loc 1 105 0
 442 000a 00BF     		nop
 443 000c BD46     		mov	sp, r7
 444              		.cfi_def_cfa_register 13
 445              		@ sp needed
 446 000e 80BC     		pop	{r7}
 447              		.cfi_restore 7
 448              		.cfi_def_cfa_offset 0
 449 0010 7047     		bx	lr
 450              	.L16:
 451 0012 00BF     		.align	2
 452              	.L15:
 453 0014 00000000 		.word	s4
 454              		.cfi_endproc
 455              	.LFE68:
 456              		.size	S4_DETECTED, .-S4_DETECTED
 457              		.section	.text.S5_DETECTED,"ax",%progbits
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 11


 458              		.align	2
 459              		.global	S5_DETECTED
 460              		.thumb
 461              		.thumb_func
 462              		.type	S5_DETECTED, %function
 463              	S5_DETECTED:
 464              	.LFB69:
 106:main.c        **** 
 107:main.c        **** CY_ISR(S5_DETECTED) {
 465              		.loc 1 107 0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 1, uses_anonymous_args = 0
 469              		@ link register save eliminated.
 470 0000 80B4     		push	{r7}
 471              		.cfi_def_cfa_offset 4
 472              		.cfi_offset 7, -4
 473 0002 00AF     		add	r7, sp, #0
 474              		.cfi_def_cfa_register 7
 108:main.c        ****     // Sensor has detected WHITE
 109:main.c        ****     s5 = 1; // , Black = 0, White = 1
 475              		.loc 1 109 0
 476 0004 034B     		ldr	r3, .L18
 477 0006 0122     		movs	r2, #1
 478 0008 1A70     		strb	r2, [r3]
 110:main.c        ****     //LED_Write(1u);
 111:main.c        **** }
 479              		.loc 1 111 0
 480 000a 00BF     		nop
 481 000c BD46     		mov	sp, r7
 482              		.cfi_def_cfa_register 13
 483              		@ sp needed
 484 000e 80BC     		pop	{r7}
 485              		.cfi_restore 7
 486              		.cfi_def_cfa_offset 0
 487 0010 7047     		bx	lr
 488              	.L19:
 489 0012 00BF     		.align	2
 490              	.L18:
 491 0014 00000000 		.word	s5
 492              		.cfi_endproc
 493              	.LFE69:
 494              		.size	S5_DETECTED, .-S5_DETECTED
 495              		.section	.text.S6_DETECTED,"ax",%progbits
 496              		.align	2
 497              		.global	S6_DETECTED
 498              		.thumb
 499              		.thumb_func
 500              		.type	S6_DETECTED, %function
 501              	S6_DETECTED:
 502              	.LFB70:
 112:main.c        **** 
 113:main.c        **** CY_ISR(S6_DETECTED) {
 503              		.loc 1 113 0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 12


 507              		@ link register save eliminated.
 508 0000 80B4     		push	{r7}
 509              		.cfi_def_cfa_offset 4
 510              		.cfi_offset 7, -4
 511 0002 00AF     		add	r7, sp, #0
 512              		.cfi_def_cfa_register 7
 114:main.c        ****     // Sensor has detected WHITE
 115:main.c        ****     s6 = 1; // , Black = 0, White = 1
 513              		.loc 1 115 0
 514 0004 034B     		ldr	r3, .L21
 515 0006 0122     		movs	r2, #1
 516 0008 1A70     		strb	r2, [r3]
 116:main.c        ****     //LED_Write(1u);
 117:main.c        **** }
 517              		.loc 1 117 0
 518 000a 00BF     		nop
 519 000c BD46     		mov	sp, r7
 520              		.cfi_def_cfa_register 13
 521              		@ sp needed
 522 000e 80BC     		pop	{r7}
 523              		.cfi_restore 7
 524              		.cfi_def_cfa_offset 0
 525 0010 7047     		bx	lr
 526              	.L22:
 527 0012 00BF     		.align	2
 528              	.L21:
 529 0014 00000000 		.word	s6
 530              		.cfi_endproc
 531              	.LFE70:
 532              		.size	S6_DETECTED, .-S6_DETECTED
 533              		.section	.text.TIMER_FINISH,"ax",%progbits
 534              		.align	2
 535              		.global	TIMER_FINISH
 536              		.thumb
 537              		.thumb_func
 538              		.type	TIMER_FINISH, %function
 539              	TIMER_FINISH:
 540              	.LFB71:
 118:main.c        **** 
 119:main.c        **** CY_ISR(TIMER_FINISH) {
 541              		.loc 1 119 0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 1, uses_anonymous_args = 0
 545 0000 80B5     		push	{r7, lr}
 546              		.cfi_def_cfa_offset 8
 547              		.cfi_offset 7, -8
 548              		.cfi_offset 14, -4
 549 0002 00AF     		add	r7, sp, #0
 550              		.cfi_def_cfa_register 7
 120:main.c        ****     //LED_Write(0u);
 121:main.c        ****     SetRobotMovement(); 
 551              		.loc 1 121 0
 552 0004 FFF7FEFF 		bl	SetRobotMovement
 122:main.c        ****     ResetSensorFlags(); // Reset Sensor Flags for Next rising Eddge
 553              		.loc 1 122 0
 554 0008 FFF7FEFF 		bl	ResetSensorFlags
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 13


 123:main.c        ****     Timer_LED_ReadStatusRegister();
 555              		.loc 1 123 0
 556 000c FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 124:main.c        **** }
 557              		.loc 1 124 0
 558 0010 00BF     		nop
 559 0012 80BD     		pop	{r7, pc}
 560              		.cfi_endproc
 561              	.LFE71:
 562              		.size	TIMER_FINISH, .-TIMER_FINISH
 563              		.section	.text.main,"ax",%progbits
 564              		.align	2
 565              		.global	main
 566              		.thumb
 567              		.thumb_func
 568              		.type	main, %function
 569              	main:
 570              	.LFB72:
 125:main.c        **** 
 126:main.c        **** 
 127:main.c        **** int main()
 128:main.c        **** {
 571              		.loc 1 128 0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 0
 574              		@ frame_needed = 1, uses_anonymous_args = 0
 575 0000 80B5     		push	{r7, lr}
 576              		.cfi_def_cfa_offset 8
 577              		.cfi_offset 7, -8
 578              		.cfi_offset 14, -4
 579 0002 00AF     		add	r7, sp, #0
 580              		.cfi_def_cfa_register 7
 129:main.c        **** // --------------------------------    
 130:main.c        **** // ----- INITIALIZATIONS ----------
 131:main.c        ****     CYGlobalIntEnable;
 581              		.loc 1 131 0
 582              		.syntax unified
 583              	@ 131 "main.c" 1
 584 0004 62B6     		CPSIE   i
 585              	@ 0 "" 2
 132:main.c        ****     ResetSensorFlags();
 586              		.loc 1 132 0
 587              		.thumb
 588              		.syntax unified
 589 0006 FFF7FEFF 		bl	ResetSensorFlags
 133:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 590              		.loc 1 133 0
 591 000a FFF7FEFF 		bl	init
 134:main.c        ****     //findPath(map, "");// find shortest path- store this in map
 135:main.c        ****     //isr_speed_StartEx(speedTimer); // start interrupt
 136:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 592              		.loc 1 136 0
 593 000e 1948     		ldr	r0, .L28
 594 0010 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 137:main.c        ****     S1_detected_StartEx(S1_DETECTED);
 595              		.loc 1 137 0
 596 0014 1848     		ldr	r0, .L28+4
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 14


 597 0016 FFF7FEFF 		bl	S1_detected_StartEx
 138:main.c        ****     S2_detected_StartEx(S2_DETECTED);
 598              		.loc 1 138 0
 599 001a 1848     		ldr	r0, .L28+8
 600 001c FFF7FEFF 		bl	S2_detected_StartEx
 139:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 601              		.loc 1 139 0
 602 0020 1748     		ldr	r0, .L28+12
 603 0022 FFF7FEFF 		bl	S3_detected_StartEx
 140:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 604              		.loc 1 140 0
 605 0026 1748     		ldr	r0, .L28+16
 606 0028 FFF7FEFF 		bl	S4_detected_StartEx
 141:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 607              		.loc 1 141 0
 608 002c 1648     		ldr	r0, .L28+20
 609 002e FFF7FEFF 		bl	S5_detected_StartEx
 142:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 610              		.loc 1 142 0
 611 0032 1648     		ldr	r0, .L28+24
 612 0034 FFF7FEFF 		bl	S6_detected_StartEx
 143:main.c        ****     Timer_LED_Start();
 613              		.loc 1 143 0
 614 0038 FFF7FEFF 		bl	Timer_LED_Start
 144:main.c        ****     //stopMoving();
 145:main.c        **** 
 146:main.c        **** // ------USB SETUP ----------------    
 147:main.c        **** #ifdef USE_USB    
 148:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 615              		.loc 1 148 0
 616 003c 0121     		movs	r1, #1
 617 003e 0020     		movs	r0, #0
 618 0040 FFF7FEFF 		bl	USBUART_Start
 149:main.c        **** #endif        
 150:main.c        ****     RF_BT_SELECT_Write(0);
 619              		.loc 1 150 0
 620 0044 0020     		movs	r0, #0
 621 0046 FFF7FEFF 		bl	RF_BT_SELECT_Write
 622              	.L27:
 151:main.c        ****     
 152:main.c        ****     //usbPutString("Initialised UART");
 153:main.c        ****     for(;;)
 154:main.c        ****     {
 155:main.c        ****         //traverseMap(map);
 156:main.c        ****         //rotationAntiClockwise();
 157:main.c        ****         //rotationClockwise();
 158:main.c        ****         
 159:main.c        ****         
 160:main.c        ****         
 161:main.c        ****         if(timerInt == 1) {
 623              		.loc 1 161 0
 624 004a 114B     		ldr	r3, .L28+28
 625 004c 1B68     		ldr	r3, [r3]
 626 004e 012B     		cmp	r3, #1
 627 0050 08D1     		bne	.L25
 162:main.c        ****             timerInt = 0;
 628              		.loc 1 162 0
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 15


 629 0052 0F4B     		ldr	r3, .L28+28
 630 0054 0022     		movs	r2, #0
 631 0056 1A60     		str	r2, [r3]
 163:main.c        ****             // calculate RPM of M2
 164:main.c        ****             quadCountToRPM(quadDec2Count);
 632              		.loc 1 164 0
 633 0058 0E4B     		ldr	r3, .L28+32
 634 005a 1B68     		ldr	r3, [r3]
 635 005c 9BB2     		uxth	r3, r3
 636 005e 1846     		mov	r0, r3
 637 0060 FFF7FEFF 		bl	quadCountToRPM
 638              	.L25:
 165:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 166:main.c        ****             //usbPutString(buffer);
 167:main.c        ****             //usbPutString(" ");
 168:main.c        ****         }
 169:main.c        ****         //handle_usb();
 170:main.c        ****         if (flag_KB_string == 1)
 639              		.loc 1 170 0
 640 0064 0C4B     		ldr	r3, .L28+36
 641 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 642 0068 012B     		cmp	r3, #1
 643 006a EED1     		bne	.L27
 171:main.c        ****         {
 172:main.c        ****             //usbPutString("Total Distance: ");
 173:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 174:main.c        ****             //usbPutString(buffer);
 175:main.c        ****             flag_KB_string = 0;
 644              		.loc 1 175 0
 645 006c 0A4B     		ldr	r3, .L28+36
 646 006e 0022     		movs	r2, #0
 647 0070 1A70     		strb	r2, [r3]
 176:main.c        ****         }           
 177:main.c        ****     }
 648              		.loc 1 177 0
 649 0072 EAE7     		b	.L27
 650              	.L29:
 651              		.align	2
 652              	.L28:
 653 0074 00000000 		.word	TIMER_FINISH
 654 0078 00000000 		.word	S1_DETECTED
 655 007c 00000000 		.word	S2_DETECTED
 656 0080 00000000 		.word	S3_DETECTED
 657 0084 00000000 		.word	S4_DETECTED
 658 0088 00000000 		.word	S5_DETECTED
 659 008c 00000000 		.word	S6_DETECTED
 660 0090 00000000 		.word	timerInt
 661 0094 00000000 		.word	quadDec2Count
 662 0098 00000000 		.word	flag_KB_string
 663              		.cfi_endproc
 664              	.LFE72:
 665              		.size	main, .-main
 666              		.global	__aeabi_d2f
 667              		.global	__aeabi_fmul
 668              		.global	__aeabi_f2iz
 669              		.section	.text.quadCountToRPM,"ax",%progbits
 670              		.align	2
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 16


 671              		.global	quadCountToRPM
 672              		.thumb
 673              		.thumb_func
 674              		.type	quadCountToRPM, %function
 675              	quadCountToRPM:
 676              	.LFB73:
 178:main.c        ****     return 0;
 179:main.c        **** }
 180:main.c        **** 
 181:main.c        **** // Calculations
 182:main.c        **** //* ========================================
 183:main.c        **** int16 quadCountToRPM(uint16 count)
 184:main.c        **** {
 677              		.loc 1 184 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 16
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681 0000 90B5     		push	{r4, r7, lr}
 682              		.cfi_def_cfa_offset 12
 683              		.cfi_offset 4, -12
 684              		.cfi_offset 7, -8
 685              		.cfi_offset 14, -4
 686 0002 85B0     		sub	sp, sp, #20
 687              		.cfi_def_cfa_offset 32
 688 0004 00AF     		add	r7, sp, #0
 689              		.cfi_def_cfa_register 7
 690 0006 0346     		mov	r3, r0
 691 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 185:main.c        ****     float cps = count/57.00;
 692              		.loc 1 185 0
 693 000a FB88     		ldrh	r3, [r7, #6]
 694 000c 1846     		mov	r0, r3
 695 000e FFF7FEFF 		bl	__aeabi_i2d
 696 0012 4FF00002 		mov	r2, #0
 697 0016 0D4B     		ldr	r3, .L32
 698 0018 FFF7FEFF 		bl	__aeabi_ddiv
 699 001c 0346     		mov	r3, r0
 700 001e 0C46     		mov	r4, r1
 701 0020 1846     		mov	r0, r3
 702 0022 2146     		mov	r1, r4
 703 0024 FFF7FEFF 		bl	__aeabi_d2f
 704 0028 0346     		mov	r3, r0
 705 002a FB60     		str	r3, [r7, #12]	@ float
 186:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 706              		.loc 1 186 0
 707 002c 0849     		ldr	r1, .L32+4
 708 002e F868     		ldr	r0, [r7, #12]	@ float
 709 0030 FFF7FEFF 		bl	__aeabi_fmul
 710 0034 0346     		mov	r3, r0
 711 0036 1846     		mov	r0, r3
 712 0038 FFF7FEFF 		bl	__aeabi_f2iz
 713 003c 0346     		mov	r3, r0
 714 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 187:main.c        ****     //sprintf(buffer, "%d", rpm); // store in buffer
 188:main.c        ****     return rpm;
 715              		.loc 1 188 0
 716 0040 B7F90A30 		ldrsh	r3, [r7, #10]
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 17


 189:main.c        ****     //usbPutString(buffer);
 190:main.c        ****     //usbPutString("rpm ");
 191:main.c        **** }
 717              		.loc 1 191 0
 718 0044 1846     		mov	r0, r3
 719 0046 1437     		adds	r7, r7, #20
 720              		.cfi_def_cfa_offset 12
 721 0048 BD46     		mov	sp, r7
 722              		.cfi_def_cfa_register 13
 723              		@ sp needed
 724 004a 90BD     		pop	{r4, r7, pc}
 725              	.L33:
 726              		.align	2
 727              	.L32:
 728 004c 00804C40 		.word	1078755328
 729 0050 00007041 		.word	1097859072
 730              		.cfi_endproc
 731              	.LFE73:
 732              		.size	quadCountToRPM, .-quadCountToRPM
 733              		.section	.text.ResetSensorFlags,"ax",%progbits
 734              		.align	2
 735              		.global	ResetSensorFlags
 736              		.thumb
 737              		.thumb_func
 738              		.type	ResetSensorFlags, %function
 739              	ResetSensorFlags:
 740              	.LFB74:
 192:main.c        **** 
 193:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 194:main.c        **** void ResetSensorFlags() {
 741              		.loc 1 194 0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 0
 744              		@ frame_needed = 1, uses_anonymous_args = 0
 745              		@ link register save eliminated.
 746 0000 80B4     		push	{r7}
 747              		.cfi_def_cfa_offset 4
 748              		.cfi_offset 7, -4
 749 0002 00AF     		add	r7, sp, #0
 750              		.cfi_def_cfa_register 7
 195:main.c        ****     s1 = 0;
 751              		.loc 1 195 0
 752 0004 0A4B     		ldr	r3, .L35
 753 0006 0022     		movs	r2, #0
 754 0008 1A70     		strb	r2, [r3]
 196:main.c        ****     s2 = 0;
 755              		.loc 1 196 0
 756 000a 0A4B     		ldr	r3, .L35+4
 757 000c 0022     		movs	r2, #0
 758 000e 1A70     		strb	r2, [r3]
 197:main.c        ****     s3 = 0;
 759              		.loc 1 197 0
 760 0010 094B     		ldr	r3, .L35+8
 761 0012 0022     		movs	r2, #0
 762 0014 1A70     		strb	r2, [r3]
 198:main.c        ****     s4 = 0;
 763              		.loc 1 198 0
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 18


 764 0016 094B     		ldr	r3, .L35+12
 765 0018 0022     		movs	r2, #0
 766 001a 1A70     		strb	r2, [r3]
 199:main.c        ****     s5 = 0;
 767              		.loc 1 199 0
 768 001c 084B     		ldr	r3, .L35+16
 769 001e 0022     		movs	r2, #0
 770 0020 1A70     		strb	r2, [r3]
 200:main.c        ****     s6 = 0;
 771              		.loc 1 200 0
 772 0022 084B     		ldr	r3, .L35+20
 773 0024 0022     		movs	r2, #0
 774 0026 1A70     		strb	r2, [r3]
 201:main.c        **** }
 775              		.loc 1 201 0
 776 0028 00BF     		nop
 777 002a BD46     		mov	sp, r7
 778              		.cfi_def_cfa_register 13
 779              		@ sp needed
 780 002c 80BC     		pop	{r7}
 781              		.cfi_restore 7
 782              		.cfi_def_cfa_offset 0
 783 002e 7047     		bx	lr
 784              	.L36:
 785              		.align	2
 786              	.L35:
 787 0030 00000000 		.word	s1
 788 0034 00000000 		.word	s2
 789 0038 00000000 		.word	s3
 790 003c 00000000 		.word	s4
 791 0040 00000000 		.word	s5
 792 0044 00000000 		.word	s6
 793              		.cfi_endproc
 794              	.LFE74:
 795              		.size	ResetSensorFlags, .-ResetSensorFlags
 796              		.section	.text.CheckSensorDirection,"ax",%progbits
 797              		.align	2
 798              		.global	CheckSensorDirection
 799              		.thumb
 800              		.thumb_func
 801              		.type	CheckSensorDirection, %function
 802              	CheckSensorDirection:
 803              	.LFB75:
 202:main.c        **** 
 203:main.c        **** // This function checks the sensor flags s1-s6 through a boolean truth table and
 204:main.c        **** // returns a enum direction state depending on the flag configuration
 205:main.c        **** // if no conditons are met, it returns Unknown -- need to fix this edge case
 206:main.c        **** // s1 = 0 -- Black
 207:main.c        **** // s1 = 1 -- White
 208:main.c        **** enum DirectionState CheckSensorDirection() {
 804              		.loc 1 208 0
 805              		.cfi_startproc
 806              		@ args = 0, pretend = 0, frame = 8
 807              		@ frame_needed = 1, uses_anonymous_args = 0
 808              		@ link register save eliminated.
 809 0000 80B4     		push	{r7}
 810              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 19


 811              		.cfi_offset 7, -4
 812 0002 83B0     		sub	sp, sp, #12
 813              		.cfi_def_cfa_offset 16
 814 0004 00AF     		add	r7, sp, #0
 815              		.cfi_def_cfa_register 7
 209:main.c        ****     enum DirectionState directionState = Stop;
 816              		.loc 1 209 0
 817 0006 0523     		movs	r3, #5
 818 0008 7B60     		str	r3, [r7, #4]
 210:main.c        ****     previousDirection = currentDirection;
 819              		.loc 1 210 0
 820 000a 754B     		ldr	r3, .L57
 821 000c 1B68     		ldr	r3, [r3]
 822 000e 754A     		ldr	r2, .L57+4
 823 0010 1360     		str	r3, [r2]
 211:main.c        ****    
 212:main.c        ****     
 213:main.c        **** 
 214:main.c        ****     if(previousDirection == TurnRight) {
 824              		.loc 1 214 0
 825 0012 744B     		ldr	r3, .L57+4
 826 0014 1B68     		ldr	r3, [r3]
 827 0016 012B     		cmp	r3, #1
 828 0018 17D1     		bne	.L38
 215:main.c        ****         if(s5 && s6) {
 829              		.loc 1 215 0
 830 001a 734B     		ldr	r3, .L57+8
 831 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 832 001e 002B     		cmp	r3, #0
 833 0020 07D0     		beq	.L39
 834              		.loc 1 215 0 is_stmt 0 discriminator 1
 835 0022 724B     		ldr	r3, .L57+12
 836 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 837 0026 002B     		cmp	r3, #0
 838 0028 03D0     		beq	.L39
 216:main.c        ****             directionState = TurnRight;
 839              		.loc 1 216 0 is_stmt 1
 840 002a 0123     		movs	r3, #1
 841 002c 7B60     		str	r3, [r7, #4]
 217:main.c        ****             return directionState;
 842              		.loc 1 217 0
 843 002e 7B68     		ldr	r3, [r7, #4]
 844 0030 D1E0     		b	.L40
 845              	.L39:
 218:main.c        ****         } 
 219:main.c        ****         else if (!s5 || !s6) {
 846              		.loc 1 219 0
 847 0032 6D4B     		ldr	r3, .L57+8
 848 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 849 0036 002B     		cmp	r3, #0
 850 0038 03D0     		beq	.L41
 851              		.loc 1 219 0 is_stmt 0 discriminator 1
 852 003a 6C4B     		ldr	r3, .L57+12
 853 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 854 003e 002B     		cmp	r3, #0
 855 0040 03D1     		bne	.L38
 856              	.L41:
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 20


 220:main.c        ****             directionState = HardForward;
 857              		.loc 1 220 0 is_stmt 1
 858 0042 0723     		movs	r3, #7
 859 0044 7B60     		str	r3, [r7, #4]
 221:main.c        ****             return directionState;
 860              		.loc 1 221 0
 861 0046 7B68     		ldr	r3, [r7, #4]
 862 0048 C5E0     		b	.L40
 863              	.L38:
 222:main.c        ****         }
 223:main.c        ****     }    
 224:main.c        **** 
 225:main.c        ****     if(previousDirection == TurnLeft) {
 864              		.loc 1 225 0
 865 004a 664B     		ldr	r3, .L57+4
 866 004c 1B68     		ldr	r3, [r3]
 867 004e 022B     		cmp	r3, #2
 868 0050 17D1     		bne	.L42
 226:main.c        ****         if(s5 && s6) {
 869              		.loc 1 226 0
 870 0052 654B     		ldr	r3, .L57+8
 871 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 872 0056 002B     		cmp	r3, #0
 873 0058 07D0     		beq	.L43
 874              		.loc 1 226 0 is_stmt 0 discriminator 1
 875 005a 644B     		ldr	r3, .L57+12
 876 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 877 005e 002B     		cmp	r3, #0
 878 0060 03D0     		beq	.L43
 227:main.c        ****             // Possible reason
 228:main.c        ****             directionState = TurnLeft;
 879              		.loc 1 228 0 is_stmt 1
 880 0062 0223     		movs	r3, #2
 881 0064 7B60     		str	r3, [r7, #4]
 229:main.c        ****             return directionState;
 882              		.loc 1 229 0
 883 0066 7B68     		ldr	r3, [r7, #4]
 884 0068 B5E0     		b	.L40
 885              	.L43:
 230:main.c        ****         } 
 231:main.c        ****         else if (!s5 || !s6) {
 886              		.loc 1 231 0
 887 006a 5F4B     		ldr	r3, .L57+8
 888 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 889 006e 002B     		cmp	r3, #0
 890 0070 03D0     		beq	.L44
 891              		.loc 1 231 0 is_stmt 0 discriminator 1
 892 0072 5E4B     		ldr	r3, .L57+12
 893 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 894 0076 002B     		cmp	r3, #0
 895 0078 03D1     		bne	.L42
 896              	.L44:
 232:main.c        ****             directionState = HardForward;
 897              		.loc 1 232 0 is_stmt 1
 898 007a 0723     		movs	r3, #7
 899 007c 7B60     		str	r3, [r7, #4]
 233:main.c        ****             return directionState;
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 21


 900              		.loc 1 233 0
 901 007e 7B68     		ldr	r3, [r7, #4]
 902 0080 A9E0     		b	.L40
 903              	.L42:
 234:main.c        ****         }
 235:main.c        ****     }
 236:main.c        ****     
 237:main.c        ****     if (previousDirection == waitForTurn) {
 904              		.loc 1 237 0
 905 0082 584B     		ldr	r3, .L57+4
 906 0084 1B68     		ldr	r3, [r3]
 907 0086 082B     		cmp	r3, #8
 908 0088 13D1     		bne	.L45
 238:main.c        ****         // If we are waiting for a turn, look for left sensor and right sensor, otherwise keep wait
 239:main.c        ****         if (!s3) {
 909              		.loc 1 239 0
 910 008a 594B     		ldr	r3, .L57+16
 911 008c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 912 008e 002B     		cmp	r3, #0
 913 0090 03D1     		bne	.L46
 240:main.c        ****             directionState = TurnLeft;
 914              		.loc 1 240 0
 915 0092 0223     		movs	r3, #2
 916 0094 7B60     		str	r3, [r7, #4]
 241:main.c        ****             return directionState;
 917              		.loc 1 241 0
 918 0096 7B68     		ldr	r3, [r7, #4]
 919 0098 9DE0     		b	.L40
 920              	.L46:
 242:main.c        ****         }
 243:main.c        ****         if (!s4) {
 921              		.loc 1 243 0
 922 009a 564B     		ldr	r3, .L57+20
 923 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 924 009e 002B     		cmp	r3, #0
 925 00a0 03D1     		bne	.L47
 244:main.c        ****             directionState = TurnRight;   
 926              		.loc 1 244 0
 927 00a2 0123     		movs	r3, #1
 928 00a4 7B60     		str	r3, [r7, #4]
 245:main.c        ****             return directionState;
 929              		.loc 1 245 0
 930 00a6 7B68     		ldr	r3, [r7, #4]
 931 00a8 95E0     		b	.L40
 932              	.L47:
 246:main.c        ****         }
 247:main.c        ****         directionState = waitForTurn;
 933              		.loc 1 247 0
 934 00aa 0823     		movs	r3, #8
 935 00ac 7B60     		str	r3, [r7, #4]
 248:main.c        ****         return directionState;
 936              		.loc 1 248 0
 937 00ae 7B68     		ldr	r3, [r7, #4]
 938 00b0 91E0     		b	.L40
 939              	.L45:
 249:main.c        ****     }
 250:main.c        **** 
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 22


 251:main.c        ****     // wait for turn at end of line
 252:main.c        ****     if(s5 && s6 && (previousDirection == Forward || (previousDirection == AdjustToTheLeft || previo
 940              		.loc 1 252 0
 941 00b2 4D4B     		ldr	r3, .L57+8
 942 00b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 943 00b6 002B     		cmp	r3, #0
 944 00b8 13D0     		beq	.L48
 945              		.loc 1 252 0 is_stmt 0 discriminator 1
 946 00ba 4C4B     		ldr	r3, .L57+12
 947 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 948 00be 002B     		cmp	r3, #0
 949 00c0 0FD0     		beq	.L48
 950              		.loc 1 252 0 discriminator 2
 951 00c2 484B     		ldr	r3, .L57+4
 952 00c4 1B68     		ldr	r3, [r3]
 953 00c6 002B     		cmp	r3, #0
 954 00c8 07D0     		beq	.L49
 955              		.loc 1 252 0 discriminator 3
 956 00ca 464B     		ldr	r3, .L57+4
 957 00cc 1B68     		ldr	r3, [r3]
 958 00ce 032B     		cmp	r3, #3
 959 00d0 03D0     		beq	.L49
 960              		.loc 1 252 0 discriminator 4
 961 00d2 444B     		ldr	r3, .L57+4
 962 00d4 1B68     		ldr	r3, [r3]
 963 00d6 042B     		cmp	r3, #4
 964 00d8 03D1     		bne	.L48
 965              	.L49:
 253:main.c        ****         directionState = waitForTurn; // need to wait to check for a black line
 966              		.loc 1 253 0 is_stmt 1
 967 00da 0823     		movs	r3, #8
 968 00dc 7B60     		str	r3, [r7, #4]
 254:main.c        ****         return directionState;
 969              		.loc 1 254 0
 970 00de 7B68     		ldr	r3, [r7, #4]
 971 00e0 79E0     		b	.L40
 972              	.L48:
 255:main.c        ****     }
 256:main.c        **** 
 257:main.c        ****     // course correction
 258:main.c        ****     if (previousDirection == Forward || previousDirection == AdjustToTheLeft || previousDirection =
 973              		.loc 1 258 0
 974 00e2 404B     		ldr	r3, .L57+4
 975 00e4 1B68     		ldr	r3, [r3]
 976 00e6 002B     		cmp	r3, #0
 977 00e8 07D0     		beq	.L50
 978              		.loc 1 258 0 is_stmt 0 discriminator 1
 979 00ea 3E4B     		ldr	r3, .L57+4
 980 00ec 1B68     		ldr	r3, [r3]
 981 00ee 032B     		cmp	r3, #3
 982 00f0 03D0     		beq	.L50
 983              		.loc 1 258 0 discriminator 2
 984 00f2 3C4B     		ldr	r3, .L57+4
 985 00f4 1B68     		ldr	r3, [r3]
 986 00f6 042B     		cmp	r3, #4
 987 00f8 0FD1     		bne	.L51
 988              	.L50:
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 23


 259:main.c        ****         
 260:main.c        ****         /*
 261:main.c        ****         // If both are on white, we assume we are off the line and use the back two sensors as back
 262:main.c        ****         if (s5 && s6) {
 263:main.c        ****             
 264:main.c        ****             if (s1 && s2) {
 265:main.c        ****                 directionState = Forward;
 266:main.c        ****                 return directionState;
 267:main.c        ****             }
 268:main.c        ****             if (!s1) {
 269:main.c        ****                 directionState = AdjustToTheRight;
 270:main.c        ****                 return directionState;
 271:main.c        ****             }
 272:main.c        ****             if (!s2) {
 273:main.c        ****                 directionState = AdjustToTheLeft;
 274:main.c        ****                 return directionState;
 275:main.c        ****             }
 276:main.c        ****             
 277:main.c        ****             directionState = Forward;
 278:main.c        ****             return directionState;
 279:main.c        ****         }
 280:main.c        ****             */
 281:main.c        ****         
 282:main.c        ****         
 283:main.c        ****         if(s6) {
 989              		.loc 1 283 0 is_stmt 1
 990 00fa 3C4B     		ldr	r3, .L57+12
 991 00fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 992 00fe 002B     		cmp	r3, #0
 993 0100 03D0     		beq	.L52
 284:main.c        ****             directionState = AdjustToTheLeft; // keep adjusting to the left
 994              		.loc 1 284 0
 995 0102 0323     		movs	r3, #3
 996 0104 7B60     		str	r3, [r7, #4]
 285:main.c        ****             return directionState;
 997              		.loc 1 285 0
 998 0106 7B68     		ldr	r3, [r7, #4]
 999 0108 65E0     		b	.L40
 1000              	.L52:
 286:main.c        ****         }
 287:main.c        ****         if(s5) {
 1001              		.loc 1 287 0
 1002 010a 374B     		ldr	r3, .L57+8
 1003 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1004 010e 002B     		cmp	r3, #0
 1005 0110 03D0     		beq	.L51
 288:main.c        ****             directionState = AdjustToTheRight; // keep adjusting to the right
 1006              		.loc 1 288 0
 1007 0112 0423     		movs	r3, #4
 1008 0114 7B60     		str	r3, [r7, #4]
 289:main.c        ****             return directionState;
 1009              		.loc 1 289 0
 1010 0116 7B68     		ldr	r3, [r7, #4]
 1011 0118 5DE0     		b	.L40
 1012              	.L51:
 290:main.c        ****         }
 291:main.c        ****     }
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 24


 292:main.c        ****     
 293:main.c        ****     // forward 111100
 294:main.c        ****     if (s1 && s2 && s3 && s4 && !s5 && !s6) {
 1013              		.loc 1 294 0
 1014 011a 374B     		ldr	r3, .L57+24
 1015 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1016 011e 002B     		cmp	r3, #0
 1017 0120 17D0     		beq	.L53
 1018              		.loc 1 294 0 is_stmt 0 discriminator 1
 1019 0122 364B     		ldr	r3, .L57+28
 1020 0124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1021 0126 002B     		cmp	r3, #0
 1022 0128 13D0     		beq	.L53
 1023              		.loc 1 294 0 discriminator 2
 1024 012a 314B     		ldr	r3, .L57+16
 1025 012c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1026 012e 002B     		cmp	r3, #0
 1027 0130 0FD0     		beq	.L53
 1028              		.loc 1 294 0 discriminator 3
 1029 0132 304B     		ldr	r3, .L57+20
 1030 0134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1031 0136 002B     		cmp	r3, #0
 1032 0138 0BD0     		beq	.L53
 1033              		.loc 1 294 0 discriminator 4
 1034 013a 2B4B     		ldr	r3, .L57+8
 1035 013c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1036 013e 002B     		cmp	r3, #0
 1037 0140 07D1     		bne	.L53
 1038              		.loc 1 294 0 discriminator 5
 1039 0142 2A4B     		ldr	r3, .L57+12
 1040 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1041 0146 002B     		cmp	r3, #0
 1042 0148 03D1     		bne	.L53
 295:main.c        ****         directionState = Forward;
 1043              		.loc 1 295 0 is_stmt 1
 1044 014a 0023     		movs	r3, #0
 1045 014c 7B60     		str	r3, [r7, #4]
 296:main.c        ****         return directionState;   
 1046              		.loc 1 296 0
 1047 014e 7B68     		ldr	r3, [r7, #4]
 1048 0150 41E0     		b	.L40
 1049              	.L53:
 297:main.c        ****     }
 298:main.c        ****     
 299:main.c        ****     //turn left 110111
 300:main.c        ****     if (s1 && s2 && !s3 && s4 && s5 && s6) {
 1050              		.loc 1 300 0
 1051 0152 294B     		ldr	r3, .L57+24
 1052 0154 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1053 0156 002B     		cmp	r3, #0
 1054 0158 17D0     		beq	.L54
 1055              		.loc 1 300 0 is_stmt 0 discriminator 1
 1056 015a 284B     		ldr	r3, .L57+28
 1057 015c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1058 015e 002B     		cmp	r3, #0
 1059 0160 13D0     		beq	.L54
 1060              		.loc 1 300 0 discriminator 2
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 25


 1061 0162 234B     		ldr	r3, .L57+16
 1062 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1063 0166 002B     		cmp	r3, #0
 1064 0168 0FD1     		bne	.L54
 1065              		.loc 1 300 0 discriminator 3
 1066 016a 224B     		ldr	r3, .L57+20
 1067 016c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1068 016e 002B     		cmp	r3, #0
 1069 0170 0BD0     		beq	.L54
 1070              		.loc 1 300 0 discriminator 4
 1071 0172 1D4B     		ldr	r3, .L57+8
 1072 0174 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1073 0176 002B     		cmp	r3, #0
 1074 0178 07D0     		beq	.L54
 1075              		.loc 1 300 0 discriminator 5
 1076 017a 1C4B     		ldr	r3, .L57+12
 1077 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1078 017e 002B     		cmp	r3, #0
 1079 0180 03D0     		beq	.L54
 301:main.c        ****         directionState = TurnLeft;
 1080              		.loc 1 301 0 is_stmt 1
 1081 0182 0223     		movs	r3, #2
 1082 0184 7B60     		str	r3, [r7, #4]
 302:main.c        ****         return directionState;
 1083              		.loc 1 302 0
 1084 0186 7B68     		ldr	r3, [r7, #4]
 1085 0188 25E0     		b	.L40
 1086              	.L54:
 303:main.c        ****     }
 304:main.c        ****     
 305:main.c        ****     // turn right if 111011
 306:main.c        ****     if (s1 && s2 && s3 && !s4 && s5 && s6) {
 1087              		.loc 1 306 0
 1088 018a 1B4B     		ldr	r3, .L57+24
 1089 018c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1090 018e 002B     		cmp	r3, #0
 1091 0190 17D0     		beq	.L55
 1092              		.loc 1 306 0 is_stmt 0 discriminator 1
 1093 0192 1A4B     		ldr	r3, .L57+28
 1094 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1095 0196 002B     		cmp	r3, #0
 1096 0198 13D0     		beq	.L55
 1097              		.loc 1 306 0 discriminator 2
 1098 019a 154B     		ldr	r3, .L57+16
 1099 019c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1100 019e 002B     		cmp	r3, #0
 1101 01a0 0FD0     		beq	.L55
 1102              		.loc 1 306 0 discriminator 3
 1103 01a2 144B     		ldr	r3, .L57+20
 1104 01a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1105 01a6 002B     		cmp	r3, #0
 1106 01a8 0BD1     		bne	.L55
 1107              		.loc 1 306 0 discriminator 4
 1108 01aa 0F4B     		ldr	r3, .L57+8
 1109 01ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1110 01ae 002B     		cmp	r3, #0
 1111 01b0 07D0     		beq	.L55
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 26


 1112              		.loc 1 306 0 discriminator 5
 1113 01b2 0E4B     		ldr	r3, .L57+12
 1114 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1115 01b6 002B     		cmp	r3, #0
 1116 01b8 03D0     		beq	.L55
 307:main.c        ****         directionState = TurnRight;
 1117              		.loc 1 307 0 is_stmt 1
 1118 01ba 0123     		movs	r3, #1
 1119 01bc 7B60     		str	r3, [r7, #4]
 308:main.c        ****         return directionState;
 1120              		.loc 1 308 0
 1121 01be 7B68     		ldr	r3, [r7, #4]
 1122 01c0 09E0     		b	.L40
 1123              	.L55:
 309:main.c        ****     }
 310:main.c        ****     
 311:main.c        ****     
 312:main.c        ****     // ====== After Initial turn ======
 313:main.c        ****     // -- This accounts for the transition period between turning at an intersection --
 314:main.c        ****     /*if (previousDirection == TurnRight || previousDirection == TurnLeft) {
 315:main.c        ****         if ((s1 && s2 && s3 && !s4 && !s5 && !s6) ||
 316:main.c        ****         (s1 && s2 && !s3 && s4 && !s5 && !s6)) {
 317:main.c        ****             directionState = HardForward;
 318:main.c        ****             return directionState;
 319:main.c        ****         }
 320:main.c        ****     }*/
 321:main.c        **** 
 322:main.c        ****     // If currentDirection is Unknown, we continue with the previous direction.
 323:main.c        ****     // However, if the previous direction is also Unknown, we will just move forward.
 324:main.c        ****     if (previousDirection == Unknown) {
 1124              		.loc 1 324 0
 1125 01c2 084B     		ldr	r3, .L57+4
 1126 01c4 1B68     		ldr	r3, [r3]
 1127 01c6 062B     		cmp	r3, #6
 1128 01c8 03D1     		bne	.L56
 325:main.c        ****         directionState = Forward;
 1129              		.loc 1 325 0
 1130 01ca 0023     		movs	r3, #0
 1131 01cc 7B60     		str	r3, [r7, #4]
 326:main.c        ****         return directionState;
 1132              		.loc 1 326 0
 1133 01ce 7B68     		ldr	r3, [r7, #4]
 1134 01d0 01E0     		b	.L40
 1135              	.L56:
 327:main.c        ****     }
 328:main.c        ****     
 329:main.c        ****     // Possible reason
 330:main.c        ****     return previousDirection;
 1136              		.loc 1 330 0
 1137 01d2 044B     		ldr	r3, .L57+4
 1138 01d4 1B68     		ldr	r3, [r3]
 1139              	.L40:
 331:main.c        **** }
 1140              		.loc 1 331 0
 1141 01d6 1846     		mov	r0, r3
 1142 01d8 0C37     		adds	r7, r7, #12
 1143              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 27


 1144 01da BD46     		mov	sp, r7
 1145              		.cfi_def_cfa_register 13
 1146              		@ sp needed
 1147 01dc 80BC     		pop	{r7}
 1148              		.cfi_restore 7
 1149              		.cfi_def_cfa_offset 0
 1150 01de 7047     		bx	lr
 1151              	.L58:
 1152              		.align	2
 1153              	.L57:
 1154 01e0 00000000 		.word	currentDirection
 1155 01e4 00000000 		.word	previousDirection
 1156 01e8 00000000 		.word	s5
 1157 01ec 00000000 		.word	s6
 1158 01f0 00000000 		.word	s3
 1159 01f4 00000000 		.word	s4
 1160 01f8 00000000 		.word	s1
 1161 01fc 00000000 		.word	s2
 1162              		.cfi_endproc
 1163              	.LFE75:
 1164              		.size	CheckSensorDirection, .-CheckSensorDirection
 1165              		.section	.text.SetRobotMovement,"ax",%progbits
 1166              		.align	2
 1167              		.global	SetRobotMovement
 1168              		.thumb
 1169              		.thumb_func
 1170              		.type	SetRobotMovement, %function
 1171              	SetRobotMovement:
 1172              	.LFB76:
 332:main.c        **** 
 333:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 334:main.c        **** void SetRobotMovement() {
 1173              		.loc 1 334 0
 1174              		.cfi_startproc
 1175              		@ args = 0, pretend = 0, frame = 0
 1176              		@ frame_needed = 1, uses_anonymous_args = 0
 1177 0000 80B5     		push	{r7, lr}
 1178              		.cfi_def_cfa_offset 8
 1179              		.cfi_offset 7, -8
 1180              		.cfi_offset 14, -4
 1181 0002 00AF     		add	r7, sp, #0
 1182              		.cfi_def_cfa_register 7
 335:main.c        ****     currentDirection = CheckSensorDirection();   
 1183              		.loc 1 335 0
 1184 0004 FFF7FEFF 		bl	CheckSensorDirection
 1185 0008 0246     		mov	r2, r0
 1186 000a 1B4B     		ldr	r3, .L73
 1187 000c 1A60     		str	r2, [r3]
 336:main.c        ****     
 337:main.c        ****     switch (currentDirection) {
 1188              		.loc 1 337 0
 1189 000e 1A4B     		ldr	r3, .L73
 1190 0010 1B68     		ldr	r3, [r3]
 1191 0012 082B     		cmp	r3, #8
 1192 0014 2DD8     		bhi	.L71
 1193 0016 01A2     		adr	r2, .L62
 1194 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 28


 1195              		.p2align 2
 1196              	.L62:
 1197 001c 41000000 		.word	.L61+1
 1198 0020 47000000 		.word	.L63+1
 1199 0024 4D000000 		.word	.L64+1
 1200 0028 59000000 		.word	.L65+1
 1201 002c 53000000 		.word	.L66+1
 1202 0030 5F000000 		.word	.L67+1
 1203 0034 71000000 		.word	.L72+1
 1204 0038 65000000 		.word	.L69+1
 1205 003c 6B000000 		.word	.L70+1
 1206              		.p2align 1
 1207              	.L61:
 338:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 339:main.c        ****         case Forward:
 340:main.c        ****             moveForward();
 1208              		.loc 1 340 0
 1209 0040 FFF7FEFF 		bl	moveForward
 341:main.c        ****             break;
 1210              		.loc 1 341 0
 1211 0044 15E0     		b	.L60
 1212              	.L63:
 342:main.c        ****         case TurnRight:
 343:main.c        ****             turnRight();
 1213              		.loc 1 343 0
 1214 0046 FFF7FEFF 		bl	turnRight
 344:main.c        ****             break;
 1215              		.loc 1 344 0
 1216 004a 12E0     		b	.L60
 1217              	.L64:
 345:main.c        ****         case TurnLeft:
 346:main.c        ****             turnLeft(); // try course correction methods for L/R turn
 1218              		.loc 1 346 0
 1219 004c FFF7FEFF 		bl	turnLeft
 347:main.c        ****             break;
 1220              		.loc 1 347 0
 1221 0050 0FE0     		b	.L60
 1222              	.L66:
 348:main.c        ****         case AdjustToTheRight:
 349:main.c        ****             adjustRight();
 1223              		.loc 1 349 0
 1224 0052 FFF7FEFF 		bl	adjustRight
 350:main.c        ****             break;
 1225              		.loc 1 350 0
 1226 0056 0CE0     		b	.L60
 1227              	.L65:
 351:main.c        ****         case AdjustToTheLeft:
 352:main.c        ****             adjustLeft();
 1228              		.loc 1 352 0
 1229 0058 FFF7FEFF 		bl	adjustLeft
 353:main.c        ****             break;
 1230              		.loc 1 353 0
 1231 005c 09E0     		b	.L60
 1232              	.L67:
 354:main.c        ****         case Stop:
 355:main.c        ****             stopMoving();
 1233              		.loc 1 355 0
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 29


 1234 005e FFF7FEFF 		bl	stopMoving
 356:main.c        ****             break;
 1235              		.loc 1 356 0
 1236 0062 06E0     		b	.L60
 1237              	.L69:
 357:main.c        ****         case HardForward:
 358:main.c        ****             moveForwardForSpecifiedCount();
 1238              		.loc 1 358 0
 1239 0064 FFF7FEFF 		bl	moveForwardForSpecifiedCount
 359:main.c        ****             break;
 1240              		.loc 1 359 0
 1241 0068 03E0     		b	.L60
 1242              	.L70:
 360:main.c        ****         case waitForTurn:
 361:main.c        ****             moveForward(); 
 1243              		.loc 1 361 0
 1244 006a FFF7FEFF 		bl	moveForward
 362:main.c        ****             break;
 1245              		.loc 1 362 0
 1246 006e 00E0     		b	.L60
 1247              	.L72:
 363:main.c        ****         case Unknown:
 364:main.c        ****             // UNKNOWN CONFIGURATION
 365:main.c        ****             break;  
 1248              		.loc 1 365 0
 1249 0070 00BF     		nop
 1250              	.L60:
 1251              	.L71:
 366:main.c        ****     }
 367:main.c        **** }
 1252              		.loc 1 367 0
 1253 0072 00BF     		nop
 1254 0074 80BD     		pop	{r7, pc}
 1255              	.L74:
 1256 0076 00BF     		.align	2
 1257              	.L73:
 1258 0078 00000000 		.word	currentDirection
 1259              		.cfi_endproc
 1260              	.LFE76:
 1261              		.size	SetRobotMovement, .-SetRobotMovement
 1262              		.text
 1263              	.Letext0:
 1264              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1265              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1266              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1267              		.file 5 "vars.h"
 1268              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1269              		.section	.debug_info,"",%progbits
 1270              	.Ldebug_info0:
 1271 0000 B1050000 		.4byte	0x5b1
 1272 0004 0400     		.2byte	0x4
 1273 0006 00000000 		.4byte	.Ldebug_abbrev0
 1274 000a 04       		.byte	0x4
 1275 000b 01       		.uleb128 0x1
 1276 000c 08010000 		.4byte	.LASF88
 1277 0010 0C       		.byte	0xc
 1278 0011 34040000 		.4byte	.LASF89
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 30


 1279 0015 34000000 		.4byte	.LASF90
 1280 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1281 001d 00000000 		.4byte	0
 1282 0021 00000000 		.4byte	.Ldebug_line0
 1283 0025 02       		.uleb128 0x2
 1284 0026 01       		.byte	0x1
 1285 0027 06       		.byte	0x6
 1286 0028 08030000 		.4byte	.LASF0
 1287 002c 02       		.uleb128 0x2
 1288 002d 01       		.byte	0x1
 1289 002e 08       		.byte	0x8
 1290 002f 8C020000 		.4byte	.LASF1
 1291 0033 02       		.uleb128 0x2
 1292 0034 02       		.byte	0x2
 1293 0035 05       		.byte	0x5
 1294 0036 CF000000 		.4byte	.LASF2
 1295 003a 02       		.uleb128 0x2
 1296 003b 02       		.byte	0x2
 1297 003c 07       		.byte	0x7
 1298 003d 9C030000 		.4byte	.LASF3
 1299 0041 03       		.uleb128 0x3
 1300 0042 83040000 		.4byte	.LASF12
 1301 0046 02       		.byte	0x2
 1302 0047 3F       		.byte	0x3f
 1303 0048 4C000000 		.4byte	0x4c
 1304 004c 02       		.uleb128 0x2
 1305 004d 04       		.byte	0x4
 1306 004e 05       		.byte	0x5
 1307 004f 4A020000 		.4byte	.LASF4
 1308 0053 02       		.uleb128 0x2
 1309 0054 04       		.byte	0x4
 1310 0055 07       		.byte	0x7
 1311 0056 3B040000 		.4byte	.LASF5
 1312 005a 02       		.uleb128 0x2
 1313 005b 08       		.byte	0x8
 1314 005c 05       		.byte	0x5
 1315 005d 0B020000 		.4byte	.LASF6
 1316 0061 02       		.uleb128 0x2
 1317 0062 08       		.byte	0x8
 1318 0063 07       		.byte	0x7
 1319 0064 1C030000 		.4byte	.LASF7
 1320 0068 04       		.uleb128 0x4
 1321 0069 04       		.byte	0x4
 1322 006a 05       		.byte	0x5
 1323 006b 696E7400 		.ascii	"int\000"
 1324 006f 02       		.uleb128 0x2
 1325 0070 04       		.byte	0x4
 1326 0071 07       		.byte	0x7
 1327 0072 44030000 		.4byte	.LASF8
 1328 0076 02       		.uleb128 0x2
 1329 0077 08       		.byte	0x8
 1330 0078 04       		.byte	0x4
 1331 0079 B2020000 		.4byte	.LASF9
 1332 007d 02       		.uleb128 0x2
 1333 007e 04       		.byte	0x4
 1334 007f 07       		.byte	0x7
 1335 0080 E6000000 		.4byte	.LASF10
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 31


 1336 0084 02       		.uleb128 0x2
 1337 0085 01       		.byte	0x1
 1338 0086 08       		.byte	0x8
 1339 0087 CA030000 		.4byte	.LASF11
 1340 008b 03       		.uleb128 0x3
 1341 008c 14030000 		.4byte	.LASF13
 1342 0090 03       		.byte	0x3
 1343 0091 2C       		.byte	0x2c
 1344 0092 41000000 		.4byte	0x41
 1345 0096 05       		.uleb128 0x5
 1346 0097 E1010000 		.4byte	.LASF14
 1347 009b 04       		.byte	0x4
 1348 009c E701     		.2byte	0x1e7
 1349 009e 2C000000 		.4byte	0x2c
 1350 00a2 05       		.uleb128 0x5
 1351 00a3 B7010000 		.4byte	.LASF15
 1352 00a7 04       		.byte	0x4
 1353 00a8 E801     		.2byte	0x1e8
 1354 00aa 3A000000 		.4byte	0x3a
 1355 00ae 05       		.uleb128 0x5
 1356 00af 2D040000 		.4byte	.LASF16
 1357 00b3 04       		.byte	0x4
 1358 00b4 E901     		.2byte	0x1e9
 1359 00b6 53000000 		.4byte	0x53
 1360 00ba 05       		.uleb128 0x5
 1361 00bb 19020000 		.4byte	.LASF17
 1362 00bf 04       		.byte	0x4
 1363 00c0 EA01     		.2byte	0x1ea
 1364 00c2 25000000 		.4byte	0x25
 1365 00c6 05       		.uleb128 0x5
 1366 00c7 CF010000 		.4byte	.LASF18
 1367 00cb 04       		.byte	0x4
 1368 00cc EB01     		.2byte	0x1eb
 1369 00ce 33000000 		.4byte	0x33
 1370 00d2 02       		.uleb128 0x2
 1371 00d3 04       		.byte	0x4
 1372 00d4 04       		.byte	0x4
 1373 00d5 F9010000 		.4byte	.LASF19
 1374 00d9 02       		.uleb128 0x2
 1375 00da 08       		.byte	0x8
 1376 00db 04       		.byte	0x4
 1377 00dc 4D040000 		.4byte	.LASF20
 1378 00e0 06       		.uleb128 0x6
 1379 00e1 AF030000 		.4byte	.LASF91
 1380 00e5 20       		.byte	0x20
 1381 00e6 05       		.byte	0x5
 1382 00e7 29       		.byte	0x29
 1383 00e8 B9010000 		.4byte	0x1b9
 1384 00ec 07       		.uleb128 0x7
 1385 00ed 12050000 		.4byte	.LASF21
 1386 00f1 05       		.byte	0x5
 1387 00f2 2A       		.byte	0x2a
 1388 00f3 BA000000 		.4byte	0xba
 1389 00f7 00       		.byte	0
 1390 00f8 07       		.uleb128 0x7
 1391 00f9 BE010000 		.4byte	.LASF22
 1392 00fd 05       		.byte	0x5
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 32


 1393 00fe 2B       		.byte	0x2b
 1394 00ff 96000000 		.4byte	0x96
 1395 0103 01       		.byte	0x1
 1396 0104 07       		.uleb128 0x7
 1397 0105 11040000 		.4byte	.LASF23
 1398 0109 05       		.byte	0x5
 1399 010a 2C       		.byte	0x2c
 1400 010b C6000000 		.4byte	0xc6
 1401 010f 02       		.byte	0x2
 1402 0110 07       		.uleb128 0x7
 1403 0111 DA040000 		.4byte	.LASF24
 1404 0115 05       		.byte	0x5
 1405 0116 2D       		.byte	0x2d
 1406 0117 C6000000 		.4byte	0xc6
 1407 011b 04       		.byte	0x4
 1408 011c 07       		.uleb128 0x7
 1409 011d 17050000 		.4byte	.LASF25
 1410 0121 05       		.byte	0x5
 1411 0122 2E       		.byte	0x2e
 1412 0123 C6000000 		.4byte	0xc6
 1413 0127 06       		.byte	0x6
 1414 0128 07       		.uleb128 0x7
 1415 0129 42020000 		.4byte	.LASF26
 1416 012d 05       		.byte	0x5
 1417 012e 2F       		.byte	0x2f
 1418 012f C6000000 		.4byte	0xc6
 1419 0133 08       		.byte	0x8
 1420 0134 07       		.uleb128 0x7
 1421 0135 92040000 		.4byte	.LASF27
 1422 0139 05       		.byte	0x5
 1423 013a 30       		.byte	0x30
 1424 013b C6000000 		.4byte	0xc6
 1425 013f 0A       		.byte	0xa
 1426 0140 07       		.uleb128 0x7
 1427 0141 E8020000 		.4byte	.LASF28
 1428 0145 05       		.byte	0x5
 1429 0146 31       		.byte	0x31
 1430 0147 C6000000 		.4byte	0xc6
 1431 014b 0C       		.byte	0xc
 1432 014c 07       		.uleb128 0x7
 1433 014d 35020000 		.4byte	.LASF29
 1434 0151 05       		.byte	0x5
 1435 0152 32       		.byte	0x32
 1436 0153 C6000000 		.4byte	0xc6
 1437 0157 0E       		.byte	0xe
 1438 0158 07       		.uleb128 0x7
 1439 0159 00030000 		.4byte	.LASF30
 1440 015d 05       		.byte	0x5
 1441 015e 33       		.byte	0x33
 1442 015f C6000000 		.4byte	0xc6
 1443 0163 10       		.byte	0x10
 1444 0164 07       		.uleb128 0x7
 1445 0165 E5030000 		.4byte	.LASF31
 1446 0169 05       		.byte	0x5
 1447 016a 34       		.byte	0x34
 1448 016b C6000000 		.4byte	0xc6
 1449 016f 12       		.byte	0x12
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 33


 1450 0170 07       		.uleb128 0x7
 1451 0171 FA030000 		.4byte	.LASF32
 1452 0175 05       		.byte	0x5
 1453 0176 35       		.byte	0x35
 1454 0177 C6000000 		.4byte	0xc6
 1455 017b 14       		.byte	0x14
 1456 017c 07       		.uleb128 0x7
 1457 017d E7010000 		.4byte	.LASF33
 1458 0181 05       		.byte	0x5
 1459 0182 36       		.byte	0x36
 1460 0183 C6000000 		.4byte	0xc6
 1461 0187 16       		.byte	0x16
 1462 0188 07       		.uleb128 0x7
 1463 0189 C7000000 		.4byte	.LASF34
 1464 018d 05       		.byte	0x5
 1465 018e 37       		.byte	0x37
 1466 018f C6000000 		.4byte	0xc6
 1467 0193 18       		.byte	0x18
 1468 0194 07       		.uleb128 0x7
 1469 0195 2D020000 		.4byte	.LASF35
 1470 0199 05       		.byte	0x5
 1471 019a 38       		.byte	0x38
 1472 019b C6000000 		.4byte	0xc6
 1473 019f 1A       		.byte	0x1a
 1474 01a0 07       		.uleb128 0x7
 1475 01a1 87030000 		.4byte	.LASF36
 1476 01a5 05       		.byte	0x5
 1477 01a6 39       		.byte	0x39
 1478 01a7 C6000000 		.4byte	0xc6
 1479 01ab 1C       		.byte	0x1c
 1480 01ac 07       		.uleb128 0x7
 1481 01ad ED030000 		.4byte	.LASF37
 1482 01b1 05       		.byte	0x5
 1483 01b2 3A       		.byte	0x3a
 1484 01b3 C6000000 		.4byte	0xc6
 1485 01b7 1E       		.byte	0x1e
 1486 01b8 00       		.byte	0
 1487 01b9 08       		.uleb128 0x8
 1488 01ba EF000000 		.4byte	.LASF92
 1489 01be 04       		.byte	0x4
 1490 01bf 6F000000 		.4byte	0x6f
 1491 01c3 01       		.byte	0x1
 1492 01c4 27       		.byte	0x27
 1493 01c5 00020000 		.4byte	0x200
 1494 01c9 09       		.uleb128 0x9
 1495 01ca CF030000 		.4byte	.LASF38
 1496 01ce 00       		.byte	0
 1497 01cf 09       		.uleb128 0x9
 1498 01d0 1C040000 		.4byte	.LASF39
 1499 01d4 01       		.byte	0x1
 1500 01d5 09       		.uleb128 0x9
 1501 01d6 0C000000 		.4byte	.LASF40
 1502 01da 02       		.byte	0x2
 1503 01db 09       		.uleb128 0x9
 1504 01dc A7010000 		.4byte	.LASF41
 1505 01e0 03       		.byte	0x3
 1506 01e1 09       		.uleb128 0x9
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 34


 1507 01e2 33030000 		.4byte	.LASF42
 1508 01e6 04       		.byte	0x4
 1509 01e7 09       		.uleb128 0x9
 1510 01e8 8D040000 		.4byte	.LASF43
 1511 01ec 05       		.byte	0x5
 1512 01ed 09       		.uleb128 0x9
 1513 01ee 54040000 		.4byte	.LASF44
 1514 01f2 06       		.byte	0x6
 1515 01f3 09       		.uleb128 0x9
 1516 01f4 D5010000 		.4byte	.LASF45
 1517 01f8 07       		.byte	0x7
 1518 01f9 09       		.uleb128 0x9
 1519 01fa 28000000 		.4byte	.LASF46
 1520 01fe 08       		.byte	0x8
 1521 01ff 00       		.byte	0
 1522 0200 0A       		.uleb128 0xa
 1523 0201 C4010000 		.4byte	.LASF56
 1524 0205 01       		.byte	0x1
 1525 0206 40       		.byte	0x40
 1526 0207 00000000 		.4byte	.LFB64
 1527 020b D4000000 		.4byte	.LFE64-.LFB64
 1528 020f 01       		.uleb128 0x1
 1529 0210 9C       		.byte	0x9c
 1530 0211 2E020000 		.4byte	0x22e
 1531 0215 0B       		.uleb128 0xb
 1532 0216 28000000 		.4byte	.LBB2
 1533 021a 6C000000 		.4byte	.LBE2-.LBB2
 1534 021e 0C       		.uleb128 0xc
 1535 021f FF010000 		.4byte	.LASF55
 1536 0223 01       		.byte	0x1
 1537 0224 46       		.byte	0x46
 1538 0225 AE000000 		.4byte	0xae
 1539 0229 02       		.uleb128 0x2
 1540 022a 91       		.byte	0x91
 1541 022b 6C       		.sleb128 -20
 1542 022c 00       		.byte	0
 1543 022d 00       		.byte	0
 1544 022e 0D       		.uleb128 0xd
 1545 022f 29050000 		.4byte	.LASF47
 1546 0233 01       		.byte	0x1
 1547 0234 51       		.byte	0x51
 1548 0235 00000000 		.4byte	.LFB65
 1549 0239 18000000 		.4byte	.LFE65-.LFB65
 1550 023d 01       		.uleb128 0x1
 1551 023e 9C       		.byte	0x9c
 1552 023f 0D       		.uleb128 0xd
 1553 0240 68020000 		.4byte	.LASF48
 1554 0244 01       		.byte	0x1
 1555 0245 58       		.byte	0x58
 1556 0246 00000000 		.4byte	.LFB66
 1557 024a 18000000 		.4byte	.LFE66-.LFB66
 1558 024e 01       		.uleb128 0x1
 1559 024f 9C       		.byte	0x9c
 1560 0250 0D       		.uleb128 0xd
 1561 0251 5C040000 		.4byte	.LASF49
 1562 0255 01       		.byte	0x1
 1563 0256 5F       		.byte	0x5f
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 35


 1564 0257 00000000 		.4byte	.LFB67
 1565 025b 18000000 		.4byte	.LFE67-.LFB67
 1566 025f 01       		.uleb128 0x1
 1567 0260 9C       		.byte	0x9c
 1568 0261 0D       		.uleb128 0xd
 1569 0262 9B010000 		.4byte	.LASF50
 1570 0266 01       		.byte	0x1
 1571 0267 65       		.byte	0x65
 1572 0268 00000000 		.4byte	.LFB68
 1573 026c 18000000 		.4byte	.LFE68-.LFB68
 1574 0270 01       		.uleb128 0x1
 1575 0271 9C       		.byte	0x9c
 1576 0272 0D       		.uleb128 0xd
 1577 0273 90030000 		.4byte	.LASF51
 1578 0277 01       		.byte	0x1
 1579 0278 6B       		.byte	0x6b
 1580 0279 00000000 		.4byte	.LFB69
 1581 027d 18000000 		.4byte	.LFE69-.LFB69
 1582 0281 01       		.uleb128 0x1
 1583 0282 9C       		.byte	0x9c
 1584 0283 0D       		.uleb128 0xd
 1585 0284 00000000 		.4byte	.LASF52
 1586 0288 01       		.byte	0x1
 1587 0289 71       		.byte	0x71
 1588 028a 00000000 		.4byte	.LFB70
 1589 028e 18000000 		.4byte	.LFE70-.LFB70
 1590 0292 01       		.uleb128 0x1
 1591 0293 9C       		.byte	0x9c
 1592 0294 0E       		.uleb128 0xe
 1593 0295 7A030000 		.4byte	.LASF53
 1594 0299 01       		.byte	0x1
 1595 029a 77       		.byte	0x77
 1596 029b 00000000 		.4byte	.LFB71
 1597 029f 14000000 		.4byte	.LFE71-.LFB71
 1598 02a3 01       		.uleb128 0x1
 1599 02a4 9C       		.byte	0x9c
 1600 02a5 0F       		.uleb128 0xf
 1601 02a6 96010000 		.4byte	.LASF54
 1602 02aa 01       		.byte	0x1
 1603 02ab 7F       		.byte	0x7f
 1604 02ac 68000000 		.4byte	0x68
 1605 02b0 00000000 		.4byte	.LFB72
 1606 02b4 9C000000 		.4byte	.LFE72-.LFB72
 1607 02b8 01       		.uleb128 0x1
 1608 02b9 9C       		.byte	0x9c
 1609 02ba 10       		.uleb128 0x10
 1610 02bb AF040000 		.4byte	.LASF93
 1611 02bf 01       		.byte	0x1
 1612 02c0 B7       		.byte	0xb7
 1613 02c1 C6000000 		.4byte	0xc6
 1614 02c5 00000000 		.4byte	.LFB73
 1615 02c9 54000000 		.4byte	.LFE73-.LFB73
 1616 02cd 01       		.uleb128 0x1
 1617 02ce 9C       		.byte	0x9c
 1618 02cf FE020000 		.4byte	0x2fe
 1619 02d3 11       		.uleb128 0x11
 1620 02d4 71040000 		.4byte	.LASF94
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 36


 1621 02d8 01       		.byte	0x1
 1622 02d9 B7       		.byte	0xb7
 1623 02da A2000000 		.4byte	0xa2
 1624 02de 02       		.uleb128 0x2
 1625 02df 91       		.byte	0x91
 1626 02e0 66       		.sleb128 -26
 1627 02e1 12       		.uleb128 0x12
 1628 02e2 63707300 		.ascii	"cps\000"
 1629 02e6 01       		.byte	0x1
 1630 02e7 B9       		.byte	0xb9
 1631 02e8 D2000000 		.4byte	0xd2
 1632 02ec 02       		.uleb128 0x2
 1633 02ed 91       		.byte	0x91
 1634 02ee 6C       		.sleb128 -20
 1635 02ef 12       		.uleb128 0x12
 1636 02f0 72706D00 		.ascii	"rpm\000"
 1637 02f4 01       		.byte	0x1
 1638 02f5 BA       		.byte	0xba
 1639 02f6 C6000000 		.4byte	0xc6
 1640 02fa 02       		.uleb128 0x2
 1641 02fb 91       		.byte	0x91
 1642 02fc 6A       		.sleb128 -22
 1643 02fd 00       		.byte	0
 1644 02fe 13       		.uleb128 0x13
 1645 02ff B9030000 		.4byte	.LASF59
 1646 0303 01       		.byte	0x1
 1647 0304 C2       		.byte	0xc2
 1648 0305 00000000 		.4byte	.LFB74
 1649 0309 48000000 		.4byte	.LFE74-.LFB74
 1650 030d 01       		.uleb128 0x1
 1651 030e 9C       		.byte	0x9c
 1652 030f 14       		.uleb128 0x14
 1653 0310 53020000 		.4byte	.LASF57
 1654 0314 01       		.byte	0x1
 1655 0315 D0       		.byte	0xd0
 1656 0316 B9010000 		.4byte	0x1b9
 1657 031a 00000000 		.4byte	.LFB75
 1658 031e 00020000 		.4byte	.LFE75-.LFB75
 1659 0322 01       		.uleb128 0x1
 1660 0323 9C       		.byte	0x9c
 1661 0324 37030000 		.4byte	0x337
 1662 0328 0C       		.uleb128 0xc
 1663 0329 03050000 		.4byte	.LASF58
 1664 032d 01       		.byte	0x1
 1665 032e D1       		.byte	0xd1
 1666 032f B9010000 		.4byte	0x1b9
 1667 0333 02       		.uleb128 0x2
 1668 0334 91       		.byte	0x91
 1669 0335 74       		.sleb128 -12
 1670 0336 00       		.byte	0
 1671 0337 15       		.uleb128 0x15
 1672 0338 69030000 		.4byte	.LASF60
 1673 033c 01       		.byte	0x1
 1674 033d 4E01     		.2byte	0x14e
 1675 033f 00000000 		.4byte	.LFB76
 1676 0343 7C000000 		.4byte	.LFE76-.LFB76
 1677 0347 01       		.uleb128 0x1
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 37


 1678 0348 9C       		.byte	0x9c
 1679 0349 16       		.uleb128 0x16
 1680 034a E5040000 		.4byte	.LASF61
 1681 034e 06       		.byte	0x6
 1682 034f 1207     		.2byte	0x712
 1683 0351 55030000 		.4byte	0x355
 1684 0355 17       		.uleb128 0x17
 1685 0356 8B000000 		.4byte	0x8b
 1686 035a 18       		.uleb128 0x18
 1687 035b 747300   		.ascii	"ts\000"
 1688 035e 05       		.byte	0x5
 1689 035f 10       		.byte	0x10
 1690 0360 96000000 		.4byte	0x96
 1691 0364 05       		.uleb128 0x5
 1692 0365 03       		.byte	0x3
 1693 0366 00000000 		.4byte	ts
 1694 036a 19       		.uleb128 0x19
 1695 036b 15000000 		.4byte	.LASF62
 1696 036f 05       		.byte	0x5
 1697 0370 11       		.byte	0x11
 1698 0371 A2000000 		.4byte	0xa2
 1699 0375 05       		.uleb128 0x5
 1700 0376 03       		.byte	0x3
 1701 0377 00000000 		.4byte	ts_enc
 1702 037b 19       		.uleb128 0x19
 1703 037c A5040000 		.4byte	.LASF63
 1704 0380 05       		.byte	0x5
 1705 0381 12       		.byte	0x12
 1706 0382 A2000000 		.4byte	0xa2
 1707 0386 05       		.uleb128 0x5
 1708 0387 03       		.byte	0x3
 1709 0388 00000000 		.4byte	ts_update
 1710 038c 19       		.uleb128 0x19
 1711 038d 68040000 		.4byte	.LASF64
 1712 0391 05       		.byte	0x5
 1713 0392 13       		.byte	0x13
 1714 0393 A2000000 		.4byte	0xa2
 1715 0397 05       		.uleb128 0x5
 1716 0398 03       		.byte	0x3
 1717 0399 00000000 		.4byte	ts_speed
 1718 039d 19       		.uleb128 0x19
 1719 039e 9A040000 		.4byte	.LASF65
 1720 03a2 05       		.byte	0x5
 1721 03a3 14       		.byte	0x14
 1722 03a4 A2000000 		.4byte	0xa2
 1723 03a8 05       		.uleb128 0x5
 1724 03a9 03       		.byte	0x3
 1725 03aa 00000000 		.4byte	ts_display
 1726 03ae 19       		.uleb128 0x19
 1727 03af 77040000 		.4byte	.LASF66
 1728 03b3 05       		.byte	0x5
 1729 03b4 16       		.byte	0x16
 1730 03b5 96000000 		.4byte	0x96
 1731 03b9 05       		.uleb128 0x5
 1732 03ba 03       		.byte	0x3
 1733 03bb 00000000 		.4byte	flag_ts_enc
 1734 03bf 19       		.uleb128 0x19
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 38


 1735 03c0 1E020000 		.4byte	.LASF67
 1736 03c4 05       		.byte	0x5
 1737 03c5 17       		.byte	0x17
 1738 03c6 96000000 		.4byte	0x96
 1739 03ca 05       		.uleb128 0x5
 1740 03cb 03       		.byte	0x3
 1741 03cc 00000000 		.4byte	flag_ts_update
 1742 03d0 19       		.uleb128 0x19
 1743 03d1 B9000000 		.4byte	.LASF68
 1744 03d5 05       		.byte	0x5
 1745 03d6 18       		.byte	0x18
 1746 03d7 96000000 		.4byte	0x96
 1747 03db 05       		.uleb128 0x5
 1748 03dc 03       		.byte	0x3
 1749 03dd 00000000 		.4byte	flag_ts_speed
 1750 03e1 19       		.uleb128 0x19
 1751 03e2 74020000 		.4byte	.LASF69
 1752 03e6 05       		.byte	0x5
 1753 03e7 19       		.byte	0x19
 1754 03e8 96000000 		.4byte	0x96
 1755 03ec 05       		.uleb128 0x5
 1756 03ed 03       		.byte	0x3
 1757 03ee 00000000 		.4byte	flag_ts_display
 1758 03f2 19       		.uleb128 0x19
 1759 03f3 84020000 		.4byte	.LASF70
 1760 03f7 05       		.byte	0x5
 1761 03f8 1C       		.byte	0x1c
 1762 03f9 96000000 		.4byte	0x96
 1763 03fd 05       		.uleb128 0x5
 1764 03fe 03       		.byte	0x3
 1765 03ff 00000000 		.4byte	flag_rx
 1766 0403 19       		.uleb128 0x19
 1767 0404 1C000000 		.4byte	.LASF71
 1768 0408 05       		.byte	0x5
 1769 0409 1D       		.byte	0x1d
 1770 040a 96000000 		.4byte	0x96
 1771 040e 05       		.uleb128 0x5
 1772 040f 03       		.byte	0x3
 1773 0410 00000000 		.4byte	flag_packet
 1774 0414 19       		.uleb128 0x19
 1775 0415 5A030000 		.4byte	.LASF72
 1776 0419 05       		.byte	0x5
 1777 041a 1E       		.byte	0x1e
 1778 041b 96000000 		.4byte	0x96
 1779 041f 05       		.uleb128 0x5
 1780 0420 03       		.byte	0x3
 1781 0421 00000000 		.4byte	flag_KB_string
 1782 0425 19       		.uleb128 0x19
 1783 0426 F1020000 		.4byte	.LASF73
 1784 042a 05       		.byte	0x5
 1785 042b 20       		.byte	0x20
 1786 042c 96000000 		.4byte	0x96
 1787 0430 05       		.uleb128 0x5
 1788 0431 03       		.byte	0x3
 1789 0432 00000000 		.4byte	dataready_flag
 1790 0436 19       		.uleb128 0x19
 1791 0437 BE040000 		.4byte	.LASF74
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 39


 1792 043b 05       		.byte	0x5
 1793 043c 22       		.byte	0x22
 1794 043d 96000000 		.4byte	0x96
 1795 0441 05       		.uleb128 0x5
 1796 0442 03       		.byte	0x3
 1797 0443 00000000 		.4byte	flag_rf_transmission_active
 1798 0447 1A       		.uleb128 0x1a
 1799 0448 84000000 		.4byte	0x84
 1800 044c 57040000 		.4byte	0x457
 1801 0450 1B       		.uleb128 0x1b
 1802 0451 7D000000 		.4byte	0x7d
 1803 0455 3F       		.byte	0x3f
 1804 0456 00       		.byte	0
 1805 0457 19       		.uleb128 0x19
 1806 0458 03040000 		.4byte	.LASF75
 1807 045c 05       		.byte	0x5
 1808 045d 25       		.byte	0x25
 1809 045e 47040000 		.4byte	0x447
 1810 0462 05       		.uleb128 0x5
 1811 0463 03       		.byte	0x3
 1812 0464 00000000 		.4byte	displaystring
 1813 0468 19       		.uleb128 0x19
 1814 0469 F4010000 		.4byte	.LASF76
 1815 046d 05       		.byte	0x5
 1816 046e 26       		.byte	0x26
 1817 046f 47040000 		.4byte	0x447
 1818 0473 05       		.uleb128 0x5
 1819 0474 03       		.byte	0x3
 1820 0475 00000000 		.4byte	line
 1821 0479 19       		.uleb128 0x19
 1822 047a AC020000 		.4byte	.LASF77
 1823 047e 05       		.byte	0x5
 1824 047f 26       		.byte	0x26
 1825 0480 47040000 		.4byte	0x447
 1826 0484 05       		.uleb128 0x5
 1827 0485 03       		.byte	0x3
 1828 0486 00000000 		.4byte	entry
 1829 048a 1A       		.uleb128 0x1a
 1830 048b 96000000 		.4byte	0x96
 1831 048f 9A040000 		.4byte	0x49a
 1832 0493 1B       		.uleb128 0x1b
 1833 0494 7D000000 		.4byte	0x7d
 1834 0498 3F       		.byte	0x3f
 1835 0499 00       		.byte	0
 1836 049a 19       		.uleb128 0x19
 1837 049b FE000000 		.4byte	.LASF78
 1838 049f 05       		.byte	0x5
 1839 04a0 27       		.byte	0x27
 1840 04a1 8A040000 		.4byte	0x48a
 1841 04a5 05       		.uleb128 0x5
 1842 04a6 03       		.byte	0x3
 1843 04a7 00000000 		.4byte	usbBuffer
 1844 04ab 19       		.uleb128 0x19
 1845 04ac D9000000 		.4byte	.LASF79
 1846 04b0 05       		.byte	0x5
 1847 04b1 3C       		.byte	0x3c
 1848 04b2 E0000000 		.4byte	0xe0
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 40


 1849 04b6 05       		.uleb128 0x5
 1850 04b7 03       		.byte	0x3
 1851 04b8 00000000 		.4byte	system_state
 1852 04bc 19       		.uleb128 0x19
 1853 04bd F2040000 		.4byte	.LASF80
 1854 04c1 01       		.byte	0x1
 1855 04c2 29       		.byte	0x29
 1856 04c3 B9010000 		.4byte	0x1b9
 1857 04c7 05       		.uleb128 0x5
 1858 04c8 03       		.byte	0x3
 1859 04c9 00000000 		.4byte	currentDirection
 1860 04cd 19       		.uleb128 0x19
 1861 04ce BE020000 		.4byte	.LASF81
 1862 04d2 01       		.byte	0x1
 1863 04d3 2A       		.byte	0x2a
 1864 04d4 B9010000 		.4byte	0x1b9
 1865 04d8 05       		.uleb128 0x5
 1866 04d9 03       		.byte	0x3
 1867 04da 00000000 		.4byte	previousDirection
 1868 04de 18       		.uleb128 0x18
 1869 04df 733100   		.ascii	"s1\000"
 1870 04e2 01       		.byte	0x1
 1871 04e3 2D       		.byte	0x2d
 1872 04e4 96000000 		.4byte	0x96
 1873 04e8 05       		.uleb128 0x5
 1874 04e9 03       		.byte	0x3
 1875 04ea 00000000 		.4byte	s1
 1876 04ee 18       		.uleb128 0x18
 1877 04ef 733200   		.ascii	"s2\000"
 1878 04f2 01       		.byte	0x1
 1879 04f3 2E       		.byte	0x2e
 1880 04f4 96000000 		.4byte	0x96
 1881 04f8 05       		.uleb128 0x5
 1882 04f9 03       		.byte	0x3
 1883 04fa 00000000 		.4byte	s2
 1884 04fe 18       		.uleb128 0x18
 1885 04ff 733300   		.ascii	"s3\000"
 1886 0502 01       		.byte	0x1
 1887 0503 2F       		.byte	0x2f
 1888 0504 96000000 		.4byte	0x96
 1889 0508 05       		.uleb128 0x5
 1890 0509 03       		.byte	0x3
 1891 050a 00000000 		.4byte	s3
 1892 050e 18       		.uleb128 0x18
 1893 050f 733400   		.ascii	"s4\000"
 1894 0512 01       		.byte	0x1
 1895 0513 30       		.byte	0x30
 1896 0514 96000000 		.4byte	0x96
 1897 0518 05       		.uleb128 0x5
 1898 0519 03       		.byte	0x3
 1899 051a 00000000 		.4byte	s4
 1900 051e 18       		.uleb128 0x18
 1901 051f 733500   		.ascii	"s5\000"
 1902 0522 01       		.byte	0x1
 1903 0523 31       		.byte	0x31
 1904 0524 96000000 		.4byte	0x96
 1905 0528 05       		.uleb128 0x5
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 41


 1906 0529 03       		.byte	0x3
 1907 052a 00000000 		.4byte	s5
 1908 052e 18       		.uleb128 0x18
 1909 052f 733600   		.ascii	"s6\000"
 1910 0532 01       		.byte	0x1
 1911 0533 32       		.byte	0x32
 1912 0534 96000000 		.4byte	0x96
 1913 0538 05       		.uleb128 0x5
 1914 0539 03       		.byte	0x3
 1915 053a 00000000 		.4byte	s6
 1916 053e 19       		.uleb128 0x19
 1917 053f 9A020000 		.4byte	.LASF82
 1918 0543 01       		.byte	0x1
 1919 0544 36       		.byte	0x36
 1920 0545 AE000000 		.4byte	0xae
 1921 0549 05       		.uleb128 0x5
 1922 054a 03       		.byte	0x3
 1923 054b 00000000 		.4byte	totalMilliseconds
 1924 054f 19       		.uleb128 0x19
 1925 0550 D0020000 		.4byte	.LASF83
 1926 0554 01       		.byte	0x1
 1927 0555 37       		.byte	0x37
 1928 0556 AE000000 		.4byte	0xae
 1929 055a 05       		.uleb128 0x5
 1930 055b 03       		.byte	0x3
 1931 055c 00000000 		.4byte	totalDistance
 1932 0560 1A       		.uleb128 0x1a
 1933 0561 84000000 		.4byte	0x84
 1934 0565 70050000 		.4byte	0x570
 1935 0569 1B       		.uleb128 0x1b
 1936 056a 7D000000 		.4byte	0x7d
 1937 056e 44       		.byte	0x44
 1938 056f 00       		.byte	0
 1939 0570 19       		.uleb128 0x19
 1940 0571 26040000 		.4byte	.LASF84
 1941 0575 01       		.byte	0x1
 1942 0576 39       		.byte	0x39
 1943 0577 60050000 		.4byte	0x560
 1944 057b 05       		.uleb128 0x5
 1945 057c 03       		.byte	0x3
 1946 057d 00000000 		.4byte	buffer
 1947 0581 19       		.uleb128 0x19
 1948 0582 D7030000 		.4byte	.LASF85
 1949 0586 01       		.byte	0x1
 1950 0587 3A       		.byte	0x3a
 1951 0588 68000000 		.4byte	0x68
 1952 058c 05       		.uleb128 0x5
 1953 058d 03       		.byte	0x3
 1954 058e 00000000 		.4byte	quadDec2Count
 1955 0592 19       		.uleb128 0x19
 1956 0593 51030000 		.4byte	.LASF86
 1957 0597 01       		.byte	0x1
 1958 0598 3B       		.byte	0x3b
 1959 0599 68000000 		.4byte	0x68
 1960 059d 05       		.uleb128 0x5
 1961 059e 03       		.byte	0x3
 1962 059f 00000000 		.4byte	timerInt
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 42


 1963 05a3 19       		.uleb128 0x19
 1964 05a4 DE020000 		.4byte	.LASF87
 1965 05a8 01       		.byte	0x1
 1966 05a9 3C       		.byte	0x3c
 1967 05aa 68000000 		.4byte	0x68
 1968 05ae 05       		.uleb128 0x5
 1969 05af 03       		.byte	0x3
 1970 05b0 00000000 		.4byte	keepLedOn
 1971 05b4 00       		.byte	0
 1972              		.section	.debug_abbrev,"",%progbits
 1973              	.Ldebug_abbrev0:
 1974 0000 01       		.uleb128 0x1
 1975 0001 11       		.uleb128 0x11
 1976 0002 01       		.byte	0x1
 1977 0003 25       		.uleb128 0x25
 1978 0004 0E       		.uleb128 0xe
 1979 0005 13       		.uleb128 0x13
 1980 0006 0B       		.uleb128 0xb
 1981 0007 03       		.uleb128 0x3
 1982 0008 0E       		.uleb128 0xe
 1983 0009 1B       		.uleb128 0x1b
 1984 000a 0E       		.uleb128 0xe
 1985 000b 55       		.uleb128 0x55
 1986 000c 17       		.uleb128 0x17
 1987 000d 11       		.uleb128 0x11
 1988 000e 01       		.uleb128 0x1
 1989 000f 10       		.uleb128 0x10
 1990 0010 17       		.uleb128 0x17
 1991 0011 00       		.byte	0
 1992 0012 00       		.byte	0
 1993 0013 02       		.uleb128 0x2
 1994 0014 24       		.uleb128 0x24
 1995 0015 00       		.byte	0
 1996 0016 0B       		.uleb128 0xb
 1997 0017 0B       		.uleb128 0xb
 1998 0018 3E       		.uleb128 0x3e
 1999 0019 0B       		.uleb128 0xb
 2000 001a 03       		.uleb128 0x3
 2001 001b 0E       		.uleb128 0xe
 2002 001c 00       		.byte	0
 2003 001d 00       		.byte	0
 2004 001e 03       		.uleb128 0x3
 2005 001f 16       		.uleb128 0x16
 2006 0020 00       		.byte	0
 2007 0021 03       		.uleb128 0x3
 2008 0022 0E       		.uleb128 0xe
 2009 0023 3A       		.uleb128 0x3a
 2010 0024 0B       		.uleb128 0xb
 2011 0025 3B       		.uleb128 0x3b
 2012 0026 0B       		.uleb128 0xb
 2013 0027 49       		.uleb128 0x49
 2014 0028 13       		.uleb128 0x13
 2015 0029 00       		.byte	0
 2016 002a 00       		.byte	0
 2017 002b 04       		.uleb128 0x4
 2018 002c 24       		.uleb128 0x24
 2019 002d 00       		.byte	0
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 43


 2020 002e 0B       		.uleb128 0xb
 2021 002f 0B       		.uleb128 0xb
 2022 0030 3E       		.uleb128 0x3e
 2023 0031 0B       		.uleb128 0xb
 2024 0032 03       		.uleb128 0x3
 2025 0033 08       		.uleb128 0x8
 2026 0034 00       		.byte	0
 2027 0035 00       		.byte	0
 2028 0036 05       		.uleb128 0x5
 2029 0037 16       		.uleb128 0x16
 2030 0038 00       		.byte	0
 2031 0039 03       		.uleb128 0x3
 2032 003a 0E       		.uleb128 0xe
 2033 003b 3A       		.uleb128 0x3a
 2034 003c 0B       		.uleb128 0xb
 2035 003d 3B       		.uleb128 0x3b
 2036 003e 05       		.uleb128 0x5
 2037 003f 49       		.uleb128 0x49
 2038 0040 13       		.uleb128 0x13
 2039 0041 00       		.byte	0
 2040 0042 00       		.byte	0
 2041 0043 06       		.uleb128 0x6
 2042 0044 13       		.uleb128 0x13
 2043 0045 01       		.byte	0x1
 2044 0046 03       		.uleb128 0x3
 2045 0047 0E       		.uleb128 0xe
 2046 0048 0B       		.uleb128 0xb
 2047 0049 0B       		.uleb128 0xb
 2048 004a 3A       		.uleb128 0x3a
 2049 004b 0B       		.uleb128 0xb
 2050 004c 3B       		.uleb128 0x3b
 2051 004d 0B       		.uleb128 0xb
 2052 004e 01       		.uleb128 0x1
 2053 004f 13       		.uleb128 0x13
 2054 0050 00       		.byte	0
 2055 0051 00       		.byte	0
 2056 0052 07       		.uleb128 0x7
 2057 0053 0D       		.uleb128 0xd
 2058 0054 00       		.byte	0
 2059 0055 03       		.uleb128 0x3
 2060 0056 0E       		.uleb128 0xe
 2061 0057 3A       		.uleb128 0x3a
 2062 0058 0B       		.uleb128 0xb
 2063 0059 3B       		.uleb128 0x3b
 2064 005a 0B       		.uleb128 0xb
 2065 005b 49       		.uleb128 0x49
 2066 005c 13       		.uleb128 0x13
 2067 005d 38       		.uleb128 0x38
 2068 005e 0B       		.uleb128 0xb
 2069 005f 00       		.byte	0
 2070 0060 00       		.byte	0
 2071 0061 08       		.uleb128 0x8
 2072 0062 04       		.uleb128 0x4
 2073 0063 01       		.byte	0x1
 2074 0064 03       		.uleb128 0x3
 2075 0065 0E       		.uleb128 0xe
 2076 0066 0B       		.uleb128 0xb
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 44


 2077 0067 0B       		.uleb128 0xb
 2078 0068 49       		.uleb128 0x49
 2079 0069 13       		.uleb128 0x13
 2080 006a 3A       		.uleb128 0x3a
 2081 006b 0B       		.uleb128 0xb
 2082 006c 3B       		.uleb128 0x3b
 2083 006d 0B       		.uleb128 0xb
 2084 006e 01       		.uleb128 0x1
 2085 006f 13       		.uleb128 0x13
 2086 0070 00       		.byte	0
 2087 0071 00       		.byte	0
 2088 0072 09       		.uleb128 0x9
 2089 0073 28       		.uleb128 0x28
 2090 0074 00       		.byte	0
 2091 0075 03       		.uleb128 0x3
 2092 0076 0E       		.uleb128 0xe
 2093 0077 1C       		.uleb128 0x1c
 2094 0078 0B       		.uleb128 0xb
 2095 0079 00       		.byte	0
 2096 007a 00       		.byte	0
 2097 007b 0A       		.uleb128 0xa
 2098 007c 2E       		.uleb128 0x2e
 2099 007d 01       		.byte	0x1
 2100 007e 3F       		.uleb128 0x3f
 2101 007f 19       		.uleb128 0x19
 2102 0080 03       		.uleb128 0x3
 2103 0081 0E       		.uleb128 0xe
 2104 0082 3A       		.uleb128 0x3a
 2105 0083 0B       		.uleb128 0xb
 2106 0084 3B       		.uleb128 0x3b
 2107 0085 0B       		.uleb128 0xb
 2108 0086 27       		.uleb128 0x27
 2109 0087 19       		.uleb128 0x19
 2110 0088 11       		.uleb128 0x11
 2111 0089 01       		.uleb128 0x1
 2112 008a 12       		.uleb128 0x12
 2113 008b 06       		.uleb128 0x6
 2114 008c 40       		.uleb128 0x40
 2115 008d 18       		.uleb128 0x18
 2116 008e 9642     		.uleb128 0x2116
 2117 0090 19       		.uleb128 0x19
 2118 0091 01       		.uleb128 0x1
 2119 0092 13       		.uleb128 0x13
 2120 0093 00       		.byte	0
 2121 0094 00       		.byte	0
 2122 0095 0B       		.uleb128 0xb
 2123 0096 0B       		.uleb128 0xb
 2124 0097 01       		.byte	0x1
 2125 0098 11       		.uleb128 0x11
 2126 0099 01       		.uleb128 0x1
 2127 009a 12       		.uleb128 0x12
 2128 009b 06       		.uleb128 0x6
 2129 009c 00       		.byte	0
 2130 009d 00       		.byte	0
 2131 009e 0C       		.uleb128 0xc
 2132 009f 34       		.uleb128 0x34
 2133 00a0 00       		.byte	0
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 45


 2134 00a1 03       		.uleb128 0x3
 2135 00a2 0E       		.uleb128 0xe
 2136 00a3 3A       		.uleb128 0x3a
 2137 00a4 0B       		.uleb128 0xb
 2138 00a5 3B       		.uleb128 0x3b
 2139 00a6 0B       		.uleb128 0xb
 2140 00a7 49       		.uleb128 0x49
 2141 00a8 13       		.uleb128 0x13
 2142 00a9 02       		.uleb128 0x2
 2143 00aa 18       		.uleb128 0x18
 2144 00ab 00       		.byte	0
 2145 00ac 00       		.byte	0
 2146 00ad 0D       		.uleb128 0xd
 2147 00ae 2E       		.uleb128 0x2e
 2148 00af 00       		.byte	0
 2149 00b0 3F       		.uleb128 0x3f
 2150 00b1 19       		.uleb128 0x19
 2151 00b2 03       		.uleb128 0x3
 2152 00b3 0E       		.uleb128 0xe
 2153 00b4 3A       		.uleb128 0x3a
 2154 00b5 0B       		.uleb128 0xb
 2155 00b6 3B       		.uleb128 0x3b
 2156 00b7 0B       		.uleb128 0xb
 2157 00b8 27       		.uleb128 0x27
 2158 00b9 19       		.uleb128 0x19
 2159 00ba 11       		.uleb128 0x11
 2160 00bb 01       		.uleb128 0x1
 2161 00bc 12       		.uleb128 0x12
 2162 00bd 06       		.uleb128 0x6
 2163 00be 40       		.uleb128 0x40
 2164 00bf 18       		.uleb128 0x18
 2165 00c0 9742     		.uleb128 0x2117
 2166 00c2 19       		.uleb128 0x19
 2167 00c3 00       		.byte	0
 2168 00c4 00       		.byte	0
 2169 00c5 0E       		.uleb128 0xe
 2170 00c6 2E       		.uleb128 0x2e
 2171 00c7 00       		.byte	0
 2172 00c8 3F       		.uleb128 0x3f
 2173 00c9 19       		.uleb128 0x19
 2174 00ca 03       		.uleb128 0x3
 2175 00cb 0E       		.uleb128 0xe
 2176 00cc 3A       		.uleb128 0x3a
 2177 00cd 0B       		.uleb128 0xb
 2178 00ce 3B       		.uleb128 0x3b
 2179 00cf 0B       		.uleb128 0xb
 2180 00d0 27       		.uleb128 0x27
 2181 00d1 19       		.uleb128 0x19
 2182 00d2 11       		.uleb128 0x11
 2183 00d3 01       		.uleb128 0x1
 2184 00d4 12       		.uleb128 0x12
 2185 00d5 06       		.uleb128 0x6
 2186 00d6 40       		.uleb128 0x40
 2187 00d7 18       		.uleb128 0x18
 2188 00d8 9642     		.uleb128 0x2116
 2189 00da 19       		.uleb128 0x19
 2190 00db 00       		.byte	0
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 46


 2191 00dc 00       		.byte	0
 2192 00dd 0F       		.uleb128 0xf
 2193 00de 2E       		.uleb128 0x2e
 2194 00df 00       		.byte	0
 2195 00e0 3F       		.uleb128 0x3f
 2196 00e1 19       		.uleb128 0x19
 2197 00e2 03       		.uleb128 0x3
 2198 00e3 0E       		.uleb128 0xe
 2199 00e4 3A       		.uleb128 0x3a
 2200 00e5 0B       		.uleb128 0xb
 2201 00e6 3B       		.uleb128 0x3b
 2202 00e7 0B       		.uleb128 0xb
 2203 00e8 49       		.uleb128 0x49
 2204 00e9 13       		.uleb128 0x13
 2205 00ea 11       		.uleb128 0x11
 2206 00eb 01       		.uleb128 0x1
 2207 00ec 12       		.uleb128 0x12
 2208 00ed 06       		.uleb128 0x6
 2209 00ee 40       		.uleb128 0x40
 2210 00ef 18       		.uleb128 0x18
 2211 00f0 9642     		.uleb128 0x2116
 2212 00f2 19       		.uleb128 0x19
 2213 00f3 00       		.byte	0
 2214 00f4 00       		.byte	0
 2215 00f5 10       		.uleb128 0x10
 2216 00f6 2E       		.uleb128 0x2e
 2217 00f7 01       		.byte	0x1
 2218 00f8 3F       		.uleb128 0x3f
 2219 00f9 19       		.uleb128 0x19
 2220 00fa 03       		.uleb128 0x3
 2221 00fb 0E       		.uleb128 0xe
 2222 00fc 3A       		.uleb128 0x3a
 2223 00fd 0B       		.uleb128 0xb
 2224 00fe 3B       		.uleb128 0x3b
 2225 00ff 0B       		.uleb128 0xb
 2226 0100 27       		.uleb128 0x27
 2227 0101 19       		.uleb128 0x19
 2228 0102 49       		.uleb128 0x49
 2229 0103 13       		.uleb128 0x13
 2230 0104 11       		.uleb128 0x11
 2231 0105 01       		.uleb128 0x1
 2232 0106 12       		.uleb128 0x12
 2233 0107 06       		.uleb128 0x6
 2234 0108 40       		.uleb128 0x40
 2235 0109 18       		.uleb128 0x18
 2236 010a 9642     		.uleb128 0x2116
 2237 010c 19       		.uleb128 0x19
 2238 010d 01       		.uleb128 0x1
 2239 010e 13       		.uleb128 0x13
 2240 010f 00       		.byte	0
 2241 0110 00       		.byte	0
 2242 0111 11       		.uleb128 0x11
 2243 0112 05       		.uleb128 0x5
 2244 0113 00       		.byte	0
 2245 0114 03       		.uleb128 0x3
 2246 0115 0E       		.uleb128 0xe
 2247 0116 3A       		.uleb128 0x3a
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 47


 2248 0117 0B       		.uleb128 0xb
 2249 0118 3B       		.uleb128 0x3b
 2250 0119 0B       		.uleb128 0xb
 2251 011a 49       		.uleb128 0x49
 2252 011b 13       		.uleb128 0x13
 2253 011c 02       		.uleb128 0x2
 2254 011d 18       		.uleb128 0x18
 2255 011e 00       		.byte	0
 2256 011f 00       		.byte	0
 2257 0120 12       		.uleb128 0x12
 2258 0121 34       		.uleb128 0x34
 2259 0122 00       		.byte	0
 2260 0123 03       		.uleb128 0x3
 2261 0124 08       		.uleb128 0x8
 2262 0125 3A       		.uleb128 0x3a
 2263 0126 0B       		.uleb128 0xb
 2264 0127 3B       		.uleb128 0x3b
 2265 0128 0B       		.uleb128 0xb
 2266 0129 49       		.uleb128 0x49
 2267 012a 13       		.uleb128 0x13
 2268 012b 02       		.uleb128 0x2
 2269 012c 18       		.uleb128 0x18
 2270 012d 00       		.byte	0
 2271 012e 00       		.byte	0
 2272 012f 13       		.uleb128 0x13
 2273 0130 2E       		.uleb128 0x2e
 2274 0131 00       		.byte	0
 2275 0132 3F       		.uleb128 0x3f
 2276 0133 19       		.uleb128 0x19
 2277 0134 03       		.uleb128 0x3
 2278 0135 0E       		.uleb128 0xe
 2279 0136 3A       		.uleb128 0x3a
 2280 0137 0B       		.uleb128 0xb
 2281 0138 3B       		.uleb128 0x3b
 2282 0139 0B       		.uleb128 0xb
 2283 013a 11       		.uleb128 0x11
 2284 013b 01       		.uleb128 0x1
 2285 013c 12       		.uleb128 0x12
 2286 013d 06       		.uleb128 0x6
 2287 013e 40       		.uleb128 0x40
 2288 013f 18       		.uleb128 0x18
 2289 0140 9742     		.uleb128 0x2117
 2290 0142 19       		.uleb128 0x19
 2291 0143 00       		.byte	0
 2292 0144 00       		.byte	0
 2293 0145 14       		.uleb128 0x14
 2294 0146 2E       		.uleb128 0x2e
 2295 0147 01       		.byte	0x1
 2296 0148 3F       		.uleb128 0x3f
 2297 0149 19       		.uleb128 0x19
 2298 014a 03       		.uleb128 0x3
 2299 014b 0E       		.uleb128 0xe
 2300 014c 3A       		.uleb128 0x3a
 2301 014d 0B       		.uleb128 0xb
 2302 014e 3B       		.uleb128 0x3b
 2303 014f 0B       		.uleb128 0xb
 2304 0150 49       		.uleb128 0x49
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 48


 2305 0151 13       		.uleb128 0x13
 2306 0152 11       		.uleb128 0x11
 2307 0153 01       		.uleb128 0x1
 2308 0154 12       		.uleb128 0x12
 2309 0155 06       		.uleb128 0x6
 2310 0156 40       		.uleb128 0x40
 2311 0157 18       		.uleb128 0x18
 2312 0158 9742     		.uleb128 0x2117
 2313 015a 19       		.uleb128 0x19
 2314 015b 01       		.uleb128 0x1
 2315 015c 13       		.uleb128 0x13
 2316 015d 00       		.byte	0
 2317 015e 00       		.byte	0
 2318 015f 15       		.uleb128 0x15
 2319 0160 2E       		.uleb128 0x2e
 2320 0161 00       		.byte	0
 2321 0162 3F       		.uleb128 0x3f
 2322 0163 19       		.uleb128 0x19
 2323 0164 03       		.uleb128 0x3
 2324 0165 0E       		.uleb128 0xe
 2325 0166 3A       		.uleb128 0x3a
 2326 0167 0B       		.uleb128 0xb
 2327 0168 3B       		.uleb128 0x3b
 2328 0169 05       		.uleb128 0x5
 2329 016a 11       		.uleb128 0x11
 2330 016b 01       		.uleb128 0x1
 2331 016c 12       		.uleb128 0x12
 2332 016d 06       		.uleb128 0x6
 2333 016e 40       		.uleb128 0x40
 2334 016f 18       		.uleb128 0x18
 2335 0170 9642     		.uleb128 0x2116
 2336 0172 19       		.uleb128 0x19
 2337 0173 00       		.byte	0
 2338 0174 00       		.byte	0
 2339 0175 16       		.uleb128 0x16
 2340 0176 34       		.uleb128 0x34
 2341 0177 00       		.byte	0
 2342 0178 03       		.uleb128 0x3
 2343 0179 0E       		.uleb128 0xe
 2344 017a 3A       		.uleb128 0x3a
 2345 017b 0B       		.uleb128 0xb
 2346 017c 3B       		.uleb128 0x3b
 2347 017d 05       		.uleb128 0x5
 2348 017e 49       		.uleb128 0x49
 2349 017f 13       		.uleb128 0x13
 2350 0180 3F       		.uleb128 0x3f
 2351 0181 19       		.uleb128 0x19
 2352 0182 3C       		.uleb128 0x3c
 2353 0183 19       		.uleb128 0x19
 2354 0184 00       		.byte	0
 2355 0185 00       		.byte	0
 2356 0186 17       		.uleb128 0x17
 2357 0187 35       		.uleb128 0x35
 2358 0188 00       		.byte	0
 2359 0189 49       		.uleb128 0x49
 2360 018a 13       		.uleb128 0x13
 2361 018b 00       		.byte	0
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 49


 2362 018c 00       		.byte	0
 2363 018d 18       		.uleb128 0x18
 2364 018e 34       		.uleb128 0x34
 2365 018f 00       		.byte	0
 2366 0190 03       		.uleb128 0x3
 2367 0191 08       		.uleb128 0x8
 2368 0192 3A       		.uleb128 0x3a
 2369 0193 0B       		.uleb128 0xb
 2370 0194 3B       		.uleb128 0x3b
 2371 0195 0B       		.uleb128 0xb
 2372 0196 49       		.uleb128 0x49
 2373 0197 13       		.uleb128 0x13
 2374 0198 3F       		.uleb128 0x3f
 2375 0199 19       		.uleb128 0x19
 2376 019a 02       		.uleb128 0x2
 2377 019b 18       		.uleb128 0x18
 2378 019c 00       		.byte	0
 2379 019d 00       		.byte	0
 2380 019e 19       		.uleb128 0x19
 2381 019f 34       		.uleb128 0x34
 2382 01a0 00       		.byte	0
 2383 01a1 03       		.uleb128 0x3
 2384 01a2 0E       		.uleb128 0xe
 2385 01a3 3A       		.uleb128 0x3a
 2386 01a4 0B       		.uleb128 0xb
 2387 01a5 3B       		.uleb128 0x3b
 2388 01a6 0B       		.uleb128 0xb
 2389 01a7 49       		.uleb128 0x49
 2390 01a8 13       		.uleb128 0x13
 2391 01a9 3F       		.uleb128 0x3f
 2392 01aa 19       		.uleb128 0x19
 2393 01ab 02       		.uleb128 0x2
 2394 01ac 18       		.uleb128 0x18
 2395 01ad 00       		.byte	0
 2396 01ae 00       		.byte	0
 2397 01af 1A       		.uleb128 0x1a
 2398 01b0 01       		.uleb128 0x1
 2399 01b1 01       		.byte	0x1
 2400 01b2 49       		.uleb128 0x49
 2401 01b3 13       		.uleb128 0x13
 2402 01b4 01       		.uleb128 0x1
 2403 01b5 13       		.uleb128 0x13
 2404 01b6 00       		.byte	0
 2405 01b7 00       		.byte	0
 2406 01b8 1B       		.uleb128 0x1b
 2407 01b9 21       		.uleb128 0x21
 2408 01ba 00       		.byte	0
 2409 01bb 49       		.uleb128 0x49
 2410 01bc 13       		.uleb128 0x13
 2411 01bd 2F       		.uleb128 0x2f
 2412 01be 0B       		.uleb128 0xb
 2413 01bf 00       		.byte	0
 2414 01c0 00       		.byte	0
 2415 01c1 00       		.byte	0
 2416              		.section	.debug_aranges,"",%progbits
 2417 0000 7C000000 		.4byte	0x7c
 2418 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 50


 2419 0006 00000000 		.4byte	.Ldebug_info0
 2420 000a 04       		.byte	0x4
 2421 000b 00       		.byte	0
 2422 000c 0000     		.2byte	0
 2423 000e 0000     		.2byte	0
 2424 0010 00000000 		.4byte	.LFB64
 2425 0014 D4000000 		.4byte	.LFE64-.LFB64
 2426 0018 00000000 		.4byte	.LFB65
 2427 001c 18000000 		.4byte	.LFE65-.LFB65
 2428 0020 00000000 		.4byte	.LFB66
 2429 0024 18000000 		.4byte	.LFE66-.LFB66
 2430 0028 00000000 		.4byte	.LFB67
 2431 002c 18000000 		.4byte	.LFE67-.LFB67
 2432 0030 00000000 		.4byte	.LFB68
 2433 0034 18000000 		.4byte	.LFE68-.LFB68
 2434 0038 00000000 		.4byte	.LFB69
 2435 003c 18000000 		.4byte	.LFE69-.LFB69
 2436 0040 00000000 		.4byte	.LFB70
 2437 0044 18000000 		.4byte	.LFE70-.LFB70
 2438 0048 00000000 		.4byte	.LFB71
 2439 004c 14000000 		.4byte	.LFE71-.LFB71
 2440 0050 00000000 		.4byte	.LFB72
 2441 0054 9C000000 		.4byte	.LFE72-.LFB72
 2442 0058 00000000 		.4byte	.LFB73
 2443 005c 54000000 		.4byte	.LFE73-.LFB73
 2444 0060 00000000 		.4byte	.LFB74
 2445 0064 48000000 		.4byte	.LFE74-.LFB74
 2446 0068 00000000 		.4byte	.LFB75
 2447 006c 00020000 		.4byte	.LFE75-.LFB75
 2448 0070 00000000 		.4byte	.LFB76
 2449 0074 7C000000 		.4byte	.LFE76-.LFB76
 2450 0078 00000000 		.4byte	0
 2451 007c 00000000 		.4byte	0
 2452              		.section	.debug_ranges,"",%progbits
 2453              	.Ldebug_ranges0:
 2454 0000 00000000 		.4byte	.LFB64
 2455 0004 D4000000 		.4byte	.LFE64
 2456 0008 00000000 		.4byte	.LFB65
 2457 000c 18000000 		.4byte	.LFE65
 2458 0010 00000000 		.4byte	.LFB66
 2459 0014 18000000 		.4byte	.LFE66
 2460 0018 00000000 		.4byte	.LFB67
 2461 001c 18000000 		.4byte	.LFE67
 2462 0020 00000000 		.4byte	.LFB68
 2463 0024 18000000 		.4byte	.LFE68
 2464 0028 00000000 		.4byte	.LFB69
 2465 002c 18000000 		.4byte	.LFE69
 2466 0030 00000000 		.4byte	.LFB70
 2467 0034 18000000 		.4byte	.LFE70
 2468 0038 00000000 		.4byte	.LFB71
 2469 003c 14000000 		.4byte	.LFE71
 2470 0040 00000000 		.4byte	.LFB72
 2471 0044 9C000000 		.4byte	.LFE72
 2472 0048 00000000 		.4byte	.LFB73
 2473 004c 54000000 		.4byte	.LFE73
 2474 0050 00000000 		.4byte	.LFB74
 2475 0054 48000000 		.4byte	.LFE74
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 51


 2476 0058 00000000 		.4byte	.LFB75
 2477 005c 00020000 		.4byte	.LFE75
 2478 0060 00000000 		.4byte	.LFB76
 2479 0064 7C000000 		.4byte	.LFE76
 2480 0068 00000000 		.4byte	0
 2481 006c 00000000 		.4byte	0
 2482              		.section	.debug_line,"",%progbits
 2483              	.Ldebug_line0:
 2484 0000 47030000 		.section	.debug_str,"MS",%progbits,1
 2484      02005601 
 2484      00000201 
 2484      FB0E0D00 
 2484      01010101 
 2485              	.LASF52:
 2486 0000 53365F44 		.ascii	"S6_DETECTED\000"
 2486      45544543 
 2486      54454400 
 2487              	.LASF40:
 2488 000c 5475726E 		.ascii	"TurnLeft\000"
 2488      4C656674 
 2488      00
 2489              	.LASF62:
 2490 0015 74735F65 		.ascii	"ts_enc\000"
 2490      6E6300
 2491              	.LASF71:
 2492 001c 666C6167 		.ascii	"flag_packet\000"
 2492      5F706163 
 2492      6B657400 
 2493              	.LASF46:
 2494 0028 77616974 		.ascii	"waitForTurn\000"
 2494      466F7254 
 2494      75726E00 
 2495              	.LASF90:
 2496 0034 433A5C55 		.ascii	"C:\\Users\\rshu284\\OneDrive - The University of Au"
 2496      73657273 
 2496      5C727368 
 2496      75323834 
 2496      5C4F6E65 
 2497 0064 636B6C61 		.ascii	"ckland\\Documents\\GitHub\\301-Robot\\psoc student "
 2497      6E645C44 
 2497      6F63756D 
 2497      656E7473 
 2497      5C476974 
 2498 0093 7061636B 		.ascii	"pack\\psoc_code_base\\CS301_Class.cydsn\000"
 2498      5C70736F 
 2498      635F636F 
 2498      64655F62 
 2498      6173655C 
 2499              	.LASF68:
 2500 00b9 666C6167 		.ascii	"flag_ts_speed\000"
 2500      5F74735F 
 2500      73706565 
 2500      6400
 2501              	.LASF34:
 2502 00c7 67325F78 		.ascii	"g2_xpos\000"
 2502      706F7300 
 2503              	.LASF2:
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 52


 2504 00cf 73686F72 		.ascii	"short int\000"
 2504      7420696E 
 2504      7400
 2505              	.LASF79:
 2506 00d9 73797374 		.ascii	"system_state\000"
 2506      656D5F73 
 2506      74617465 
 2506      00
 2507              	.LASF10:
 2508 00e6 73697A65 		.ascii	"sizetype\000"
 2508      74797065 
 2508      00
 2509              	.LASF92:
 2510 00ef 44697265 		.ascii	"DirectionState\000"
 2510      6374696F 
 2510      6E537461 
 2510      746500
 2511              	.LASF78:
 2512 00fe 75736242 		.ascii	"usbBuffer\000"
 2512      75666665 
 2512      7200
 2513              	.LASF88:
 2514 0108 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2514      43313120 
 2514      352E342E 
 2514      31203230 
 2514      31363036 
 2515 013b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2515      20726576 
 2515      6973696F 
 2515      6E203233 
 2515      37373135 
 2516 016e 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2516      66756E63 
 2516      74696F6E 
 2516      2D736563 
 2516      74696F6E 
 2517              	.LASF54:
 2518 0196 6D61696E 		.ascii	"main\000"
 2518      00
 2519              	.LASF50:
 2520 019b 53345F44 		.ascii	"S4_DETECTED\000"
 2520      45544543 
 2520      54454400 
 2521              	.LASF41:
 2522 01a7 41646A75 		.ascii	"AdjustToTheLeft\000"
 2522      7374546F 
 2522      5468654C 
 2522      65667400 
 2523              	.LASF15:
 2524 01b7 75696E74 		.ascii	"uint16\000"
 2524      313600
 2525              	.LASF22:
 2526 01be 696E6465 		.ascii	"index\000"
 2526      7800
 2527              	.LASF56:
 2528 01c4 73706565 		.ascii	"speedTimer\000"
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 53


 2528      6454696D 
 2528      657200
 2529              	.LASF18:
 2530 01cf 696E7431 		.ascii	"int16\000"
 2530      3600
 2531              	.LASF45:
 2532 01d5 48617264 		.ascii	"HardForward\000"
 2532      466F7277 
 2532      61726400 
 2533              	.LASF14:
 2534 01e1 75696E74 		.ascii	"uint8\000"
 2534      3800
 2535              	.LASF33:
 2536 01e7 67315F64 		.ascii	"g1_direction\000"
 2536      69726563 
 2536      74696F6E 
 2536      00
 2537              	.LASF76:
 2538 01f4 6C696E65 		.ascii	"line\000"
 2538      00
 2539              	.LASF19:
 2540 01f9 666C6F61 		.ascii	"float\000"
 2540      7400
 2541              	.LASF55:
 2542 01ff 6E657744 		.ascii	"newDistance\000"
 2542      69737461 
 2542      6E636500 
 2543              	.LASF6:
 2544 020b 6C6F6E67 		.ascii	"long long int\000"
 2544      206C6F6E 
 2544      6720696E 
 2544      7400
 2545              	.LASF17:
 2546 0219 696E7438 		.ascii	"int8\000"
 2546      00
 2547              	.LASF67:
 2548 021e 666C6167 		.ascii	"flag_ts_update\000"
 2548      5F74735F 
 2548      75706461 
 2548      746500
 2549              	.LASF35:
 2550 022d 67325F79 		.ascii	"g2_ypos\000"
 2550      706F7300 
 2551              	.LASF29:
 2552 0235 67305F64 		.ascii	"g0_direction\000"
 2552      69726563 
 2552      74696F6E 
 2552      00
 2553              	.LASF26:
 2554 0242 67305F78 		.ascii	"g0_xpos\000"
 2554      706F7300 
 2555              	.LASF4:
 2556 024a 6C6F6E67 		.ascii	"long int\000"
 2556      20696E74 
 2556      00
 2557              	.LASF57:
 2558 0253 43686563 		.ascii	"CheckSensorDirection\000"
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 54


 2558      6B53656E 
 2558      736F7244 
 2558      69726563 
 2558      74696F6E 
 2559              	.LASF48:
 2560 0268 53325F44 		.ascii	"S2_DETECTED\000"
 2560      45544543 
 2560      54454400 
 2561              	.LASF69:
 2562 0274 666C6167 		.ascii	"flag_ts_display\000"
 2562      5F74735F 
 2562      64697370 
 2562      6C617900 
 2563              	.LASF70:
 2564 0284 666C6167 		.ascii	"flag_rx\000"
 2564      5F727800 
 2565              	.LASF1:
 2566 028c 756E7369 		.ascii	"unsigned char\000"
 2566      676E6564 
 2566      20636861 
 2566      7200
 2567              	.LASF82:
 2568 029a 746F7461 		.ascii	"totalMilliseconds\000"
 2568      6C4D696C 
 2568      6C697365 
 2568      636F6E64 
 2568      7300
 2569              	.LASF77:
 2570 02ac 656E7472 		.ascii	"entry\000"
 2570      7900
 2571              	.LASF9:
 2572 02b2 6C6F6E67 		.ascii	"long double\000"
 2572      20646F75 
 2572      626C6500 
 2573              	.LASF81:
 2574 02be 70726576 		.ascii	"previousDirection\000"
 2574      696F7573 
 2574      44697265 
 2574      6374696F 
 2574      6E00
 2575              	.LASF83:
 2576 02d0 746F7461 		.ascii	"totalDistance\000"
 2576      6C446973 
 2576      74616E63 
 2576      6500
 2577              	.LASF87:
 2578 02de 6B656570 		.ascii	"keepLedOn\000"
 2578      4C65644F 
 2578      6E00
 2579              	.LASF28:
 2580 02e8 67305F73 		.ascii	"g0_speed\000"
 2580      70656564 
 2580      00
 2581              	.LASF73:
 2582 02f1 64617461 		.ascii	"dataready_flag\000"
 2582      72656164 
 2582      795F666C 
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 55


 2582      616700
 2583              	.LASF30:
 2584 0300 67315F78 		.ascii	"g1_xpos\000"
 2584      706F7300 
 2585              	.LASF0:
 2586 0308 7369676E 		.ascii	"signed char\000"
 2586      65642063 
 2586      68617200 
 2587              	.LASF13:
 2588 0314 696E7433 		.ascii	"int32_t\000"
 2588      325F7400 
 2589              	.LASF7:
 2590 031c 6C6F6E67 		.ascii	"long long unsigned int\000"
 2590      206C6F6E 
 2590      6720756E 
 2590      7369676E 
 2590      65642069 
 2591              	.LASF42:
 2592 0333 41646A75 		.ascii	"AdjustToTheRight\000"
 2592      7374546F 
 2592      54686552 
 2592      69676874 
 2592      00
 2593              	.LASF8:
 2594 0344 756E7369 		.ascii	"unsigned int\000"
 2594      676E6564 
 2594      20696E74 
 2594      00
 2595              	.LASF86:
 2596 0351 74696D65 		.ascii	"timerInt\000"
 2596      72496E74 
 2596      00
 2597              	.LASF72:
 2598 035a 666C6167 		.ascii	"flag_KB_string\000"
 2598      5F4B425F 
 2598      73747269 
 2598      6E6700
 2599              	.LASF60:
 2600 0369 53657452 		.ascii	"SetRobotMovement\000"
 2600      6F626F74 
 2600      4D6F7665 
 2600      6D656E74 
 2600      00
 2601              	.LASF53:
 2602 037a 54494D45 		.ascii	"TIMER_FINISH\000"
 2602      525F4649 
 2602      4E495348 
 2602      00
 2603              	.LASF36:
 2604 0387 67325F73 		.ascii	"g2_speed\000"
 2604      70656564 
 2604      00
 2605              	.LASF51:
 2606 0390 53355F44 		.ascii	"S5_DETECTED\000"
 2606      45544543 
 2606      54454400 
 2607              	.LASF3:
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 56


 2608 039c 73686F72 		.ascii	"short unsigned int\000"
 2608      7420756E 
 2608      7369676E 
 2608      65642069 
 2608      6E7400
 2609              	.LASF91:
 2610 03af 64617461 		.ascii	"data_main\000"
 2610      5F6D6169 
 2610      6E00
 2611              	.LASF59:
 2612 03b9 52657365 		.ascii	"ResetSensorFlags\000"
 2612      7453656E 
 2612      736F7246 
 2612      6C616773 
 2612      00
 2613              	.LASF11:
 2614 03ca 63686172 		.ascii	"char\000"
 2614      00
 2615              	.LASF38:
 2616 03cf 466F7277 		.ascii	"Forward\000"
 2616      61726400 
 2617              	.LASF85:
 2618 03d7 71756164 		.ascii	"quadDec2Count\000"
 2618      44656332 
 2618      436F756E 
 2618      7400
 2619              	.LASF31:
 2620 03e5 67315F79 		.ascii	"g1_ypos\000"
 2620      706F7300 
 2621              	.LASF37:
 2622 03ed 67325F64 		.ascii	"g2_direction\000"
 2622      69726563 
 2622      74696F6E 
 2622      00
 2623              	.LASF32:
 2624 03fa 67315F73 		.ascii	"g1_speed\000"
 2624      70656564 
 2624      00
 2625              	.LASF75:
 2626 0403 64697370 		.ascii	"displaystring\000"
 2626      6C617973 
 2626      7472696E 
 2626      6700
 2627              	.LASF23:
 2628 0411 726F626F 		.ascii	"robot_xpos\000"
 2628      745F7870 
 2628      6F7300
 2629              	.LASF39:
 2630 041c 5475726E 		.ascii	"TurnRight\000"
 2630      52696768 
 2630      7400
 2631              	.LASF84:
 2632 0426 62756666 		.ascii	"buffer\000"
 2632      657200
 2633              	.LASF16:
 2634 042d 75696E74 		.ascii	"uint32\000"
 2634      333200
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 57


 2635              	.LASF89:
 2636 0434 6D61696E 		.ascii	"main.c\000"
 2636      2E6300
 2637              	.LASF5:
 2638 043b 6C6F6E67 		.ascii	"long unsigned int\000"
 2638      20756E73 
 2638      69676E65 
 2638      6420696E 
 2638      7400
 2639              	.LASF20:
 2640 044d 646F7562 		.ascii	"double\000"
 2640      6C6500
 2641              	.LASF44:
 2642 0454 556E6B6E 		.ascii	"Unknown\000"
 2642      6F776E00 
 2643              	.LASF49:
 2644 045c 53335F44 		.ascii	"S3_DETECTED\000"
 2644      45544543 
 2644      54454400 
 2645              	.LASF64:
 2646 0468 74735F73 		.ascii	"ts_speed\000"
 2646      70656564 
 2646      00
 2647              	.LASF94:
 2648 0471 636F756E 		.ascii	"count\000"
 2648      7400
 2649              	.LASF66:
 2650 0477 666C6167 		.ascii	"flag_ts_enc\000"
 2650      5F74735F 
 2650      656E6300 
 2651              	.LASF12:
 2652 0483 5F5F696E 		.ascii	"__int32_t\000"
 2652      7433325F 
 2652      7400
 2653              	.LASF43:
 2654 048d 53746F70 		.ascii	"Stop\000"
 2654      00
 2655              	.LASF27:
 2656 0492 67305F79 		.ascii	"g0_ypos\000"
 2656      706F7300 
 2657              	.LASF65:
 2658 049a 74735F64 		.ascii	"ts_display\000"
 2658      6973706C 
 2658      617900
 2659              	.LASF63:
 2660 04a5 74735F75 		.ascii	"ts_update\000"
 2660      70646174 
 2660      6500
 2661              	.LASF93:
 2662 04af 71756164 		.ascii	"quadCountToRPM\000"
 2662      436F756E 
 2662      74546F52 
 2662      504D00
 2663              	.LASF74:
 2664 04be 666C6167 		.ascii	"flag_rf_transmission_active\000"
 2664      5F72665F 
 2664      7472616E 
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccheelDl.s 			page 58


 2664      736D6973 
 2664      73696F6E 
 2665              	.LASF24:
 2666 04da 726F626F 		.ascii	"robot_ypos\000"
 2666      745F7970 
 2666      6F7300
 2667              	.LASF61:
 2668 04e5 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2668      52784275 
 2668      66666572 
 2668      00
 2669              	.LASF80:
 2670 04f2 63757272 		.ascii	"currentDirection\000"
 2670      656E7444 
 2670      69726563 
 2670      74696F6E 
 2670      00
 2671              	.LASF58:
 2672 0503 64697265 		.ascii	"directionState\000"
 2672      6374696F 
 2672      6E537461 
 2672      746500
 2673              	.LASF21:
 2674 0512 72737369 		.ascii	"rssi\000"
 2674      00
 2675              	.LASF25:
 2676 0517 726F626F 		.ascii	"robot_orientation\000"
 2676      745F6F72 
 2676      69656E74 
 2676      6174696F 
 2676      6E00
 2677              	.LASF47:
 2678 0529 53315F44 		.ascii	"S1_DETECTED\000"
 2678      45544543 
 2678      54454400 
 2679              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
