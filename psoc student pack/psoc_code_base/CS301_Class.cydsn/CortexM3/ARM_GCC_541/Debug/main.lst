ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.comm	buffer,69,4
 107              		.global	quadDec2Count
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 3


 108              		.bss
 109 0012 0000     		.align	2
 110              		.type	quadDec2Count, %object
 111              		.size	quadDec2Count, 4
 112              	quadDec2Count:
 113 0014 00000000 		.space	4
 114              		.global	timerInt
 115              		.align	2
 116              		.type	timerInt, %object
 117              		.size	timerInt, 4
 118              	timerInt:
 119 0018 00000000 		.space	4
 120              		.global	turnCount
 121              		.align	1
 122              		.type	turnCount, %object
 123              		.size	turnCount, 2
 124              	turnCount:
 125 001c 0000     		.space	2
 126              		.global	maxTurnCount
 127              		.data
 128              		.align	1
 129              		.type	maxTurnCount, %object
 130              		.size	maxTurnCount, 2
 131              	maxTurnCount:
 132 0044 1900     		.short	25
 133              		.section	.text.speedTimer,"ax",%progbits
 134              		.align	2
 135              		.global	speedTimer
 136              		.thumb
 137              		.thumb_func
 138              		.type	speedTimer, %function
 139              	speedTimer:
 140              	.LFB64:
 141              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <string.h>
  19:main.c        **** #include <stdlib.h>
  20:main.c        **** #include <project.h>
  21:main.c        **** //* ========================================
  22:main.c        **** #include "defines.h"
  23:main.c        **** #include "vars.h"
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 4


  24:main.c        **** 
  25:main.c        **** //* ========================================
  26:main.c        **** void usbPutString(char *s);
  27:main.c        **** void usbPutChar(char c);
  28:main.c        **** void handle_usb();
  29:main.c        **** void changeDutyCycle(float percentage);
  30:main.c        **** void reverseRightWheel();
  31:main.c        **** void forwardRightWheel();
  32:main.c        **** void forwardLeftWheel();
  33:main.c        **** void reverseLeftWheel();
  34:main.c        **** void rotationClockwise();
  35:main.c        **** void rotationAntiClockwise();
  36:main.c        **** void directionForward();
  37:main.c        **** void directionBackward();
  38:main.c        **** void stopMoving();
  39:main.c        **** //* ========================================
  40:main.c        **** char buffer[69];
  41:main.c        **** int quadDec2Count = 0;
  42:main.c        **** int timerInt = 0;
  43:main.c        **** uint16 turnCount = 0;
  44:main.c        **** uint16 maxTurnCount = 25; // clock counts for one complete 90 deg turn
  45:main.c        **** 
  46:main.c        **** 
  47:main.c        **** CY_ISR (speedTimer) {
 142              		.loc 1 47 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 1, uses_anonymous_args = 0
 146 0000 80B5     		push	{r7, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 7, -8
 149              		.cfi_offset 14, -4
 150 0002 00AF     		add	r7, sp, #0
 151              		.cfi_def_cfa_register 7
  48:main.c        ****     timerInt = 1;
 152              		.loc 1 48 0
 153 0004 084B     		ldr	r3, .L2
 154 0006 0122     		movs	r2, #1
 155 0008 1A60     		str	r2, [r3]
  49:main.c        ****     // quadDec_M1 used for turning macros
  50:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 156              		.loc 1 50 0
 157 000a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 158 000e 0346     		mov	r3, r0
 159 0010 1A46     		mov	r2, r3
 160 0012 064B     		ldr	r3, .L2+4
 161 0014 1A60     		str	r2, [r3]
  51:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 162              		.loc 1 51 0
 163 0016 0020     		movs	r0, #0
 164 0018 FFF7FEFF 		bl	QuadDec_M2_SetCounter
  52:main.c        ****     QuadDec_M2_Start(); // restart counter
 165              		.loc 1 52 0
 166 001c FFF7FEFF 		bl	QuadDec_M2_Start
  53:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 167              		.loc 1 53 0
 168 0020 FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 5


  54:main.c        **** }
 169              		.loc 1 54 0
 170 0024 00BF     		nop
 171 0026 80BD     		pop	{r7, pc}
 172              	.L3:
 173              		.align	2
 174              	.L2:
 175 0028 00000000 		.word	timerInt
 176 002c 00000000 		.word	quadDec2Count
 177              		.cfi_endproc
 178              	.LFE64:
 179              		.size	speedTimer, .-speedTimer
 180              		.global	__aeabi_i2d
 181              		.global	__aeabi_ddiv
 182              		.global	__aeabi_d2f
 183              		.global	__aeabi_fmul
 184              		.global	__aeabi_f2iz
 185              		.section	.rodata
 186              		.align	2
 187              	.LC0:
 188 0000 256400   		.ascii	"%d\000"
 189              		.section	.text.main,"ax",%progbits
 190              		.align	2
 191              		.global	main
 192              		.thumb
 193              		.thumb_func
 194              		.type	main, %function
 195              	main:
 196              	.LFB65:
  55:main.c        **** int main()
  56:main.c        **** {
 197              		.loc 1 56 0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 8
 200              		@ frame_needed = 1, uses_anonymous_args = 0
 201 0000 90B5     		push	{r4, r7, lr}
 202              		.cfi_def_cfa_offset 12
 203              		.cfi_offset 4, -12
 204              		.cfi_offset 7, -8
 205              		.cfi_offset 14, -4
 206 0002 83B0     		sub	sp, sp, #12
 207              		.cfi_def_cfa_offset 24
 208 0004 00AF     		add	r7, sp, #0
 209              		.cfi_def_cfa_register 7
  57:main.c        **** // --------------------------------    
  58:main.c        **** // ----- INITIALIZATIONS ----------
  59:main.c        ****     CYGlobalIntEnable;
 210              		.loc 1 59 0
 211              		.syntax unified
 212              	@ 59 "main.c" 1
 213 0006 62B6     		CPSIE   i
 214              	@ 0 "" 2
  60:main.c        ****     // hardware task 2- start motor
  61:main.c        ****     //ADC_Timer_Start();
  62:main.c        ****     // start motor and PWMs
  63:main.c        ****     Clock_PWM_Start();
 215              		.loc 1 63 0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 6


 216              		.thumb
 217              		.syntax unified
 218 0008 FFF7FEFF 		bl	Clock_PWM_Start
  64:main.c        ****     PWM_1_Start();
 219              		.loc 1 64 0
 220 000c FFF7FEFF 		bl	PWM_1_Start
  65:main.c        ****     PWM_1_WritePeriod(100);
 221              		.loc 1 65 0
 222 0010 6420     		movs	r0, #100
 223 0012 FFF7FEFF 		bl	PWM_1_WritePeriod
  66:main.c        ****     PWM_2_Start();
 224              		.loc 1 66 0
 225 0016 FFF7FEFF 		bl	PWM_2_Start
  67:main.c        ****     PWM_2_WritePeriod(100);
 226              		.loc 1 67 0
 227 001a 6420     		movs	r0, #100
 228 001c FFF7FEFF 		bl	PWM_2_WritePeriod
  68:main.c        ****     
  69:main.c        ****     // start quadrature decoders
  70:main.c        ****     QuadDec_M1_Start();
 229              		.loc 1 70 0
 230 0020 FFF7FEFF 		bl	QuadDec_M1_Start
  71:main.c        ****     QuadDec_M2_Start();
 231              		.loc 1 71 0
 232 0024 FFF7FEFF 		bl	QuadDec_M2_Start
  72:main.c        ****     isr_speed_StartEx(speedTimer);
 233              		.loc 1 72 0
 234 0028 2348     		ldr	r0, .L8
 235 002a FFF7FEFF 		bl	isr_speed_StartEx
  73:main.c        ****     SpeedTimer_Start();
 236              		.loc 1 73 0
 237 002e FFF7FEFF 		bl	SpeedTimer_Start
  74:main.c        ****     SpeedClock_Start();
 238              		.loc 1 74 0
 239 0032 FFF7FEFF 		bl	SpeedClock_Start
  75:main.c        ****     
  76:main.c        ****     
  77:main.c        ****     
  78:main.c        **** // ------USB SETUP ----------------    
  79:main.c        **** #ifdef USE_USB    
  80:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 240              		.loc 1 80 0
 241 0036 0121     		movs	r1, #1
 242 0038 0020     		movs	r0, #0
 243 003a FFF7FEFF 		bl	USBUART_Start
  81:main.c        **** #endif        
  82:main.c        **** #ifdef USE_USB    
  83:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 244              		.loc 1 83 0
 245 003e 0121     		movs	r1, #1
 246 0040 0020     		movs	r0, #0
 247 0042 FFF7FEFF 		bl	USBUART_Start
  84:main.c        **** #endif        
  85:main.c        ****         
  86:main.c        ****     RF_BT_SELECT_Write(0);
 248              		.loc 1 86 0
 249 0046 0020     		movs	r0, #0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 7


 250 0048 FFF7FEFF 		bl	RF_BT_SELECT_Write
 251              	.L7:
  87:main.c        ****     
  88:main.c        ****     for(;;)
  89:main.c        ****     {
  90:main.c        ****         rotationClockwise();
 252              		.loc 1 90 0
 253 004c FFF7FEFF 		bl	rotationClockwise
  91:main.c        ****         //stopMoving();
  92:main.c        ****         //CyDelay(1000);
  93:main.c        ****         rotationAntiClockwise();
 254              		.loc 1 93 0
 255 0050 FFF7FEFF 		bl	rotationAntiClockwise
  94:main.c        ****         
  95:main.c        ****         
  96:main.c        ****         if(timerInt == 1) {
 256              		.loc 1 96 0
 257 0054 194B     		ldr	r3, .L8+4
 258 0056 1B68     		ldr	r3, [r3]
 259 0058 012B     		cmp	r3, #1
 260 005a 25D1     		bne	.L5
 261              	.LBB2:
  97:main.c        ****             // display RPM of M2
  98:main.c        ****             timerInt = 0; // reset flag
 262              		.loc 1 98 0
 263 005c 174B     		ldr	r3, .L8+4
 264 005e 0022     		movs	r2, #0
 265 0060 1A60     		str	r2, [r3]
  99:main.c        ****             float cps = quadDec2Count/57.00;
 266              		.loc 1 99 0
 267 0062 174B     		ldr	r3, .L8+8
 268 0064 1B68     		ldr	r3, [r3]
 269 0066 1846     		mov	r0, r3
 270 0068 FFF7FEFF 		bl	__aeabi_i2d
 271 006c 4FF00002 		mov	r2, #0
 272 0070 144B     		ldr	r3, .L8+12
 273 0072 FFF7FEFF 		bl	__aeabi_ddiv
 274 0076 0346     		mov	r3, r0
 275 0078 0C46     		mov	r4, r1
 276 007a 1846     		mov	r0, r3
 277 007c 2146     		mov	r1, r4
 278 007e FFF7FEFF 		bl	__aeabi_d2f
 279 0082 0346     		mov	r3, r0
 280 0084 7B60     		str	r3, [r7, #4]	@ float
 100:main.c        ****             int16 rpm = (int16)(cps*15);
 281              		.loc 1 100 0
 282 0086 1049     		ldr	r1, .L8+16
 283 0088 7868     		ldr	r0, [r7, #4]	@ float
 284 008a FFF7FEFF 		bl	__aeabi_fmul
 285 008e 0346     		mov	r3, r0
 286 0090 1846     		mov	r0, r3
 287 0092 FFF7FEFF 		bl	__aeabi_f2iz
 288 0096 0346     		mov	r3, r0
 289 0098 7B80     		strh	r3, [r7, #2]	@ movhi
 101:main.c        ****             sprintf(buffer, "%d", rpm);
 290              		.loc 1 101 0
 291 009a B7F90230 		ldrsh	r3, [r7, #2]
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 8


 292 009e 1A46     		mov	r2, r3
 293 00a0 0A49     		ldr	r1, .L8+20
 294 00a2 0B48     		ldr	r0, .L8+24
 295 00a4 FFF7FEFF 		bl	sprintf
 296              	.L5:
 297              	.LBE2:
 102:main.c        ****             //usbPutString(buffer);
 103:main.c        ****             //usbPutString("rpm ");
 104:main.c        ****         }
 105:main.c        ****         
 106:main.c        ****         if (flag_KB_string == 1)
 298              		.loc 1 106 0
 299 00a8 0A4B     		ldr	r3, .L8+28
 300 00aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 301 00ac 012B     		cmp	r3, #1
 302 00ae CDD1     		bne	.L7
 107:main.c        ****         {
 108:main.c        ****             //usbPutString(line);
 109:main.c        ****             flag_KB_string = 0;
 303              		.loc 1 109 0
 304 00b0 084B     		ldr	r3, .L8+28
 305 00b2 0022     		movs	r2, #0
 306 00b4 1A70     		strb	r2, [r3]
 110:main.c        **** 
 111:main.c        ****         }           
 112:main.c        ****     }   
 307              		.loc 1 112 0
 308 00b6 C9E7     		b	.L7
 309              	.L9:
 310              		.align	2
 311              	.L8:
 312 00b8 00000000 		.word	speedTimer
 313 00bc 00000000 		.word	timerInt
 314 00c0 00000000 		.word	quadDec2Count
 315 00c4 00804C40 		.word	1078755328
 316 00c8 00007041 		.word	1097859072
 317 00cc 00000000 		.word	.LC0
 318 00d0 00000000 		.word	buffer
 319 00d4 00000000 		.word	flag_KB_string
 320              		.cfi_endproc
 321              	.LFE65:
 322              		.size	main, .-main
 323              		.section	.text.stopMoving,"ax",%progbits
 324              		.align	2
 325              		.global	stopMoving
 326              		.thumb
 327              		.thumb_func
 328              		.type	stopMoving, %function
 329              	stopMoving:
 330              	.LFB66:
 113:main.c        **** }
 114:main.c        **** //* ========================================
 115:main.c        **** // stop moving
 116:main.c        **** void stopMoving() {
 331              		.loc 1 116 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 9


 334              		@ frame_needed = 1, uses_anonymous_args = 0
 335 0000 80B5     		push	{r7, lr}
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 7, -8
 338              		.cfi_offset 14, -4
 339 0002 00AF     		add	r7, sp, #0
 340              		.cfi_def_cfa_register 7
 117:main.c        ****     PWM_1_WriteCompare(50);
 341              		.loc 1 117 0
 342 0004 3220     		movs	r0, #50
 343 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 118:main.c        ****     PWM_2_WriteCompare(50);
 344              		.loc 1 118 0
 345 000a 3220     		movs	r0, #50
 346 000c FFF7FEFF 		bl	PWM_2_WriteCompare
 119:main.c        **** }
 347              		.loc 1 119 0
 348 0010 00BF     		nop
 349 0012 80BD     		pop	{r7, pc}
 350              		.cfi_endproc
 351              	.LFE66:
 352              		.size	stopMoving, .-stopMoving
 353              		.section	.text.rotationAntiClockwise,"ax",%progbits
 354              		.align	2
 355              		.global	rotationAntiClockwise
 356              		.thumb
 357              		.thumb_func
 358              		.type	rotationAntiClockwise, %function
 359              	rotationAntiClockwise:
 360              	.LFB67:
 120:main.c        **** 
 121:main.c        **** // rotate anticlockwise 90deg
 122:main.c        **** void rotationAntiClockwise() {
 361              		.loc 1 122 0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 8
 364              		@ frame_needed = 1, uses_anonymous_args = 0
 365 0000 80B5     		push	{r7, lr}
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 7, -8
 368              		.cfi_offset 14, -4
 369 0002 82B0     		sub	sp, sp, #8
 370              		.cfi_def_cfa_offset 16
 371 0004 00AF     		add	r7, sp, #0
 372              		.cfi_def_cfa_register 7
 123:main.c        ****     PWM_1_WriteCompare(35);
 373              		.loc 1 123 0
 374 0006 2320     		movs	r0, #35
 375 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
 124:main.c        ****     PWM_2_WriteCompare(35);
 376              		.loc 1 124 0
 377 000c 2320     		movs	r0, #35
 378 000e FFF7FEFF 		bl	PWM_2_WriteCompare
 125:main.c        ****     
 126:main.c        ****     int quadPulseCount = 0;
 379              		.loc 1 126 0
 380 0012 0023     		movs	r3, #0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 10


 381 0014 7B60     		str	r3, [r7, #4]
 127:main.c        ****     QuadDec_M1_SetCounter(0);
 382              		.loc 1 127 0
 383 0016 0020     		movs	r0, #0
 384 0018 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 128:main.c        ****     while(quadPulseCount > -105) {
 385              		.loc 1 128 0
 386 001c 03E0     		b	.L12
 387              	.L13:
 129:main.c        ****         quadPulseCount = QuadDec_M1_GetCounter();  
 388              		.loc 1 129 0
 389 001e FFF7FEFF 		bl	QuadDec_M1_GetCounter
 390 0022 0346     		mov	r3, r0
 391 0024 7B60     		str	r3, [r7, #4]
 392              	.L12:
 128:main.c        ****     while(quadPulseCount > -105) {
 393              		.loc 1 128 0
 394 0026 7B68     		ldr	r3, [r7, #4]
 395 0028 13F1680F 		cmn	r3, #104
 396 002c F7DA     		bge	.L13
 130:main.c        ****     }
 131:main.c        ****     QuadDec_M1_SetCounter(0);
 397              		.loc 1 131 0
 398 002e 0020     		movs	r0, #0
 399 0030 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 132:main.c        ****     //CyDelay(500);
 133:main.c        ****     //stopMoving(); // stop movement, ready for next instruction
 134:main.c        **** }
 400              		.loc 1 134 0
 401 0034 00BF     		nop
 402 0036 0837     		adds	r7, r7, #8
 403              		.cfi_def_cfa_offset 8
 404 0038 BD46     		mov	sp, r7
 405              		.cfi_def_cfa_register 13
 406              		@ sp needed
 407 003a 80BD     		pop	{r7, pc}
 408              		.cfi_endproc
 409              	.LFE67:
 410              		.size	rotationAntiClockwise, .-rotationAntiClockwise
 411              		.section	.text.rotationClockwise,"ax",%progbits
 412              		.align	2
 413              		.global	rotationClockwise
 414              		.thumb
 415              		.thumb_func
 416              		.type	rotationClockwise, %function
 417              	rotationClockwise:
 418              	.LFB68:
 135:main.c        **** 
 136:main.c        **** // rotate clockwise 90deg
 137:main.c        **** void rotationClockwise() {
 419              		.loc 1 137 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 8
 422              		@ frame_needed = 1, uses_anonymous_args = 0
 423 0000 80B5     		push	{r7, lr}
 424              		.cfi_def_cfa_offset 8
 425              		.cfi_offset 7, -8
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 11


 426              		.cfi_offset 14, -4
 427 0002 82B0     		sub	sp, sp, #8
 428              		.cfi_def_cfa_offset 16
 429 0004 00AF     		add	r7, sp, #0
 430              		.cfi_def_cfa_register 7
 138:main.c        ****     PWM_1_WriteCompare(65);
 431              		.loc 1 138 0
 432 0006 4120     		movs	r0, #65
 433 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
 139:main.c        ****     PWM_2_WriteCompare(65);
 434              		.loc 1 139 0
 435 000c 4120     		movs	r0, #65
 436 000e FFF7FEFF 		bl	PWM_2_WriteCompare
 140:main.c        ****     
 141:main.c        ****     int quadPulseCount = 0;
 437              		.loc 1 141 0
 438 0012 0023     		movs	r3, #0
 439 0014 7B60     		str	r3, [r7, #4]
 142:main.c        ****     QuadDec_M1_SetCounter(0);
 440              		.loc 1 142 0
 441 0016 0020     		movs	r0, #0
 442 0018 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 143:main.c        ****     while(quadPulseCount < 110) {
 443              		.loc 1 143 0
 444 001c 03E0     		b	.L15
 445              	.L16:
 144:main.c        ****         quadPulseCount = QuadDec_M1_GetCounter();
 446              		.loc 1 144 0
 447 001e FFF7FEFF 		bl	QuadDec_M1_GetCounter
 448 0022 0346     		mov	r3, r0
 449 0024 7B60     		str	r3, [r7, #4]
 450              	.L15:
 143:main.c        ****     while(quadPulseCount < 110) {
 451              		.loc 1 143 0
 452 0026 7B68     		ldr	r3, [r7, #4]
 453 0028 6D2B     		cmp	r3, #109
 454 002a F8DD     		ble	.L16
 145:main.c        ****     }
 146:main.c        ****     QuadDec_M1_SetCounter(0);
 455              		.loc 1 146 0
 456 002c 0020     		movs	r0, #0
 457 002e FFF7FEFF 		bl	QuadDec_M1_SetCounter
 147:main.c        ****     //CyDelay(500); // change to quadrature encoder pulses, rather than time delay
 148:main.c        ****     //stopMoving(); // stop movement, ready for next instruction
 149:main.c        **** }
 458              		.loc 1 149 0
 459 0032 00BF     		nop
 460 0034 0837     		adds	r7, r7, #8
 461              		.cfi_def_cfa_offset 8
 462 0036 BD46     		mov	sp, r7
 463              		.cfi_def_cfa_register 13
 464              		@ sp needed
 465 0038 80BD     		pop	{r7, pc}
 466              		.cfi_endproc
 467              	.LFE68:
 468              		.size	rotationClockwise, .-rotationClockwise
 469 003a 00BF     		.section	.text.directionForward,"ax",%progbits
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 12


 470              		.align	2
 471              		.global	directionForward
 472              		.thumb
 473              		.thumb_func
 474              		.type	directionForward, %function
 475              	directionForward:
 476              	.LFB69:
 150:main.c        **** 
 151:main.c        **** // move forward
 152:main.c        **** void directionForward() {
 477              		.loc 1 152 0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 1, uses_anonymous_args = 0
 481 0000 80B5     		push	{r7, lr}
 482              		.cfi_def_cfa_offset 8
 483              		.cfi_offset 7, -8
 484              		.cfi_offset 14, -4
 485 0002 00AF     		add	r7, sp, #0
 486              		.cfi_def_cfa_register 7
 153:main.c        ****     PWM_1_WriteCompare(75);
 487              		.loc 1 153 0
 488 0004 4B20     		movs	r0, #75
 489 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 154:main.c        ****     PWM_2_WriteCompare(25);
 490              		.loc 1 154 0
 491 000a 1920     		movs	r0, #25
 492 000c FFF7FEFF 		bl	PWM_2_WriteCompare
 155:main.c        **** }
 493              		.loc 1 155 0
 494 0010 00BF     		nop
 495 0012 80BD     		pop	{r7, pc}
 496              		.cfi_endproc
 497              	.LFE69:
 498              		.size	directionForward, .-directionForward
 499              		.section	.text.directionBackward,"ax",%progbits
 500              		.align	2
 501              		.global	directionBackward
 502              		.thumb
 503              		.thumb_func
 504              		.type	directionBackward, %function
 505              	directionBackward:
 506              	.LFB70:
 156:main.c        **** 
 157:main.c        **** // move backward
 158:main.c        **** void directionBackward() {
 507              		.loc 1 158 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 1, uses_anonymous_args = 0
 511 0000 80B5     		push	{r7, lr}
 512              		.cfi_def_cfa_offset 8
 513              		.cfi_offset 7, -8
 514              		.cfi_offset 14, -4
 515 0002 00AF     		add	r7, sp, #0
 516              		.cfi_def_cfa_register 7
 159:main.c        ****     PWM_1_WriteCompare(25);
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 13


 517              		.loc 1 159 0
 518 0004 1920     		movs	r0, #25
 519 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 160:main.c        ****     PWM_2_WriteCompare(75);
 520              		.loc 1 160 0
 521 000a 4B20     		movs	r0, #75
 522 000c FFF7FEFF 		bl	PWM_2_WriteCompare
 161:main.c        **** }
 523              		.loc 1 161 0
 524 0010 00BF     		nop
 525 0012 80BD     		pop	{r7, pc}
 526              		.cfi_endproc
 527              	.LFE70:
 528              		.size	directionBackward, .-directionBackward
 529              		.global	__aeabi_i2f
 530              		.section	.text.usbPutString,"ax",%progbits
 531              		.align	2
 532              		.global	usbPutString
 533              		.thumb
 534              		.thumb_func
 535              		.type	usbPutString, %function
 536              	usbPutString:
 537              	.LFB71:
 162:main.c        **** 
 163:main.c        **** 
 164:main.c        **** void usbPutString(char *s)
 165:main.c        **** {
 538              		.loc 1 165 0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 16
 541              		@ frame_needed = 1, uses_anonymous_args = 0
 542 0000 80B5     		push	{r7, lr}
 543              		.cfi_def_cfa_offset 8
 544              		.cfi_offset 7, -8
 545              		.cfi_offset 14, -4
 546 0002 84B0     		sub	sp, sp, #16
 547              		.cfi_def_cfa_offset 24
 548 0004 00AF     		add	r7, sp, #0
 549              		.cfi_def_cfa_register 7
 550 0006 7860     		str	r0, [r7, #4]
 166:main.c        **** // !! Assumes that *s is a string with allocated space >=64 chars     
 167:main.c        **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 168:main.c        **** //  length to 62 char (63rd char is a '!')
 169:main.c        **** 
 170:main.c        **** #ifdef USE_USB     
 171:main.c        ****     while (USBUART_CDCIsReady() == 0);
 551              		.loc 1 171 0
 552 0008 00BF     		nop
 553              	.L20:
 554              		.loc 1 171 0 is_stmt 0 discriminator 1
 555 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 556 000e 0346     		mov	r3, r0
 557 0010 002B     		cmp	r3, #0
 558 0012 FAD0     		beq	.L20
 172:main.c        ****     s[63]='\0';
 559              		.loc 1 172 0 is_stmt 1
 560 0014 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 14


 561 0016 3F33     		adds	r3, r3, #63
 562 0018 0022     		movs	r2, #0
 563 001a 1A70     		strb	r2, [r3]
 173:main.c        ****     s[62]='!';
 564              		.loc 1 173 0
 565 001c 7B68     		ldr	r3, [r7, #4]
 566 001e 3E33     		adds	r3, r3, #62
 567 0020 2122     		movs	r2, #33
 568 0022 1A70     		strb	r2, [r3]
 174:main.c        ****     
 175:main.c        ****     // processing for changing duty cycle- look for 'p'' ''xxx'
 176:main.c        ****     if(s[0] == 112 && s[1] == 32) {
 569              		.loc 1 176 0
 570 0024 7B68     		ldr	r3, [r7, #4]
 571 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 572 0028 702B     		cmp	r3, #112
 573 002a 23D1     		bne	.L21
 574              		.loc 1 176 0 is_stmt 0 discriminator 1
 575 002c 7B68     		ldr	r3, [r7, #4]
 576 002e 0133     		adds	r3, r3, #1
 577 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 578 0032 202B     		cmp	r3, #32
 579 0034 1ED1     		bne	.L21
 580              	.LBB3:
 177:main.c        ****         // get percentage and change duty cycle based on user input
 178:main.c        ****         char percentageArray[3] = {s[2], s[3], s[4]};  
 581              		.loc 1 178 0 is_stmt 1
 582 0036 7B68     		ldr	r3, [r7, #4]
 583 0038 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 584 003a 3B72     		strb	r3, [r7, #8]
 585 003c 7B68     		ldr	r3, [r7, #4]
 586 003e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 587 0040 7B72     		strb	r3, [r7, #9]
 588 0042 7B68     		ldr	r3, [r7, #4]
 589 0044 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 590 0046 BB72     		strb	r3, [r7, #10]
 179:main.c        ****         float percentage = (uint8) percentageArray[0] * 100 + (uint8) percentageArray[1] * 10 + (ui
 591              		.loc 1 179 0
 592 0048 3B7A     		ldrb	r3, [r7, #8]	@ zero_extendqisi2
 593 004a 1A46     		mov	r2, r3
 594 004c 6423     		movs	r3, #100
 595 004e 03FB02F2 		mul	r2, r3, r2
 596 0052 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 597 0054 1946     		mov	r1, r3
 598 0056 0B46     		mov	r3, r1
 599 0058 9B00     		lsls	r3, r3, #2
 600 005a 0B44     		add	r3, r3, r1
 601 005c 5B00     		lsls	r3, r3, #1
 602 005e 1344     		add	r3, r3, r2
 603 0060 BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 604 0062 1344     		add	r3, r3, r2
 605 0064 1846     		mov	r0, r3
 606 0066 FFF7FEFF 		bl	__aeabi_i2f
 607 006a 0346     		mov	r3, r0
 608 006c FB60     		str	r3, [r7, #12]	@ float
 180:main.c        ****         // concatenate elements as uint8
 181:main.c        ****         changeDutyCycle(percentage);
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 15


 609              		.loc 1 181 0
 610 006e F868     		ldr	r0, [r7, #12]	@ float
 611 0070 FFF7FEFF 		bl	changeDutyCycle
 612              	.L21:
 613              	.LBE3:
 182:main.c        ****     }
 183:main.c        ****     
 184:main.c        ****     USBUART_PutData((uint8*)s,strlen(s));
 614              		.loc 1 184 0
 615 0074 7868     		ldr	r0, [r7, #4]
 616 0076 FFF7FEFF 		bl	strlen
 617 007a 0346     		mov	r3, r0
 618 007c 9BB2     		uxth	r3, r3
 619 007e 1946     		mov	r1, r3
 620 0080 7868     		ldr	r0, [r7, #4]
 621 0082 FFF7FEFF 		bl	USBUART_PutData
 185:main.c        ****     
 186:main.c        **** #endif
 187:main.c        **** }
 622              		.loc 1 187 0
 623 0086 00BF     		nop
 624 0088 1037     		adds	r7, r7, #16
 625              		.cfi_def_cfa_offset 8
 626 008a BD46     		mov	sp, r7
 627              		.cfi_def_cfa_register 13
 628              		@ sp needed
 629 008c 80BD     		pop	{r7, pc}
 630              		.cfi_endproc
 631              	.LFE71:
 632              		.size	usbPutString, .-usbPutString
 633 008e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 634              		.align	2
 635              		.global	usbPutChar
 636              		.thumb
 637              		.thumb_func
 638              		.type	usbPutChar, %function
 639              	usbPutChar:
 640              	.LFB72:
 188:main.c        **** //* ========================================
 189:main.c        **** void usbPutChar(char c)
 190:main.c        **** {
 641              		.loc 1 190 0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 8
 644              		@ frame_needed = 1, uses_anonymous_args = 0
 645 0000 80B5     		push	{r7, lr}
 646              		.cfi_def_cfa_offset 8
 647              		.cfi_offset 7, -8
 648              		.cfi_offset 14, -4
 649 0002 82B0     		sub	sp, sp, #8
 650              		.cfi_def_cfa_offset 16
 651 0004 00AF     		add	r7, sp, #0
 652              		.cfi_def_cfa_register 7
 653 0006 0346     		mov	r3, r0
 654 0008 FB71     		strb	r3, [r7, #7]
 191:main.c        **** #ifdef USE_USB     
 192:main.c        ****     while (USBUART_CDCIsReady() == 0);
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 16


 655              		.loc 1 192 0
 656 000a 00BF     		nop
 657              	.L23:
 658              		.loc 1 192 0 is_stmt 0 discriminator 1
 659 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 660 0010 0346     		mov	r3, r0
 661 0012 002B     		cmp	r3, #0
 662 0014 FAD0     		beq	.L23
 193:main.c        ****     USBUART_PutChar(c);
 663              		.loc 1 193 0 is_stmt 1
 664 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 665 0018 1846     		mov	r0, r3
 666 001a FFF7FEFF 		bl	USBUART_PutChar
 194:main.c        **** #endif    
 195:main.c        **** }
 667              		.loc 1 195 0
 668 001e 00BF     		nop
 669 0020 0837     		adds	r7, r7, #8
 670              		.cfi_def_cfa_offset 8
 671 0022 BD46     		mov	sp, r7
 672              		.cfi_def_cfa_register 13
 673              		@ sp needed
 674 0024 80BD     		pop	{r7, pc}
 675              		.cfi_endproc
 676              	.LFE72:
 677              		.size	usbPutChar, .-usbPutChar
 678              		.global	__aeabi_f2d
 679              		.global	__aeabi_dmul
 680              		.global	__aeabi_f2uiz
 681 0026 00BF     		.section	.text.changeDutyCycle,"ax",%progbits
 682              		.align	2
 683              		.global	changeDutyCycle
 684              		.thumb
 685              		.thumb_func
 686              		.type	changeDutyCycle, %function
 687              	changeDutyCycle:
 688              	.LFB73:
 196:main.c        **** //* ========================================
 197:main.c        **** // command interpreter to alter duty cycle via terminal
 198:main.c        **** void changeDutyCycle(float percentage) 
 199:main.c        **** {
 689              		.loc 1 199 0
 690              		.cfi_startproc
 691              		@ args = 0, pretend = 0, frame = 16
 692              		@ frame_needed = 1, uses_anonymous_args = 0
 693 0000 B0B5     		push	{r4, r5, r7, lr}
 694              		.cfi_def_cfa_offset 16
 695              		.cfi_offset 4, -16
 696              		.cfi_offset 5, -12
 697              		.cfi_offset 7, -8
 698              		.cfi_offset 14, -4
 699 0002 84B0     		sub	sp, sp, #16
 700              		.cfi_def_cfa_offset 32
 701 0004 00AF     		add	r7, sp, #0
 702              		.cfi_def_cfa_register 7
 703 0006 7860     		str	r0, [r7, #4]	@ float
 200:main.c        ****     // perform calculaton
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 17


 201:main.c        ****     // get period
 202:main.c        ****     float period = 255;
 704              		.loc 1 202 0
 705 0008 154B     		ldr	r3, .L25
 706 000a FB60     		str	r3, [r7, #12]	@ float
 203:main.c        ****     // changes the compare value to change duty cycle
 204:main.c        ****     float newPeriod = ((percentage/100.0) * period);
 707              		.loc 1 204 0
 708 000c 7868     		ldr	r0, [r7, #4]	@ float
 709 000e FFF7FEFF 		bl	__aeabi_f2d
 710 0012 4FF00002 		mov	r2, #0
 711 0016 134B     		ldr	r3, .L25+4
 712 0018 FFF7FEFF 		bl	__aeabi_ddiv
 713 001c 0346     		mov	r3, r0
 714 001e 0C46     		mov	r4, r1
 715 0020 2546     		mov	r5, r4
 716 0022 1C46     		mov	r4, r3
 717 0024 F868     		ldr	r0, [r7, #12]	@ float
 718 0026 FFF7FEFF 		bl	__aeabi_f2d
 719 002a 0246     		mov	r2, r0
 720 002c 0B46     		mov	r3, r1
 721 002e 2046     		mov	r0, r4
 722 0030 2946     		mov	r1, r5
 723 0032 FFF7FEFF 		bl	__aeabi_dmul
 724 0036 0346     		mov	r3, r0
 725 0038 0C46     		mov	r4, r1
 726 003a 1846     		mov	r0, r3
 727 003c 2146     		mov	r1, r4
 728 003e FFF7FEFF 		bl	__aeabi_d2f
 729 0042 0346     		mov	r3, r0
 730 0044 BB60     		str	r3, [r7, #8]	@ float
 205:main.c        ****     PWM_1_WriteCompare((uint8)newPeriod); 
 731              		.loc 1 205 0
 732 0046 B868     		ldr	r0, [r7, #8]	@ float
 733 0048 FFF7FEFF 		bl	__aeabi_f2uiz
 734 004c 0346     		mov	r3, r0
 735 004e DBB2     		uxtb	r3, r3
 736 0050 1846     		mov	r0, r3
 737 0052 FFF7FEFF 		bl	PWM_1_WriteCompare
 206:main.c        ****    
 207:main.c        **** }
 738              		.loc 1 207 0
 739 0056 00BF     		nop
 740 0058 1037     		adds	r7, r7, #16
 741              		.cfi_def_cfa_offset 16
 742 005a BD46     		mov	sp, r7
 743              		.cfi_def_cfa_register 13
 744              		@ sp needed
 745 005c B0BD     		pop	{r4, r5, r7, pc}
 746              	.L26:
 747 005e 00BF     		.align	2
 748              	.L25:
 749 0060 00007F43 		.word	1132396544
 750 0064 00005940 		.word	1079574528
 751              		.cfi_endproc
 752              	.LFE73:
 753              		.size	changeDutyCycle, .-changeDutyCycle
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 18


 754              		.section	.text.handle_usb,"ax",%progbits
 755              		.align	2
 756              		.global	handle_usb
 757              		.thumb
 758              		.thumb_func
 759              		.type	handle_usb, %function
 760              	handle_usb:
 761              	.LFB74:
 208:main.c        **** //* ========================================
 209:main.c        **** void handle_usb()
 210:main.c        **** {
 762              		.loc 1 210 0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 8
 765              		@ frame_needed = 1, uses_anonymous_args = 0
 766 0000 80B5     		push	{r7, lr}
 767              		.cfi_def_cfa_offset 8
 768              		.cfi_offset 7, -8
 769              		.cfi_offset 14, -4
 770 0002 82B0     		sub	sp, sp, #8
 771              		.cfi_def_cfa_offset 16
 772 0004 00AF     		add	r7, sp, #0
 773              		.cfi_def_cfa_register 7
 211:main.c        ****     // handles input at terminal, echos it back to the terminal
 212:main.c        ****     // turn echo OFF, key emulation: only CR
 213:main.c        ****     // entered string is made available in 'line' and 'flag_KB_string' is set
 214:main.c        ****     
 215:main.c        ****     static uint8 usbStarted = FALSE;
 216:main.c        ****     static uint16 usbBufCount = 0;
 217:main.c        ****     uint8 c; 
 218:main.c        ****     
 219:main.c        **** 
 220:main.c        ****     if (!usbStarted)
 774              		.loc 1 220 0
 775 0006 2B4B     		ldr	r3, .L37
 776 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 777 000a 002B     		cmp	r3, #0
 778 000c 0AD1     		bne	.L28
 221:main.c        ****     {
 222:main.c        ****         if (USBUART_GetConfiguration())
 779              		.loc 1 222 0
 780 000e FFF7FEFF 		bl	USBUART_GetConfiguration
 781 0012 0346     		mov	r3, r0
 782 0014 002B     		cmp	r3, #0
 783 0016 49D0     		beq	.L36
 223:main.c        ****         {
 224:main.c        ****             USBUART_CDC_Init();
 784              		.loc 1 224 0
 785 0018 FFF7FEFF 		bl	USBUART_CDC_Init
 225:main.c        ****             usbStarted = TRUE;
 786              		.loc 1 225 0
 787 001c 254B     		ldr	r3, .L37
 788 001e 0122     		movs	r2, #1
 789 0020 1A70     		strb	r2, [r3]
 226:main.c        ****         }
 227:main.c        ****     }
 228:main.c        ****     else
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 19


 229:main.c        ****     {
 230:main.c        ****         if (USBUART_DataIsReady() != 0)
 231:main.c        ****         {  
 232:main.c        ****             c = USBUART_GetChar();
 233:main.c        **** 
 234:main.c        ****             if ((c == 13) || (c == 10))
 235:main.c        ****             {
 236:main.c        **** //                if (usbBufCount > 0)
 237:main.c        ****                 {
 238:main.c        ****                     entry[usbBufCount]= '\0';
 239:main.c        ****                     strcpy(line,entry);
 240:main.c        ****                     usbBufCount = 0;
 241:main.c        ****                     flag_KB_string = 1;
 242:main.c        ****                 }
 243:main.c        ****             }
 244:main.c        ****             else 
 245:main.c        ****             {
 246:main.c        ****                 if (((c == CHAR_BACKSP) || (c == CHAR_DEL) ) && (usbBufCount > 0) )
 247:main.c        ****                     usbBufCount--;
 248:main.c        ****                 else
 249:main.c        ****                 {
 250:main.c        ****                     if (usbBufCount > (BUF_SIZE-2) ) // one less else strtok triggers a crash
 251:main.c        ****                     {
 252:main.c        ****                        USBUART_PutChar('!');        
 253:main.c        ****                     }
 254:main.c        ****                     else
 255:main.c        ****                         entry[usbBufCount++] = c;  
 256:main.c        ****                 }  
 257:main.c        ****             }
 258:main.c        ****         }
 259:main.c        ****     }    
 260:main.c        **** }
 790              		.loc 1 260 0
 791 0022 43E0     		b	.L36
 792              	.L28:
 230:main.c        ****         {  
 793              		.loc 1 230 0
 794 0024 FFF7FEFF 		bl	USBUART_DataIsReady
 795 0028 0346     		mov	r3, r0
 796 002a 002B     		cmp	r3, #0
 797 002c 3ED0     		beq	.L36
 232:main.c        **** 
 798              		.loc 1 232 0
 799 002e FFF7FEFF 		bl	USBUART_GetChar
 800 0032 0346     		mov	r3, r0
 801 0034 FB71     		strb	r3, [r7, #7]
 234:main.c        ****             {
 802              		.loc 1 234 0
 803 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 804 0038 0D2B     		cmp	r3, #13
 805 003a 02D0     		beq	.L31
 234:main.c        ****             {
 806              		.loc 1 234 0 is_stmt 0 discriminator 1
 807 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 808 003e 0A2B     		cmp	r3, #10
 809 0040 10D1     		bne	.L32
 810              	.L31:
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 20


 238:main.c        ****                     strcpy(line,entry);
 811              		.loc 1 238 0 is_stmt 1
 812 0042 1D4B     		ldr	r3, .L37+4
 813 0044 1B88     		ldrh	r3, [r3]
 814 0046 1A46     		mov	r2, r3
 815 0048 1C4B     		ldr	r3, .L37+8
 816 004a 0021     		movs	r1, #0
 817 004c 9954     		strb	r1, [r3, r2]
 239:main.c        ****                     usbBufCount = 0;
 818              		.loc 1 239 0
 819 004e 1B49     		ldr	r1, .L37+8
 820 0050 1B48     		ldr	r0, .L37+12
 821 0052 FFF7FEFF 		bl	strcpy
 240:main.c        ****                     flag_KB_string = 1;
 822              		.loc 1 240 0
 823 0056 184B     		ldr	r3, .L37+4
 824 0058 0022     		movs	r2, #0
 825 005a 1A80     		strh	r2, [r3]	@ movhi
 241:main.c        ****                 }
 826              		.loc 1 241 0
 827 005c 194B     		ldr	r3, .L37+16
 828 005e 0122     		movs	r2, #1
 829 0060 1A70     		strb	r2, [r3]
 830 0062 23E0     		b	.L30
 831              	.L32:
 246:main.c        ****                     usbBufCount--;
 832              		.loc 1 246 0
 833 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 834 0066 082B     		cmp	r3, #8
 835 0068 02D0     		beq	.L33
 246:main.c        ****                     usbBufCount--;
 836              		.loc 1 246 0 is_stmt 0 discriminator 2
 837 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 838 006c 7F2B     		cmp	r3, #127
 839 006e 0AD1     		bne	.L34
 840              	.L33:
 246:main.c        ****                     usbBufCount--;
 841              		.loc 1 246 0 discriminator 3
 842 0070 114B     		ldr	r3, .L37+4
 843 0072 1B88     		ldrh	r3, [r3]
 844 0074 002B     		cmp	r3, #0
 845 0076 06D0     		beq	.L34
 247:main.c        ****                 else
 846              		.loc 1 247 0 is_stmt 1
 847 0078 0F4B     		ldr	r3, .L37+4
 848 007a 1B88     		ldrh	r3, [r3]
 849 007c 013B     		subs	r3, r3, #1
 850 007e 9AB2     		uxth	r2, r3
 851 0080 0D4B     		ldr	r3, .L37+4
 852 0082 1A80     		strh	r2, [r3]	@ movhi
 853 0084 12E0     		b	.L30
 854              	.L34:
 250:main.c        ****                     {
 855              		.loc 1 250 0
 856 0086 0C4B     		ldr	r3, .L37+4
 857 0088 1B88     		ldrh	r3, [r3]
 858 008a 3E2B     		cmp	r3, #62
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 21


 859 008c 03D9     		bls	.L35
 252:main.c        ****                     }
 860              		.loc 1 252 0
 861 008e 2120     		movs	r0, #33
 862 0090 FFF7FEFF 		bl	USBUART_PutChar
 863              		.loc 1 260 0
 864 0094 0AE0     		b	.L36
 865              	.L35:
 255:main.c        ****                 }  
 866              		.loc 1 255 0
 867 0096 084B     		ldr	r3, .L37+4
 868 0098 1B88     		ldrh	r3, [r3]
 869 009a 5A1C     		adds	r2, r3, #1
 870 009c 91B2     		uxth	r1, r2
 871 009e 064A     		ldr	r2, .L37+4
 872 00a0 1180     		strh	r1, [r2]	@ movhi
 873 00a2 1946     		mov	r1, r3
 874 00a4 054A     		ldr	r2, .L37+8
 875 00a6 FB79     		ldrb	r3, [r7, #7]
 876 00a8 5354     		strb	r3, [r2, r1]
 877              		.loc 1 260 0
 878 00aa FFE7     		b	.L36
 879              	.L30:
 880              	.L36:
 881 00ac 00BF     		nop
 882 00ae 0837     		adds	r7, r7, #8
 883              		.cfi_def_cfa_offset 8
 884 00b0 BD46     		mov	sp, r7
 885              		.cfi_def_cfa_register 13
 886              		@ sp needed
 887 00b2 80BD     		pop	{r7, pc}
 888              	.L38:
 889              		.align	2
 890              	.L37:
 891 00b4 1E000000 		.word	usbStarted.8262
 892 00b8 20000000 		.word	usbBufCount.8263
 893 00bc 00000000 		.word	entry
 894 00c0 00000000 		.word	line
 895 00c4 00000000 		.word	flag_KB_string
 896              		.cfi_endproc
 897              	.LFE74:
 898              		.size	handle_usb, .-handle_usb
 899              		.bss
 900              	usbStarted.8262:
 901 001e 00       		.space	1
 902 001f 00       		.align	1
 903              	usbBufCount.8263:
 904 0020 0000     		.space	2
 905              		.text
 906              	.Letext0:
 907              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 908              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 909              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 910              		.file 5 "vars.h"
 911              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 912              		.section	.debug_info,"",%progbits
 913              	.Ldebug_info0:
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 22


 914 0000 52050000 		.4byte	0x552
 915 0004 0400     		.2byte	0x4
 916 0006 00000000 		.4byte	.Ldebug_abbrev0
 917 000a 04       		.byte	0x4
 918 000b 01       		.uleb128 0x1
 919 000c EF000000 		.4byte	.LASF78
 920 0010 0C       		.byte	0xc
 921 0011 AE030000 		.4byte	.LASF79
 922 0015 7C000000 		.4byte	.LASF80
 923 0019 00000000 		.4byte	.Ldebug_ranges0+0
 924 001d 00000000 		.4byte	0
 925 0021 00000000 		.4byte	.Ldebug_line0
 926 0025 02       		.uleb128 0x2
 927 0026 01       		.byte	0x1
 928 0027 06       		.byte	0x6
 929 0028 EF010000 		.4byte	.LASF0
 930 002c 02       		.uleb128 0x2
 931 002d 01       		.byte	0x1
 932 002e 08       		.byte	0x8
 933 002f 92020000 		.4byte	.LASF1
 934 0033 02       		.uleb128 0x2
 935 0034 02       		.byte	0x2
 936 0035 05       		.byte	0x5
 937 0036 5C000000 		.4byte	.LASF2
 938 003a 02       		.uleb128 0x2
 939 003b 02       		.byte	0x2
 940 003c 07       		.byte	0x7
 941 003d 29030000 		.4byte	.LASF3
 942 0041 03       		.uleb128 0x3
 943 0042 E7030000 		.4byte	.LASF12
 944 0046 02       		.byte	0x2
 945 0047 3F       		.byte	0x3f
 946 0048 4C000000 		.4byte	0x4c
 947 004c 02       		.uleb128 0x2
 948 004d 04       		.byte	0x4
 949 004e 05       		.byte	0x5
 950 004f 58020000 		.4byte	.LASF4
 951 0053 02       		.uleb128 0x2
 952 0054 04       		.byte	0x4
 953 0055 07       		.byte	0x7
 954 0056 B5030000 		.4byte	.LASF5
 955 005a 02       		.uleb128 0x2
 956 005b 08       		.byte	0x8
 957 005c 05       		.byte	0x5
 958 005d 09020000 		.4byte	.LASF6
 959 0061 02       		.uleb128 0x2
 960 0062 08       		.byte	0x8
 961 0063 07       		.byte	0x7
 962 0064 D8020000 		.4byte	.LASF7
 963 0068 04       		.uleb128 0x4
 964 0069 04       		.byte	0x4
 965 006a 05       		.byte	0x5
 966 006b 696E7400 		.ascii	"int\000"
 967 006f 02       		.uleb128 0x2
 968 0070 04       		.byte	0x4
 969 0071 07       		.byte	0x7
 970 0072 EF020000 		.4byte	.LASF8
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 23


 971 0076 02       		.uleb128 0x2
 972 0077 08       		.byte	0x8
 973 0078 04       		.byte	0x4
 974 0079 86020000 		.4byte	.LASF9
 975 007d 02       		.uleb128 0x2
 976 007e 04       		.byte	0x4
 977 007f 07       		.byte	0x7
 978 0080 73000000 		.4byte	.LASF10
 979 0084 05       		.uleb128 0x5
 980 0085 04       		.byte	0x4
 981 0086 8A000000 		.4byte	0x8a
 982 008a 02       		.uleb128 0x2
 983 008b 01       		.byte	0x1
 984 008c 08       		.byte	0x8
 985 008d 50030000 		.4byte	.LASF11
 986 0091 03       		.uleb128 0x3
 987 0092 D0020000 		.4byte	.LASF13
 988 0096 03       		.byte	0x3
 989 0097 2C       		.byte	0x2c
 990 0098 41000000 		.4byte	0x41
 991 009c 06       		.uleb128 0x6
 992 009d D7010000 		.4byte	.LASF14
 993 00a1 04       		.byte	0x4
 994 00a2 E901     		.2byte	0x1e9
 995 00a4 2C000000 		.4byte	0x2c
 996 00a8 06       		.uleb128 0x6
 997 00a9 B9010000 		.4byte	.LASF15
 998 00ad 04       		.byte	0x4
 999 00ae EA01     		.2byte	0x1ea
 1000 00b0 3A000000 		.4byte	0x3a
 1001 00b4 06       		.uleb128 0x6
 1002 00b5 24020000 		.4byte	.LASF16
 1003 00b9 04       		.byte	0x4
 1004 00ba EC01     		.2byte	0x1ec
 1005 00bc 25000000 		.4byte	0x25
 1006 00c0 06       		.uleb128 0x6
 1007 00c1 D1010000 		.4byte	.LASF17
 1008 00c5 04       		.byte	0x4
 1009 00c6 ED01     		.2byte	0x1ed
 1010 00c8 33000000 		.4byte	0x33
 1011 00cc 02       		.uleb128 0x2
 1012 00cd 04       		.byte	0x4
 1013 00ce 04       		.byte	0x4
 1014 00cf FB010000 		.4byte	.LASF18
 1015 00d3 02       		.uleb128 0x2
 1016 00d4 08       		.byte	0x8
 1017 00d5 04       		.byte	0x4
 1018 00d6 23000000 		.4byte	.LASF19
 1019 00da 07       		.uleb128 0x7
 1020 00db 3C030000 		.4byte	.LASF81
 1021 00df 20       		.byte	0x20
 1022 00e0 05       		.byte	0x5
 1023 00e1 29       		.byte	0x29
 1024 00e2 B3010000 		.4byte	0x1b3
 1025 00e6 08       		.uleb128 0x8
 1026 00e7 6A040000 		.4byte	.LASF20
 1027 00eb 05       		.byte	0x5
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 24


 1028 00ec 2A       		.byte	0x2a
 1029 00ed B4000000 		.4byte	0xb4
 1030 00f1 00       		.byte	0
 1031 00f2 08       		.uleb128 0x8
 1032 00f3 C0010000 		.4byte	.LASF21
 1033 00f7 05       		.byte	0x5
 1034 00f8 2B       		.byte	0x2b
 1035 00f9 9C000000 		.4byte	0x9c
 1036 00fd 01       		.byte	0x1
 1037 00fe 08       		.uleb128 0x8
 1038 00ff 55030000 		.4byte	.LASF22
 1039 0103 05       		.byte	0x5
 1040 0104 2C       		.byte	0x2c
 1041 0105 C0000000 		.4byte	0xc0
 1042 0109 02       		.byte	0x2
 1043 010a 08       		.uleb128 0x8
 1044 010b 35040000 		.4byte	.LASF23
 1045 010f 05       		.byte	0x5
 1046 0110 2D       		.byte	0x2d
 1047 0111 C0000000 		.4byte	0xc0
 1048 0115 04       		.byte	0x4
 1049 0116 08       		.uleb128 0x8
 1050 0117 6F040000 		.4byte	.LASF24
 1051 011b 05       		.byte	0x5
 1052 011c 2E       		.byte	0x2e
 1053 011d C0000000 		.4byte	0xc0
 1054 0121 06       		.byte	0x6
 1055 0122 08       		.uleb128 0x8
 1056 0123 50020000 		.4byte	.LASF25
 1057 0127 05       		.byte	0x5
 1058 0128 2F       		.byte	0x2f
 1059 0129 C0000000 		.4byte	0xc0
 1060 012d 08       		.byte	0x8
 1061 012e 08       		.uleb128 0x8
 1062 012f F1030000 		.4byte	.LASF26
 1063 0133 05       		.byte	0x5
 1064 0134 30       		.byte	0x30
 1065 0135 C0000000 		.4byte	0xc0
 1066 0139 0A       		.byte	0xa
 1067 013a 08       		.uleb128 0x8
 1068 013b A0020000 		.4byte	.LASF27
 1069 013f 05       		.byte	0x5
 1070 0140 31       		.byte	0x31
 1071 0141 C0000000 		.4byte	0xc0
 1072 0145 0C       		.byte	0xc
 1073 0146 08       		.uleb128 0x8
 1074 0147 43020000 		.4byte	.LASF28
 1075 014b 05       		.byte	0x5
 1076 014c 32       		.byte	0x32
 1077 014d C0000000 		.4byte	0xc0
 1078 0151 0E       		.byte	0xe
 1079 0152 08       		.uleb128 0x8
 1080 0153 B8020000 		.4byte	.LASF29
 1081 0157 05       		.byte	0x5
 1082 0158 33       		.byte	0x33
 1083 0159 C0000000 		.4byte	0xc0
 1084 015d 10       		.byte	0x10
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 25


 1085 015e 08       		.uleb128 0x8
 1086 015f 6E030000 		.4byte	.LASF30
 1087 0163 05       		.byte	0x5
 1088 0164 34       		.byte	0x34
 1089 0165 C0000000 		.4byte	0xc0
 1090 0169 12       		.byte	0x12
 1091 016a 08       		.uleb128 0x8
 1092 016b 83030000 		.4byte	.LASF31
 1093 016f 05       		.byte	0x5
 1094 0170 35       		.byte	0x35
 1095 0171 C0000000 		.4byte	0xc0
 1096 0175 14       		.byte	0x14
 1097 0176 08       		.uleb128 0x8
 1098 0177 DD010000 		.4byte	.LASF32
 1099 017b 05       		.byte	0x5
 1100 017c 36       		.byte	0x36
 1101 017d C0000000 		.4byte	0xc0
 1102 0181 16       		.byte	0x16
 1103 0182 08       		.uleb128 0x8
 1104 0183 54000000 		.4byte	.LASF33
 1105 0187 05       		.byte	0x5
 1106 0188 37       		.byte	0x37
 1107 0189 C0000000 		.4byte	0xc0
 1108 018d 18       		.byte	0x18
 1109 018e 08       		.uleb128 0x8
 1110 018f 01020000 		.4byte	.LASF34
 1111 0193 05       		.byte	0x5
 1112 0194 38       		.byte	0x38
 1113 0195 C0000000 		.4byte	0xc0
 1114 0199 1A       		.byte	0x1a
 1115 019a 08       		.uleb128 0x8
 1116 019b 17030000 		.4byte	.LASF35
 1117 019f 05       		.byte	0x5
 1118 01a0 39       		.byte	0x39
 1119 01a1 C0000000 		.4byte	0xc0
 1120 01a5 1C       		.byte	0x1c
 1121 01a6 08       		.uleb128 0x8
 1122 01a7 76030000 		.4byte	.LASF36
 1123 01ab 05       		.byte	0x5
 1124 01ac 3A       		.byte	0x3a
 1125 01ad C0000000 		.4byte	0xc0
 1126 01b1 1E       		.byte	0x1e
 1127 01b2 00       		.byte	0
 1128 01b3 09       		.uleb128 0x9
 1129 01b4 C6010000 		.4byte	.LASF82
 1130 01b8 01       		.byte	0x1
 1131 01b9 2F       		.byte	0x2f
 1132 01ba 00000000 		.4byte	.LFB64
 1133 01be 30000000 		.4byte	.LFE64-.LFB64
 1134 01c2 01       		.uleb128 0x1
 1135 01c3 9C       		.byte	0x9c
 1136 01c4 0A       		.uleb128 0xa
 1137 01c5 7D010000 		.4byte	.LASF43
 1138 01c9 01       		.byte	0x1
 1139 01ca 37       		.byte	0x37
 1140 01cb 68000000 		.4byte	0x68
 1141 01cf 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 26


 1142 01d3 D8000000 		.4byte	.LFE65-.LFB65
 1143 01d7 01       		.uleb128 0x1
 1144 01d8 9C       		.byte	0x9c
 1145 01d9 04020000 		.4byte	0x204
 1146 01dd 0B       		.uleb128 0xb
 1147 01de 5C000000 		.4byte	.LBB2
 1148 01e2 4C000000 		.4byte	.LBE2-.LBB2
 1149 01e6 0C       		.uleb128 0xc
 1150 01e7 63707300 		.ascii	"cps\000"
 1151 01eb 01       		.byte	0x1
 1152 01ec 63       		.byte	0x63
 1153 01ed CC000000 		.4byte	0xcc
 1154 01f1 02       		.uleb128 0x2
 1155 01f2 91       		.byte	0x91
 1156 01f3 6C       		.sleb128 -20
 1157 01f4 0C       		.uleb128 0xc
 1158 01f5 72706D00 		.ascii	"rpm\000"
 1159 01f9 01       		.byte	0x1
 1160 01fa 64       		.byte	0x64
 1161 01fb C0000000 		.4byte	0xc0
 1162 01ff 02       		.uleb128 0x2
 1163 0200 91       		.byte	0x91
 1164 0201 6A       		.sleb128 -22
 1165 0202 00       		.byte	0
 1166 0203 00       		.byte	0
 1167 0204 0D       		.uleb128 0xd
 1168 0205 40040000 		.4byte	.LASF40
 1169 0209 01       		.byte	0x1
 1170 020a 74       		.byte	0x74
 1171 020b 00000000 		.4byte	.LFB66
 1172 020f 14000000 		.4byte	.LFE66-.LFB66
 1173 0213 01       		.uleb128 0x1
 1174 0214 9C       		.byte	0x9c
 1175 0215 0E       		.uleb128 0xe
 1176 0216 82010000 		.4byte	.LASF38
 1177 021a 01       		.byte	0x1
 1178 021b 7A       		.byte	0x7a
 1179 021c 00000000 		.4byte	.LFB67
 1180 0220 3C000000 		.4byte	.LFE67-.LFB67
 1181 0224 01       		.uleb128 0x1
 1182 0225 9C       		.byte	0x9c
 1183 0226 39020000 		.4byte	0x239
 1184 022a 0F       		.uleb128 0xf
 1185 022b AA010000 		.4byte	.LASF37
 1186 022f 01       		.byte	0x1
 1187 0230 7E       		.byte	0x7e
 1188 0231 68000000 		.4byte	0x68
 1189 0235 02       		.uleb128 0x2
 1190 0236 91       		.byte	0x91
 1191 0237 74       		.sleb128 -12
 1192 0238 00       		.byte	0
 1193 0239 0E       		.uleb128 0xe
 1194 023a 58040000 		.4byte	.LASF39
 1195 023e 01       		.byte	0x1
 1196 023f 89       		.byte	0x89
 1197 0240 00000000 		.4byte	.LFB68
 1198 0244 3A000000 		.4byte	.LFE68-.LFB68
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 27


 1199 0248 01       		.uleb128 0x1
 1200 0249 9C       		.byte	0x9c
 1201 024a 5D020000 		.4byte	0x25d
 1202 024e 0F       		.uleb128 0xf
 1203 024f AA010000 		.4byte	.LASF37
 1204 0253 01       		.byte	0x1
 1205 0254 8D       		.byte	0x8d
 1206 0255 68000000 		.4byte	0x68
 1207 0259 02       		.uleb128 0x2
 1208 025a 91       		.byte	0x91
 1209 025b 74       		.sleb128 -12
 1210 025c 00       		.byte	0
 1211 025d 0D       		.uleb128 0xd
 1212 025e 0B000000 		.4byte	.LASF41
 1213 0262 01       		.byte	0x1
 1214 0263 98       		.byte	0x98
 1215 0264 00000000 		.4byte	.LFB69
 1216 0268 14000000 		.4byte	.LFE69-.LFB69
 1217 026c 01       		.uleb128 0x1
 1218 026d 9C       		.byte	0x9c
 1219 026e 0D       		.uleb128 0xd
 1220 026f 98010000 		.4byte	.LASF42
 1221 0273 01       		.byte	0x1
 1222 0274 9E       		.byte	0x9e
 1223 0275 00000000 		.4byte	.LFB70
 1224 0279 14000000 		.4byte	.LFE70-.LFB70
 1225 027d 01       		.uleb128 0x1
 1226 027e 9C       		.byte	0x9c
 1227 027f 10       		.uleb128 0x10
 1228 0280 17020000 		.4byte	.LASF44
 1229 0284 01       		.byte	0x1
 1230 0285 A4       		.byte	0xa4
 1231 0286 00000000 		.4byte	.LFB71
 1232 028a 8E000000 		.4byte	.LFE71-.LFB71
 1233 028e 01       		.uleb128 0x1
 1234 028f 9C       		.byte	0x9c
 1235 0290 C7020000 		.4byte	0x2c7
 1236 0294 11       		.uleb128 0x11
 1237 0295 7300     		.ascii	"s\000"
 1238 0297 01       		.byte	0x1
 1239 0298 A4       		.byte	0xa4
 1240 0299 84000000 		.4byte	0x84
 1241 029d 02       		.uleb128 0x2
 1242 029e 91       		.byte	0x91
 1243 029f 6C       		.sleb128 -20
 1244 02a0 0B       		.uleb128 0xb
 1245 02a1 36000000 		.4byte	.LBB3
 1246 02a5 3E000000 		.4byte	.LBE3-.LBB3
 1247 02a9 0F       		.uleb128 0xf
 1248 02aa 36000000 		.4byte	.LASF45
 1249 02ae 01       		.byte	0x1
 1250 02af B2       		.byte	0xb2
 1251 02b0 C7020000 		.4byte	0x2c7
 1252 02b4 02       		.uleb128 0x2
 1253 02b5 91       		.byte	0x91
 1254 02b6 70       		.sleb128 -16
 1255 02b7 0F       		.uleb128 0xf
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 28


 1256 02b8 38020000 		.4byte	.LASF46
 1257 02bc 01       		.byte	0x1
 1258 02bd B3       		.byte	0xb3
 1259 02be CC000000 		.4byte	0xcc
 1260 02c2 02       		.uleb128 0x2
 1261 02c3 91       		.byte	0x91
 1262 02c4 74       		.sleb128 -12
 1263 02c5 00       		.byte	0
 1264 02c6 00       		.byte	0
 1265 02c7 12       		.uleb128 0x12
 1266 02c8 8A000000 		.4byte	0x8a
 1267 02cc D7020000 		.4byte	0x2d7
 1268 02d0 13       		.uleb128 0x13
 1269 02d1 7D000000 		.4byte	0x7d
 1270 02d5 02       		.byte	0x2
 1271 02d6 00       		.byte	0
 1272 02d7 10       		.uleb128 0x10
 1273 02d8 00000000 		.4byte	.LASF47
 1274 02dc 01       		.byte	0x1
 1275 02dd BD       		.byte	0xbd
 1276 02de 00000000 		.4byte	.LFB72
 1277 02e2 26000000 		.4byte	.LFE72-.LFB72
 1278 02e6 01       		.uleb128 0x1
 1279 02e7 9C       		.byte	0x9c
 1280 02e8 F9020000 		.4byte	0x2f9
 1281 02ec 11       		.uleb128 0x11
 1282 02ed 6300     		.ascii	"c\000"
 1283 02ef 01       		.byte	0x1
 1284 02f0 BD       		.byte	0xbd
 1285 02f1 8A000000 		.4byte	0x8a
 1286 02f5 02       		.uleb128 0x2
 1287 02f6 91       		.byte	0x91
 1288 02f7 77       		.sleb128 -9
 1289 02f8 00       		.byte	0
 1290 02f9 10       		.uleb128 0x10
 1291 02fa C0020000 		.4byte	.LASF48
 1292 02fe 01       		.byte	0x1
 1293 02ff C6       		.byte	0xc6
 1294 0300 00000000 		.4byte	.LFB73
 1295 0304 68000000 		.4byte	.LFE73-.LFB73
 1296 0308 01       		.uleb128 0x1
 1297 0309 9C       		.byte	0x9c
 1298 030a 39030000 		.4byte	0x339
 1299 030e 14       		.uleb128 0x14
 1300 030f 38020000 		.4byte	.LASF46
 1301 0313 01       		.byte	0x1
 1302 0314 C6       		.byte	0xc6
 1303 0315 CC000000 		.4byte	0xcc
 1304 0319 02       		.uleb128 0x2
 1305 031a 91       		.byte	0x91
 1306 031b 64       		.sleb128 -28
 1307 031c 0F       		.uleb128 0xf
 1308 031d 61020000 		.4byte	.LASF49
 1309 0321 01       		.byte	0x1
 1310 0322 CA       		.byte	0xca
 1311 0323 CC000000 		.4byte	0xcc
 1312 0327 02       		.uleb128 0x2
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 29


 1313 0328 91       		.byte	0x91
 1314 0329 6C       		.sleb128 -20
 1315 032a 0F       		.uleb128 0xf
 1316 032b DB000000 		.4byte	.LASF50
 1317 032f 01       		.byte	0x1
 1318 0330 CC       		.byte	0xcc
 1319 0331 CC000000 		.4byte	0xcc
 1320 0335 02       		.uleb128 0x2
 1321 0336 91       		.byte	0x91
 1322 0337 68       		.sleb128 -24
 1323 0338 00       		.byte	0
 1324 0339 0E       		.uleb128 0xe
 1325 033a 0E040000 		.4byte	.LASF51
 1326 033e 01       		.byte	0x1
 1327 033f D1       		.byte	0xd1
 1328 0340 00000000 		.4byte	.LFB74
 1329 0344 C8000000 		.4byte	.LFE74-.LFB74
 1330 0348 01       		.uleb128 0x1
 1331 0349 9C       		.byte	0x9c
 1332 034a 7D030000 		.4byte	0x37d
 1333 034e 0F       		.uleb128 0xf
 1334 034f C7030000 		.4byte	.LASF52
 1335 0353 01       		.byte	0x1
 1336 0354 D7       		.byte	0xd7
 1337 0355 9C000000 		.4byte	0x9c
 1338 0359 05       		.uleb128 0x5
 1339 035a 03       		.byte	0x3
 1340 035b 1E000000 		.4byte	usbStarted.8262
 1341 035f 0F       		.uleb128 0xf
 1342 0360 0B030000 		.4byte	.LASF53
 1343 0364 01       		.byte	0x1
 1344 0365 D8       		.byte	0xd8
 1345 0366 A8000000 		.4byte	0xa8
 1346 036a 05       		.uleb128 0x5
 1347 036b 03       		.byte	0x3
 1348 036c 20000000 		.4byte	usbBufCount.8263
 1349 0370 0C       		.uleb128 0xc
 1350 0371 6300     		.ascii	"c\000"
 1351 0373 01       		.byte	0x1
 1352 0374 D9       		.byte	0xd9
 1353 0375 9C000000 		.4byte	0x9c
 1354 0379 02       		.uleb128 0x2
 1355 037a 91       		.byte	0x91
 1356 037b 77       		.sleb128 -9
 1357 037c 00       		.byte	0
 1358 037d 15       		.uleb128 0x15
 1359 037e 4B040000 		.4byte	.LASF54
 1360 0382 06       		.byte	0x6
 1361 0383 1207     		.2byte	0x712
 1362 0385 89030000 		.4byte	0x389
 1363 0389 16       		.uleb128 0x16
 1364 038a 91000000 		.4byte	0x91
 1365 038e 17       		.uleb128 0x17
 1366 038f 747300   		.ascii	"ts\000"
 1367 0392 05       		.byte	0x5
 1368 0393 10       		.byte	0x10
 1369 0394 9C000000 		.4byte	0x9c
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 30


 1370 0398 05       		.uleb128 0x5
 1371 0399 03       		.byte	0x3
 1372 039a 00000000 		.4byte	ts
 1373 039e 18       		.uleb128 0x18
 1374 039f 1C000000 		.4byte	.LASF55
 1375 03a3 05       		.byte	0x5
 1376 03a4 11       		.byte	0x11
 1377 03a5 A8000000 		.4byte	0xa8
 1378 03a9 05       		.uleb128 0x5
 1379 03aa 03       		.byte	0x3
 1380 03ab 00000000 		.4byte	ts_enc
 1381 03af 18       		.uleb128 0x18
 1382 03b0 04040000 		.4byte	.LASF56
 1383 03b4 05       		.byte	0x5
 1384 03b5 12       		.byte	0x12
 1385 03b6 A8000000 		.4byte	0xa8
 1386 03ba 05       		.uleb128 0x5
 1387 03bb 03       		.byte	0x3
 1388 03bc 00000000 		.4byte	ts_update
 1389 03c0 18       		.uleb128 0x18
 1390 03c1 D2030000 		.4byte	.LASF57
 1391 03c5 05       		.byte	0x5
 1392 03c6 13       		.byte	0x13
 1393 03c7 A8000000 		.4byte	0xa8
 1394 03cb 05       		.uleb128 0x5
 1395 03cc 03       		.byte	0x3
 1396 03cd 00000000 		.4byte	ts_speed
 1397 03d1 18       		.uleb128 0x18
 1398 03d2 F9030000 		.4byte	.LASF58
 1399 03d6 05       		.byte	0x5
 1400 03d7 14       		.byte	0x14
 1401 03d8 A8000000 		.4byte	0xa8
 1402 03dc 05       		.uleb128 0x5
 1403 03dd 03       		.byte	0x3
 1404 03de 00000000 		.4byte	ts_display
 1405 03e2 18       		.uleb128 0x18
 1406 03e3 DB030000 		.4byte	.LASF59
 1407 03e7 05       		.byte	0x5
 1408 03e8 16       		.byte	0x16
 1409 03e9 9C000000 		.4byte	0x9c
 1410 03ed 05       		.uleb128 0x5
 1411 03ee 03       		.byte	0x3
 1412 03ef 00000000 		.4byte	flag_ts_enc
 1413 03f3 18       		.uleb128 0x18
 1414 03f4 29020000 		.4byte	.LASF60
 1415 03f8 05       		.byte	0x5
 1416 03f9 17       		.byte	0x17
 1417 03fa 9C000000 		.4byte	0x9c
 1418 03fe 05       		.uleb128 0x5
 1419 03ff 03       		.byte	0x3
 1420 0400 00000000 		.4byte	flag_ts_update
 1421 0404 18       		.uleb128 0x18
 1422 0405 46000000 		.4byte	.LASF61
 1423 0409 05       		.byte	0x5
 1424 040a 18       		.byte	0x18
 1425 040b 9C000000 		.4byte	0x9c
 1426 040f 05       		.uleb128 0x5
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 31


 1427 0410 03       		.byte	0x3
 1428 0411 00000000 		.4byte	flag_ts_speed
 1429 0415 18       		.uleb128 0x18
 1430 0416 68020000 		.4byte	.LASF62
 1431 041a 05       		.byte	0x5
 1432 041b 19       		.byte	0x19
 1433 041c 9C000000 		.4byte	0x9c
 1434 0420 05       		.uleb128 0x5
 1435 0421 03       		.byte	0x3
 1436 0422 00000000 		.4byte	flag_ts_display
 1437 0426 18       		.uleb128 0x18
 1438 0427 78020000 		.4byte	.LASF63
 1439 042b 05       		.byte	0x5
 1440 042c 1C       		.byte	0x1c
 1441 042d 9C000000 		.4byte	0x9c
 1442 0431 05       		.uleb128 0x5
 1443 0432 03       		.byte	0x3
 1444 0433 00000000 		.4byte	flag_rx
 1445 0437 18       		.uleb128 0x18
 1446 0438 2A000000 		.4byte	.LASF64
 1447 043c 05       		.byte	0x5
 1448 043d 1D       		.byte	0x1d
 1449 043e 9C000000 		.4byte	0x9c
 1450 0442 05       		.uleb128 0x5
 1451 0443 03       		.byte	0x3
 1452 0444 00000000 		.4byte	flag_packet
 1453 0448 18       		.uleb128 0x18
 1454 0449 FC020000 		.4byte	.LASF65
 1455 044d 05       		.byte	0x5
 1456 044e 1E       		.byte	0x1e
 1457 044f 9C000000 		.4byte	0x9c
 1458 0453 05       		.uleb128 0x5
 1459 0454 03       		.byte	0x3
 1460 0455 00000000 		.4byte	flag_KB_string
 1461 0459 18       		.uleb128 0x18
 1462 045a A9020000 		.4byte	.LASF66
 1463 045e 05       		.byte	0x5
 1464 045f 20       		.byte	0x20
 1465 0460 9C000000 		.4byte	0x9c
 1466 0464 05       		.uleb128 0x5
 1467 0465 03       		.byte	0x3
 1468 0466 00000000 		.4byte	dataready_flag
 1469 046a 18       		.uleb128 0x18
 1470 046b 19040000 		.4byte	.LASF67
 1471 046f 05       		.byte	0x5
 1472 0470 22       		.byte	0x22
 1473 0471 9C000000 		.4byte	0x9c
 1474 0475 05       		.uleb128 0x5
 1475 0476 03       		.byte	0x3
 1476 0477 00000000 		.4byte	flag_rf_transmission_active
 1477 047b 12       		.uleb128 0x12
 1478 047c 8A000000 		.4byte	0x8a
 1479 0480 8B040000 		.4byte	0x48b
 1480 0484 13       		.uleb128 0x13
 1481 0485 7D000000 		.4byte	0x7d
 1482 0489 3F       		.byte	0x3f
 1483 048a 00       		.byte	0
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 32


 1484 048b 18       		.uleb128 0x18
 1485 048c 8C030000 		.4byte	.LASF68
 1486 0490 05       		.byte	0x5
 1487 0491 25       		.byte	0x25
 1488 0492 7B040000 		.4byte	0x47b
 1489 0496 05       		.uleb128 0x5
 1490 0497 03       		.byte	0x3
 1491 0498 00000000 		.4byte	displaystring
 1492 049c 18       		.uleb128 0x18
 1493 049d EA010000 		.4byte	.LASF69
 1494 04a1 05       		.byte	0x5
 1495 04a2 26       		.byte	0x26
 1496 04a3 7B040000 		.4byte	0x47b
 1497 04a7 05       		.uleb128 0x5
 1498 04a8 03       		.byte	0x3
 1499 04a9 00000000 		.4byte	line
 1500 04ad 18       		.uleb128 0x18
 1501 04ae 80020000 		.4byte	.LASF70
 1502 04b2 05       		.byte	0x5
 1503 04b3 26       		.byte	0x26
 1504 04b4 7B040000 		.4byte	0x47b
 1505 04b8 05       		.uleb128 0x5
 1506 04b9 03       		.byte	0x3
 1507 04ba 00000000 		.4byte	entry
 1508 04be 12       		.uleb128 0x12
 1509 04bf 9C000000 		.4byte	0x9c
 1510 04c3 CE040000 		.4byte	0x4ce
 1511 04c7 13       		.uleb128 0x13
 1512 04c8 7D000000 		.4byte	0x7d
 1513 04cc 3F       		.byte	0x3f
 1514 04cd 00       		.byte	0
 1515 04ce 18       		.uleb128 0x18
 1516 04cf E5000000 		.4byte	.LASF71
 1517 04d3 05       		.byte	0x5
 1518 04d4 27       		.byte	0x27
 1519 04d5 BE040000 		.4byte	0x4be
 1520 04d9 05       		.uleb128 0x5
 1521 04da 03       		.byte	0x3
 1522 04db 00000000 		.4byte	usbBuffer
 1523 04df 18       		.uleb128 0x18
 1524 04e0 66000000 		.4byte	.LASF72
 1525 04e4 05       		.byte	0x5
 1526 04e5 3C       		.byte	0x3c
 1527 04e6 DA000000 		.4byte	0xda
 1528 04ea 05       		.uleb128 0x5
 1529 04eb 03       		.byte	0x3
 1530 04ec 00000000 		.4byte	system_state
 1531 04f0 12       		.uleb128 0x12
 1532 04f1 8A000000 		.4byte	0x8a
 1533 04f5 00050000 		.4byte	0x500
 1534 04f9 13       		.uleb128 0x13
 1535 04fa 7D000000 		.4byte	0x7d
 1536 04fe 44       		.byte	0x44
 1537 04ff 00       		.byte	0
 1538 0500 18       		.uleb128 0x18
 1539 0501 A7030000 		.4byte	.LASF73
 1540 0505 01       		.byte	0x1
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 33


 1541 0506 28       		.byte	0x28
 1542 0507 F0040000 		.4byte	0x4f0
 1543 050b 05       		.uleb128 0x5
 1544 050c 03       		.byte	0x3
 1545 050d 00000000 		.4byte	buffer
 1546 0511 18       		.uleb128 0x18
 1547 0512 60030000 		.4byte	.LASF74
 1548 0516 01       		.byte	0x1
 1549 0517 29       		.byte	0x29
 1550 0518 68000000 		.4byte	0x68
 1551 051c 05       		.uleb128 0x5
 1552 051d 03       		.byte	0x3
 1553 051e 00000000 		.4byte	quadDec2Count
 1554 0522 18       		.uleb128 0x18
 1555 0523 20030000 		.4byte	.LASF75
 1556 0527 01       		.byte	0x1
 1557 0528 2A       		.byte	0x2a
 1558 0529 68000000 		.4byte	0x68
 1559 052d 05       		.uleb128 0x5
 1560 052e 03       		.byte	0x3
 1561 052f 00000000 		.4byte	timerInt
 1562 0533 18       		.uleb128 0x18
 1563 0534 46030000 		.4byte	.LASF76
 1564 0538 01       		.byte	0x1
 1565 0539 2B       		.byte	0x2b
 1566 053a A8000000 		.4byte	0xa8
 1567 053e 05       		.uleb128 0x5
 1568 053f 03       		.byte	0x3
 1569 0540 00000000 		.4byte	turnCount
 1570 0544 18       		.uleb128 0x18
 1571 0545 9A030000 		.4byte	.LASF77
 1572 0549 01       		.byte	0x1
 1573 054a 2C       		.byte	0x2c
 1574 054b A8000000 		.4byte	0xa8
 1575 054f 05       		.uleb128 0x5
 1576 0550 03       		.byte	0x3
 1577 0551 00000000 		.4byte	maxTurnCount
 1578 0555 00       		.byte	0
 1579              		.section	.debug_abbrev,"",%progbits
 1580              	.Ldebug_abbrev0:
 1581 0000 01       		.uleb128 0x1
 1582 0001 11       		.uleb128 0x11
 1583 0002 01       		.byte	0x1
 1584 0003 25       		.uleb128 0x25
 1585 0004 0E       		.uleb128 0xe
 1586 0005 13       		.uleb128 0x13
 1587 0006 0B       		.uleb128 0xb
 1588 0007 03       		.uleb128 0x3
 1589 0008 0E       		.uleb128 0xe
 1590 0009 1B       		.uleb128 0x1b
 1591 000a 0E       		.uleb128 0xe
 1592 000b 55       		.uleb128 0x55
 1593 000c 17       		.uleb128 0x17
 1594 000d 11       		.uleb128 0x11
 1595 000e 01       		.uleb128 0x1
 1596 000f 10       		.uleb128 0x10
 1597 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 34


 1598 0011 00       		.byte	0
 1599 0012 00       		.byte	0
 1600 0013 02       		.uleb128 0x2
 1601 0014 24       		.uleb128 0x24
 1602 0015 00       		.byte	0
 1603 0016 0B       		.uleb128 0xb
 1604 0017 0B       		.uleb128 0xb
 1605 0018 3E       		.uleb128 0x3e
 1606 0019 0B       		.uleb128 0xb
 1607 001a 03       		.uleb128 0x3
 1608 001b 0E       		.uleb128 0xe
 1609 001c 00       		.byte	0
 1610 001d 00       		.byte	0
 1611 001e 03       		.uleb128 0x3
 1612 001f 16       		.uleb128 0x16
 1613 0020 00       		.byte	0
 1614 0021 03       		.uleb128 0x3
 1615 0022 0E       		.uleb128 0xe
 1616 0023 3A       		.uleb128 0x3a
 1617 0024 0B       		.uleb128 0xb
 1618 0025 3B       		.uleb128 0x3b
 1619 0026 0B       		.uleb128 0xb
 1620 0027 49       		.uleb128 0x49
 1621 0028 13       		.uleb128 0x13
 1622 0029 00       		.byte	0
 1623 002a 00       		.byte	0
 1624 002b 04       		.uleb128 0x4
 1625 002c 24       		.uleb128 0x24
 1626 002d 00       		.byte	0
 1627 002e 0B       		.uleb128 0xb
 1628 002f 0B       		.uleb128 0xb
 1629 0030 3E       		.uleb128 0x3e
 1630 0031 0B       		.uleb128 0xb
 1631 0032 03       		.uleb128 0x3
 1632 0033 08       		.uleb128 0x8
 1633 0034 00       		.byte	0
 1634 0035 00       		.byte	0
 1635 0036 05       		.uleb128 0x5
 1636 0037 0F       		.uleb128 0xf
 1637 0038 00       		.byte	0
 1638 0039 0B       		.uleb128 0xb
 1639 003a 0B       		.uleb128 0xb
 1640 003b 49       		.uleb128 0x49
 1641 003c 13       		.uleb128 0x13
 1642 003d 00       		.byte	0
 1643 003e 00       		.byte	0
 1644 003f 06       		.uleb128 0x6
 1645 0040 16       		.uleb128 0x16
 1646 0041 00       		.byte	0
 1647 0042 03       		.uleb128 0x3
 1648 0043 0E       		.uleb128 0xe
 1649 0044 3A       		.uleb128 0x3a
 1650 0045 0B       		.uleb128 0xb
 1651 0046 3B       		.uleb128 0x3b
 1652 0047 05       		.uleb128 0x5
 1653 0048 49       		.uleb128 0x49
 1654 0049 13       		.uleb128 0x13
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 35


 1655 004a 00       		.byte	0
 1656 004b 00       		.byte	0
 1657 004c 07       		.uleb128 0x7
 1658 004d 13       		.uleb128 0x13
 1659 004e 01       		.byte	0x1
 1660 004f 03       		.uleb128 0x3
 1661 0050 0E       		.uleb128 0xe
 1662 0051 0B       		.uleb128 0xb
 1663 0052 0B       		.uleb128 0xb
 1664 0053 3A       		.uleb128 0x3a
 1665 0054 0B       		.uleb128 0xb
 1666 0055 3B       		.uleb128 0x3b
 1667 0056 0B       		.uleb128 0xb
 1668 0057 01       		.uleb128 0x1
 1669 0058 13       		.uleb128 0x13
 1670 0059 00       		.byte	0
 1671 005a 00       		.byte	0
 1672 005b 08       		.uleb128 0x8
 1673 005c 0D       		.uleb128 0xd
 1674 005d 00       		.byte	0
 1675 005e 03       		.uleb128 0x3
 1676 005f 0E       		.uleb128 0xe
 1677 0060 3A       		.uleb128 0x3a
 1678 0061 0B       		.uleb128 0xb
 1679 0062 3B       		.uleb128 0x3b
 1680 0063 0B       		.uleb128 0xb
 1681 0064 49       		.uleb128 0x49
 1682 0065 13       		.uleb128 0x13
 1683 0066 38       		.uleb128 0x38
 1684 0067 0B       		.uleb128 0xb
 1685 0068 00       		.byte	0
 1686 0069 00       		.byte	0
 1687 006a 09       		.uleb128 0x9
 1688 006b 2E       		.uleb128 0x2e
 1689 006c 00       		.byte	0
 1690 006d 3F       		.uleb128 0x3f
 1691 006e 19       		.uleb128 0x19
 1692 006f 03       		.uleb128 0x3
 1693 0070 0E       		.uleb128 0xe
 1694 0071 3A       		.uleb128 0x3a
 1695 0072 0B       		.uleb128 0xb
 1696 0073 3B       		.uleb128 0x3b
 1697 0074 0B       		.uleb128 0xb
 1698 0075 27       		.uleb128 0x27
 1699 0076 19       		.uleb128 0x19
 1700 0077 11       		.uleb128 0x11
 1701 0078 01       		.uleb128 0x1
 1702 0079 12       		.uleb128 0x12
 1703 007a 06       		.uleb128 0x6
 1704 007b 40       		.uleb128 0x40
 1705 007c 18       		.uleb128 0x18
 1706 007d 9642     		.uleb128 0x2116
 1707 007f 19       		.uleb128 0x19
 1708 0080 00       		.byte	0
 1709 0081 00       		.byte	0
 1710 0082 0A       		.uleb128 0xa
 1711 0083 2E       		.uleb128 0x2e
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 36


 1712 0084 01       		.byte	0x1
 1713 0085 3F       		.uleb128 0x3f
 1714 0086 19       		.uleb128 0x19
 1715 0087 03       		.uleb128 0x3
 1716 0088 0E       		.uleb128 0xe
 1717 0089 3A       		.uleb128 0x3a
 1718 008a 0B       		.uleb128 0xb
 1719 008b 3B       		.uleb128 0x3b
 1720 008c 0B       		.uleb128 0xb
 1721 008d 49       		.uleb128 0x49
 1722 008e 13       		.uleb128 0x13
 1723 008f 11       		.uleb128 0x11
 1724 0090 01       		.uleb128 0x1
 1725 0091 12       		.uleb128 0x12
 1726 0092 06       		.uleb128 0x6
 1727 0093 40       		.uleb128 0x40
 1728 0094 18       		.uleb128 0x18
 1729 0095 9642     		.uleb128 0x2116
 1730 0097 19       		.uleb128 0x19
 1731 0098 01       		.uleb128 0x1
 1732 0099 13       		.uleb128 0x13
 1733 009a 00       		.byte	0
 1734 009b 00       		.byte	0
 1735 009c 0B       		.uleb128 0xb
 1736 009d 0B       		.uleb128 0xb
 1737 009e 01       		.byte	0x1
 1738 009f 11       		.uleb128 0x11
 1739 00a0 01       		.uleb128 0x1
 1740 00a1 12       		.uleb128 0x12
 1741 00a2 06       		.uleb128 0x6
 1742 00a3 00       		.byte	0
 1743 00a4 00       		.byte	0
 1744 00a5 0C       		.uleb128 0xc
 1745 00a6 34       		.uleb128 0x34
 1746 00a7 00       		.byte	0
 1747 00a8 03       		.uleb128 0x3
 1748 00a9 08       		.uleb128 0x8
 1749 00aa 3A       		.uleb128 0x3a
 1750 00ab 0B       		.uleb128 0xb
 1751 00ac 3B       		.uleb128 0x3b
 1752 00ad 0B       		.uleb128 0xb
 1753 00ae 49       		.uleb128 0x49
 1754 00af 13       		.uleb128 0x13
 1755 00b0 02       		.uleb128 0x2
 1756 00b1 18       		.uleb128 0x18
 1757 00b2 00       		.byte	0
 1758 00b3 00       		.byte	0
 1759 00b4 0D       		.uleb128 0xd
 1760 00b5 2E       		.uleb128 0x2e
 1761 00b6 00       		.byte	0
 1762 00b7 3F       		.uleb128 0x3f
 1763 00b8 19       		.uleb128 0x19
 1764 00b9 03       		.uleb128 0x3
 1765 00ba 0E       		.uleb128 0xe
 1766 00bb 3A       		.uleb128 0x3a
 1767 00bc 0B       		.uleb128 0xb
 1768 00bd 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 37


 1769 00be 0B       		.uleb128 0xb
 1770 00bf 11       		.uleb128 0x11
 1771 00c0 01       		.uleb128 0x1
 1772 00c1 12       		.uleb128 0x12
 1773 00c2 06       		.uleb128 0x6
 1774 00c3 40       		.uleb128 0x40
 1775 00c4 18       		.uleb128 0x18
 1776 00c5 9642     		.uleb128 0x2116
 1777 00c7 19       		.uleb128 0x19
 1778 00c8 00       		.byte	0
 1779 00c9 00       		.byte	0
 1780 00ca 0E       		.uleb128 0xe
 1781 00cb 2E       		.uleb128 0x2e
 1782 00cc 01       		.byte	0x1
 1783 00cd 3F       		.uleb128 0x3f
 1784 00ce 19       		.uleb128 0x19
 1785 00cf 03       		.uleb128 0x3
 1786 00d0 0E       		.uleb128 0xe
 1787 00d1 3A       		.uleb128 0x3a
 1788 00d2 0B       		.uleb128 0xb
 1789 00d3 3B       		.uleb128 0x3b
 1790 00d4 0B       		.uleb128 0xb
 1791 00d5 11       		.uleb128 0x11
 1792 00d6 01       		.uleb128 0x1
 1793 00d7 12       		.uleb128 0x12
 1794 00d8 06       		.uleb128 0x6
 1795 00d9 40       		.uleb128 0x40
 1796 00da 18       		.uleb128 0x18
 1797 00db 9642     		.uleb128 0x2116
 1798 00dd 19       		.uleb128 0x19
 1799 00de 01       		.uleb128 0x1
 1800 00df 13       		.uleb128 0x13
 1801 00e0 00       		.byte	0
 1802 00e1 00       		.byte	0
 1803 00e2 0F       		.uleb128 0xf
 1804 00e3 34       		.uleb128 0x34
 1805 00e4 00       		.byte	0
 1806 00e5 03       		.uleb128 0x3
 1807 00e6 0E       		.uleb128 0xe
 1808 00e7 3A       		.uleb128 0x3a
 1809 00e8 0B       		.uleb128 0xb
 1810 00e9 3B       		.uleb128 0x3b
 1811 00ea 0B       		.uleb128 0xb
 1812 00eb 49       		.uleb128 0x49
 1813 00ec 13       		.uleb128 0x13
 1814 00ed 02       		.uleb128 0x2
 1815 00ee 18       		.uleb128 0x18
 1816 00ef 00       		.byte	0
 1817 00f0 00       		.byte	0
 1818 00f1 10       		.uleb128 0x10
 1819 00f2 2E       		.uleb128 0x2e
 1820 00f3 01       		.byte	0x1
 1821 00f4 3F       		.uleb128 0x3f
 1822 00f5 19       		.uleb128 0x19
 1823 00f6 03       		.uleb128 0x3
 1824 00f7 0E       		.uleb128 0xe
 1825 00f8 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 38


 1826 00f9 0B       		.uleb128 0xb
 1827 00fa 3B       		.uleb128 0x3b
 1828 00fb 0B       		.uleb128 0xb
 1829 00fc 27       		.uleb128 0x27
 1830 00fd 19       		.uleb128 0x19
 1831 00fe 11       		.uleb128 0x11
 1832 00ff 01       		.uleb128 0x1
 1833 0100 12       		.uleb128 0x12
 1834 0101 06       		.uleb128 0x6
 1835 0102 40       		.uleb128 0x40
 1836 0103 18       		.uleb128 0x18
 1837 0104 9642     		.uleb128 0x2116
 1838 0106 19       		.uleb128 0x19
 1839 0107 01       		.uleb128 0x1
 1840 0108 13       		.uleb128 0x13
 1841 0109 00       		.byte	0
 1842 010a 00       		.byte	0
 1843 010b 11       		.uleb128 0x11
 1844 010c 05       		.uleb128 0x5
 1845 010d 00       		.byte	0
 1846 010e 03       		.uleb128 0x3
 1847 010f 08       		.uleb128 0x8
 1848 0110 3A       		.uleb128 0x3a
 1849 0111 0B       		.uleb128 0xb
 1850 0112 3B       		.uleb128 0x3b
 1851 0113 0B       		.uleb128 0xb
 1852 0114 49       		.uleb128 0x49
 1853 0115 13       		.uleb128 0x13
 1854 0116 02       		.uleb128 0x2
 1855 0117 18       		.uleb128 0x18
 1856 0118 00       		.byte	0
 1857 0119 00       		.byte	0
 1858 011a 12       		.uleb128 0x12
 1859 011b 01       		.uleb128 0x1
 1860 011c 01       		.byte	0x1
 1861 011d 49       		.uleb128 0x49
 1862 011e 13       		.uleb128 0x13
 1863 011f 01       		.uleb128 0x1
 1864 0120 13       		.uleb128 0x13
 1865 0121 00       		.byte	0
 1866 0122 00       		.byte	0
 1867 0123 13       		.uleb128 0x13
 1868 0124 21       		.uleb128 0x21
 1869 0125 00       		.byte	0
 1870 0126 49       		.uleb128 0x49
 1871 0127 13       		.uleb128 0x13
 1872 0128 2F       		.uleb128 0x2f
 1873 0129 0B       		.uleb128 0xb
 1874 012a 00       		.byte	0
 1875 012b 00       		.byte	0
 1876 012c 14       		.uleb128 0x14
 1877 012d 05       		.uleb128 0x5
 1878 012e 00       		.byte	0
 1879 012f 03       		.uleb128 0x3
 1880 0130 0E       		.uleb128 0xe
 1881 0131 3A       		.uleb128 0x3a
 1882 0132 0B       		.uleb128 0xb
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 39


 1883 0133 3B       		.uleb128 0x3b
 1884 0134 0B       		.uleb128 0xb
 1885 0135 49       		.uleb128 0x49
 1886 0136 13       		.uleb128 0x13
 1887 0137 02       		.uleb128 0x2
 1888 0138 18       		.uleb128 0x18
 1889 0139 00       		.byte	0
 1890 013a 00       		.byte	0
 1891 013b 15       		.uleb128 0x15
 1892 013c 34       		.uleb128 0x34
 1893 013d 00       		.byte	0
 1894 013e 03       		.uleb128 0x3
 1895 013f 0E       		.uleb128 0xe
 1896 0140 3A       		.uleb128 0x3a
 1897 0141 0B       		.uleb128 0xb
 1898 0142 3B       		.uleb128 0x3b
 1899 0143 05       		.uleb128 0x5
 1900 0144 49       		.uleb128 0x49
 1901 0145 13       		.uleb128 0x13
 1902 0146 3F       		.uleb128 0x3f
 1903 0147 19       		.uleb128 0x19
 1904 0148 3C       		.uleb128 0x3c
 1905 0149 19       		.uleb128 0x19
 1906 014a 00       		.byte	0
 1907 014b 00       		.byte	0
 1908 014c 16       		.uleb128 0x16
 1909 014d 35       		.uleb128 0x35
 1910 014e 00       		.byte	0
 1911 014f 49       		.uleb128 0x49
 1912 0150 13       		.uleb128 0x13
 1913 0151 00       		.byte	0
 1914 0152 00       		.byte	0
 1915 0153 17       		.uleb128 0x17
 1916 0154 34       		.uleb128 0x34
 1917 0155 00       		.byte	0
 1918 0156 03       		.uleb128 0x3
 1919 0157 08       		.uleb128 0x8
 1920 0158 3A       		.uleb128 0x3a
 1921 0159 0B       		.uleb128 0xb
 1922 015a 3B       		.uleb128 0x3b
 1923 015b 0B       		.uleb128 0xb
 1924 015c 49       		.uleb128 0x49
 1925 015d 13       		.uleb128 0x13
 1926 015e 3F       		.uleb128 0x3f
 1927 015f 19       		.uleb128 0x19
 1928 0160 02       		.uleb128 0x2
 1929 0161 18       		.uleb128 0x18
 1930 0162 00       		.byte	0
 1931 0163 00       		.byte	0
 1932 0164 18       		.uleb128 0x18
 1933 0165 34       		.uleb128 0x34
 1934 0166 00       		.byte	0
 1935 0167 03       		.uleb128 0x3
 1936 0168 0E       		.uleb128 0xe
 1937 0169 3A       		.uleb128 0x3a
 1938 016a 0B       		.uleb128 0xb
 1939 016b 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 40


 1940 016c 0B       		.uleb128 0xb
 1941 016d 49       		.uleb128 0x49
 1942 016e 13       		.uleb128 0x13
 1943 016f 3F       		.uleb128 0x3f
 1944 0170 19       		.uleb128 0x19
 1945 0171 02       		.uleb128 0x2
 1946 0172 18       		.uleb128 0x18
 1947 0173 00       		.byte	0
 1948 0174 00       		.byte	0
 1949 0175 00       		.byte	0
 1950              		.section	.debug_aranges,"",%progbits
 1951 0000 6C000000 		.4byte	0x6c
 1952 0004 0200     		.2byte	0x2
 1953 0006 00000000 		.4byte	.Ldebug_info0
 1954 000a 04       		.byte	0x4
 1955 000b 00       		.byte	0
 1956 000c 0000     		.2byte	0
 1957 000e 0000     		.2byte	0
 1958 0010 00000000 		.4byte	.LFB64
 1959 0014 30000000 		.4byte	.LFE64-.LFB64
 1960 0018 00000000 		.4byte	.LFB65
 1961 001c D8000000 		.4byte	.LFE65-.LFB65
 1962 0020 00000000 		.4byte	.LFB66
 1963 0024 14000000 		.4byte	.LFE66-.LFB66
 1964 0028 00000000 		.4byte	.LFB67
 1965 002c 3C000000 		.4byte	.LFE67-.LFB67
 1966 0030 00000000 		.4byte	.LFB68
 1967 0034 3A000000 		.4byte	.LFE68-.LFB68
 1968 0038 00000000 		.4byte	.LFB69
 1969 003c 14000000 		.4byte	.LFE69-.LFB69
 1970 0040 00000000 		.4byte	.LFB70
 1971 0044 14000000 		.4byte	.LFE70-.LFB70
 1972 0048 00000000 		.4byte	.LFB71
 1973 004c 8E000000 		.4byte	.LFE71-.LFB71
 1974 0050 00000000 		.4byte	.LFB72
 1975 0054 26000000 		.4byte	.LFE72-.LFB72
 1976 0058 00000000 		.4byte	.LFB73
 1977 005c 68000000 		.4byte	.LFE73-.LFB73
 1978 0060 00000000 		.4byte	.LFB74
 1979 0064 C8000000 		.4byte	.LFE74-.LFB74
 1980 0068 00000000 		.4byte	0
 1981 006c 00000000 		.4byte	0
 1982              		.section	.debug_ranges,"",%progbits
 1983              	.Ldebug_ranges0:
 1984 0000 00000000 		.4byte	.LFB64
 1985 0004 30000000 		.4byte	.LFE64
 1986 0008 00000000 		.4byte	.LFB65
 1987 000c D8000000 		.4byte	.LFE65
 1988 0010 00000000 		.4byte	.LFB66
 1989 0014 14000000 		.4byte	.LFE66
 1990 0018 00000000 		.4byte	.LFB67
 1991 001c 3C000000 		.4byte	.LFE67
 1992 0020 00000000 		.4byte	.LFB68
 1993 0024 3A000000 		.4byte	.LFE68
 1994 0028 00000000 		.4byte	.LFB69
 1995 002c 14000000 		.4byte	.LFE69
 1996 0030 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 41


 1997 0034 14000000 		.4byte	.LFE70
 1998 0038 00000000 		.4byte	.LFB71
 1999 003c 8E000000 		.4byte	.LFE71
 2000 0040 00000000 		.4byte	.LFB72
 2001 0044 26000000 		.4byte	.LFE72
 2002 0048 00000000 		.4byte	.LFB73
 2003 004c 68000000 		.4byte	.LFE73
 2004 0050 00000000 		.4byte	.LFB74
 2005 0054 C8000000 		.4byte	.LFE74
 2006 0058 00000000 		.4byte	0
 2007 005c 00000000 		.4byte	0
 2008              		.section	.debug_line,"",%progbits
 2009              	.Ldebug_line0:
 2010 0000 96020000 		.section	.debug_str,"MS",%progbits,1
 2010      02005601 
 2010      00000201 
 2010      FB0E0D00 
 2010      01010101 
 2011              	.LASF47:
 2012 0000 75736250 		.ascii	"usbPutChar\000"
 2012      75744368 
 2012      617200
 2013              	.LASF41:
 2014 000b 64697265 		.ascii	"directionForward\000"
 2014      6374696F 
 2014      6E466F72 
 2014      77617264 
 2014      00
 2015              	.LASF55:
 2016 001c 74735F65 		.ascii	"ts_enc\000"
 2016      6E6300
 2017              	.LASF19:
 2018 0023 646F7562 		.ascii	"double\000"
 2018      6C6500
 2019              	.LASF64:
 2020 002a 666C6167 		.ascii	"flag_packet\000"
 2020      5F706163 
 2020      6B657400 
 2021              	.LASF45:
 2022 0036 70657263 		.ascii	"percentageArray\000"
 2022      656E7461 
 2022      67654172 
 2022      72617900 
 2023              	.LASF61:
 2024 0046 666C6167 		.ascii	"flag_ts_speed\000"
 2024      5F74735F 
 2024      73706565 
 2024      6400
 2025              	.LASF33:
 2026 0054 67325F78 		.ascii	"g2_xpos\000"
 2026      706F7300 
 2027              	.LASF2:
 2028 005c 73686F72 		.ascii	"short int\000"
 2028      7420696E 
 2028      7400
 2029              	.LASF72:
 2030 0066 73797374 		.ascii	"system_state\000"
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 42


 2030      656D5F73 
 2030      74617465 
 2030      00
 2031              	.LASF10:
 2032 0073 73697A65 		.ascii	"sizetype\000"
 2032      74797065 
 2032      00
 2033              	.LASF80:
 2034 007c 433A5C55 		.ascii	"C:\\Users\\ianku\\OneDrive\\Documents\\301-Robot\\p"
 2034      73657273 
 2034      5C69616E 
 2034      6B755C4F 
 2034      6E654472 
 2035 00a9 736F6320 		.ascii	"soc student pack\\psoc_code_base\\CS301_Class.cydsn"
 2035      73747564 
 2035      656E7420 
 2035      7061636B 
 2035      5C70736F 
 2036 00da 00       		.ascii	"\000"
 2037              	.LASF50:
 2038 00db 6E657750 		.ascii	"newPeriod\000"
 2038      6572696F 
 2038      6400
 2039              	.LASF71:
 2040 00e5 75736242 		.ascii	"usbBuffer\000"
 2040      75666665 
 2040      7200
 2041              	.LASF78:
 2042 00ef 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2042      43313120 
 2042      352E342E 
 2042      31203230 
 2042      31363036 
 2043 0122 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2043      20726576 
 2043      6973696F 
 2043      6E203233 
 2043      37373135 
 2044 0155 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2044      66756E63 
 2044      74696F6E 
 2044      2D736563 
 2044      74696F6E 
 2045              	.LASF43:
 2046 017d 6D61696E 		.ascii	"main\000"
 2046      00
 2047              	.LASF38:
 2048 0182 726F7461 		.ascii	"rotationAntiClockwise\000"
 2048      74696F6E 
 2048      416E7469 
 2048      436C6F63 
 2048      6B776973 
 2049              	.LASF42:
 2050 0198 64697265 		.ascii	"directionBackward\000"
 2050      6374696F 
 2050      6E426163 
 2050      6B776172 
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 43


 2050      6400
 2051              	.LASF37:
 2052 01aa 71756164 		.ascii	"quadPulseCount\000"
 2052      50756C73 
 2052      65436F75 
 2052      6E7400
 2053              	.LASF15:
 2054 01b9 75696E74 		.ascii	"uint16\000"
 2054      313600
 2055              	.LASF21:
 2056 01c0 696E6465 		.ascii	"index\000"
 2056      7800
 2057              	.LASF82:
 2058 01c6 73706565 		.ascii	"speedTimer\000"
 2058      6454696D 
 2058      657200
 2059              	.LASF17:
 2060 01d1 696E7431 		.ascii	"int16\000"
 2060      3600
 2061              	.LASF14:
 2062 01d7 75696E74 		.ascii	"uint8\000"
 2062      3800
 2063              	.LASF32:
 2064 01dd 67315F64 		.ascii	"g1_direction\000"
 2064      69726563 
 2064      74696F6E 
 2064      00
 2065              	.LASF69:
 2066 01ea 6C696E65 		.ascii	"line\000"
 2066      00
 2067              	.LASF0:
 2068 01ef 7369676E 		.ascii	"signed char\000"
 2068      65642063 
 2068      68617200 
 2069              	.LASF18:
 2070 01fb 666C6F61 		.ascii	"float\000"
 2070      7400
 2071              	.LASF34:
 2072 0201 67325F79 		.ascii	"g2_ypos\000"
 2072      706F7300 
 2073              	.LASF6:
 2074 0209 6C6F6E67 		.ascii	"long long int\000"
 2074      206C6F6E 
 2074      6720696E 
 2074      7400
 2075              	.LASF44:
 2076 0217 75736250 		.ascii	"usbPutString\000"
 2076      75745374 
 2076      72696E67 
 2076      00
 2077              	.LASF16:
 2078 0224 696E7438 		.ascii	"int8\000"
 2078      00
 2079              	.LASF60:
 2080 0229 666C6167 		.ascii	"flag_ts_update\000"
 2080      5F74735F 
 2080      75706461 
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 44


 2080      746500
 2081              	.LASF46:
 2082 0238 70657263 		.ascii	"percentage\000"
 2082      656E7461 
 2082      676500
 2083              	.LASF28:
 2084 0243 67305F64 		.ascii	"g0_direction\000"
 2084      69726563 
 2084      74696F6E 
 2084      00
 2085              	.LASF25:
 2086 0250 67305F78 		.ascii	"g0_xpos\000"
 2086      706F7300 
 2087              	.LASF4:
 2088 0258 6C6F6E67 		.ascii	"long int\000"
 2088      20696E74 
 2088      00
 2089              	.LASF49:
 2090 0261 70657269 		.ascii	"period\000"
 2090      6F6400
 2091              	.LASF62:
 2092 0268 666C6167 		.ascii	"flag_ts_display\000"
 2092      5F74735F 
 2092      64697370 
 2092      6C617900 
 2093              	.LASF63:
 2094 0278 666C6167 		.ascii	"flag_rx\000"
 2094      5F727800 
 2095              	.LASF70:
 2096 0280 656E7472 		.ascii	"entry\000"
 2096      7900
 2097              	.LASF9:
 2098 0286 6C6F6E67 		.ascii	"long double\000"
 2098      20646F75 
 2098      626C6500 
 2099              	.LASF1:
 2100 0292 756E7369 		.ascii	"unsigned char\000"
 2100      676E6564 
 2100      20636861 
 2100      7200
 2101              	.LASF27:
 2102 02a0 67305F73 		.ascii	"g0_speed\000"
 2102      70656564 
 2102      00
 2103              	.LASF66:
 2104 02a9 64617461 		.ascii	"dataready_flag\000"
 2104      72656164 
 2104      795F666C 
 2104      616700
 2105              	.LASF29:
 2106 02b8 67315F78 		.ascii	"g1_xpos\000"
 2106      706F7300 
 2107              	.LASF48:
 2108 02c0 6368616E 		.ascii	"changeDutyCycle\000"
 2108      67654475 
 2108      74794379 
 2108      636C6500 
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 45


 2109              	.LASF13:
 2110 02d0 696E7433 		.ascii	"int32_t\000"
 2110      325F7400 
 2111              	.LASF7:
 2112 02d8 6C6F6E67 		.ascii	"long long unsigned int\000"
 2112      206C6F6E 
 2112      6720756E 
 2112      7369676E 
 2112      65642069 
 2113              	.LASF8:
 2114 02ef 756E7369 		.ascii	"unsigned int\000"
 2114      676E6564 
 2114      20696E74 
 2114      00
 2115              	.LASF65:
 2116 02fc 666C6167 		.ascii	"flag_KB_string\000"
 2116      5F4B425F 
 2116      73747269 
 2116      6E6700
 2117              	.LASF53:
 2118 030b 75736242 		.ascii	"usbBufCount\000"
 2118      7566436F 
 2118      756E7400 
 2119              	.LASF35:
 2120 0317 67325F73 		.ascii	"g2_speed\000"
 2120      70656564 
 2120      00
 2121              	.LASF75:
 2122 0320 74696D65 		.ascii	"timerInt\000"
 2122      72496E74 
 2122      00
 2123              	.LASF3:
 2124 0329 73686F72 		.ascii	"short unsigned int\000"
 2124      7420756E 
 2124      7369676E 
 2124      65642069 
 2124      6E7400
 2125              	.LASF81:
 2126 033c 64617461 		.ascii	"data_main\000"
 2126      5F6D6169 
 2126      6E00
 2127              	.LASF76:
 2128 0346 7475726E 		.ascii	"turnCount\000"
 2128      436F756E 
 2128      7400
 2129              	.LASF11:
 2130 0350 63686172 		.ascii	"char\000"
 2130      00
 2131              	.LASF22:
 2132 0355 726F626F 		.ascii	"robot_xpos\000"
 2132      745F7870 
 2132      6F7300
 2133              	.LASF74:
 2134 0360 71756164 		.ascii	"quadDec2Count\000"
 2134      44656332 
 2134      436F756E 
 2134      7400
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 46


 2135              	.LASF30:
 2136 036e 67315F79 		.ascii	"g1_ypos\000"
 2136      706F7300 
 2137              	.LASF36:
 2138 0376 67325F64 		.ascii	"g2_direction\000"
 2138      69726563 
 2138      74696F6E 
 2138      00
 2139              	.LASF31:
 2140 0383 67315F73 		.ascii	"g1_speed\000"
 2140      70656564 
 2140      00
 2141              	.LASF68:
 2142 038c 64697370 		.ascii	"displaystring\000"
 2142      6C617973 
 2142      7472696E 
 2142      6700
 2143              	.LASF77:
 2144 039a 6D617854 		.ascii	"maxTurnCount\000"
 2144      75726E43 
 2144      6F756E74 
 2144      00
 2145              	.LASF73:
 2146 03a7 62756666 		.ascii	"buffer\000"
 2146      657200
 2147              	.LASF79:
 2148 03ae 6D61696E 		.ascii	"main.c\000"
 2148      2E6300
 2149              	.LASF5:
 2150 03b5 6C6F6E67 		.ascii	"long unsigned int\000"
 2150      20756E73 
 2150      69676E65 
 2150      6420696E 
 2150      7400
 2151              	.LASF52:
 2152 03c7 75736253 		.ascii	"usbStarted\000"
 2152      74617274 
 2152      656400
 2153              	.LASF57:
 2154 03d2 74735F73 		.ascii	"ts_speed\000"
 2154      70656564 
 2154      00
 2155              	.LASF59:
 2156 03db 666C6167 		.ascii	"flag_ts_enc\000"
 2156      5F74735F 
 2156      656E6300 
 2157              	.LASF12:
 2158 03e7 5F5F696E 		.ascii	"__int32_t\000"
 2158      7433325F 
 2158      7400
 2159              	.LASF26:
 2160 03f1 67305F79 		.ascii	"g0_ypos\000"
 2160      706F7300 
 2161              	.LASF58:
 2162 03f9 74735F64 		.ascii	"ts_display\000"
 2162      6973706C 
 2162      617900
ARM GAS  C:\Users\ianku\AppData\Local\Temp\cc7NCrjO.s 			page 47


 2163              	.LASF56:
 2164 0404 74735F75 		.ascii	"ts_update\000"
 2164      70646174 
 2164      6500
 2165              	.LASF51:
 2166 040e 68616E64 		.ascii	"handle_usb\000"
 2166      6C655F75 
 2166      736200
 2167              	.LASF67:
 2168 0419 666C6167 		.ascii	"flag_rf_transmission_active\000"
 2168      5F72665F 
 2168      7472616E 
 2168      736D6973 
 2168      73696F6E 
 2169              	.LASF23:
 2170 0435 726F626F 		.ascii	"robot_ypos\000"
 2170      745F7970 
 2170      6F7300
 2171              	.LASF40:
 2172 0440 73746F70 		.ascii	"stopMoving\000"
 2172      4D6F7669 
 2172      6E6700
 2173              	.LASF54:
 2174 044b 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2174      52784275 
 2174      66666572 
 2174      00
 2175              	.LASF39:
 2176 0458 726F7461 		.ascii	"rotationClockwise\000"
 2176      74696F6E 
 2176      436C6F63 
 2176      6B776973 
 2176      6500
 2177              	.LASF20:
 2178 046a 72737369 		.ascii	"rssi\000"
 2178      00
 2179              	.LASF24:
 2180 046f 726F626F 		.ascii	"robot_orientation\000"
 2180      745F6F72 
 2180      69656E74 
 2180      6174696F 
 2180      6E00
 2181              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
