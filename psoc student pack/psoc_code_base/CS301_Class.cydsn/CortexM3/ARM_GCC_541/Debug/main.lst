ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.global	currentDirection
 107              		.align	2
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 3


 108              		.type	currentDirection, %object
 109              		.size	currentDirection, 4
 110              	currentDirection:
 111 0044 05000000 		.word	5
 112              		.global	previousDirection
 113              		.align	2
 114              		.type	previousDirection, %object
 115              		.size	previousDirection, 4
 116              	previousDirection:
 117 0048 06000000 		.word	6
 118              		.global	s1
 119              		.bss
 120              		.type	s1, %object
 121              		.size	s1, 1
 122              	s1:
 123 0012 00       		.space	1
 124              		.global	s2
 125              		.type	s2, %object
 126              		.size	s2, 1
 127              	s2:
 128 0013 00       		.space	1
 129              		.global	s3
 130              		.type	s3, %object
 131              		.size	s3, 1
 132              	s3:
 133 0014 00       		.space	1
 134              		.global	s4
 135              		.type	s4, %object
 136              		.size	s4, 1
 137              	s4:
 138 0015 00       		.space	1
 139              		.global	s5
 140              		.type	s5, %object
 141              		.size	s5, 1
 142              	s5:
 143 0016 00       		.space	1
 144              		.global	s6
 145              		.type	s6, %object
 146              		.size	s6, 1
 147              	s6:
 148 0017 00       		.space	1
 149              		.global	totalMilliseconds
 150              		.align	2
 151              		.type	totalMilliseconds, %object
 152              		.size	totalMilliseconds, 4
 153              	totalMilliseconds:
 154 0018 00000000 		.space	4
 155              		.global	totalDistance
 156              		.align	2
 157              		.type	totalDistance, %object
 158              		.size	totalDistance, 4
 159              	totalDistance:
 160 001c 00000000 		.space	4
 161              		.comm	buffer,69,4
 162              		.global	quadDec2Count
 163              		.align	2
 164              		.type	quadDec2Count, %object
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 4


 165              		.size	quadDec2Count, 4
 166              	quadDec2Count:
 167 0020 00000000 		.space	4
 168              		.global	timerInt
 169              		.align	2
 170              		.type	timerInt, %object
 171              		.size	timerInt, 4
 172              	timerInt:
 173 0024 00000000 		.space	4
 174              		.global	keepLedOn
 175              		.align	2
 176              		.type	keepLedOn, %object
 177              		.size	keepLedOn, 4
 178              	keepLedOn:
 179 0028 00000000 		.space	4
 180              		.global	__aeabi_ui2d
 181              		.global	__aeabi_i2d
 182              		.global	__aeabi_ddiv
 183              		.global	__aeabi_dmul
 184              		.global	__aeabi_dadd
 185              		.global	__aeabi_d2uiz
 186              		.section	.text.speedTimer,"ax",%progbits
 187              		.align	2
 188              		.global	speedTimer
 189              		.thumb
 190              		.thumb_func
 191              		.type	speedTimer, %function
 192              	speedTimer:
 193              	.LFB64:
 194              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <string.h>
  19:main.c        **** #include <stdlib.h>
  20:main.c        **** #include <project.h>
  21:main.c        **** //* ========================================
  22:main.c        **** #include "defines.h"
  23:main.c        **** #include "vars.h"
  24:main.c        **** //#include "pathfinding.h"
  25:main.c        **** #include "initialise.h"
  26:main.c        **** #include "movement.h"
  27:main.c        **** //#include "usbUART.h"
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 5


  28:main.c        **** //* ========================================
  29:main.c        **** // USBUART
  30:main.c        **** void usbPutString(char *s);
  31:main.c        **** void usbPutChar(char c);
  32:main.c        **** void handle_usb();
  33:main.c        **** //* ========================================
  34:main.c        **** int16 quadCountToRPM(uint16 count);
  35:main.c        **** //* ========================================
  36:main.c        **** // Sensors, Course correction and Movement Direction.
  37:main.c        **** void ResetSensorFlags();
  38:main.c        **** void SetRobotMovement();
  39:main.c        **** enum DirectionState CheckSensorDirection();
  40:main.c        **** enum DirectionState {Forward, TurnRight, TurnLeft, AdjustToTheLeft, AdjustToTheRight, Stop, Unknown
  41:main.c        **** enum DirectionState currentDirection = Stop;
  42:main.c        **** enum DirectionState previousDirection = Unknown;
  43:main.c        **** // ----------------------------------------
  44:main.c        **** uint8 s1 = 0; // black = 0, white = 1
  45:main.c        **** uint8 s2 = 0;
  46:main.c        **** uint8 s3 = 0;
  47:main.c        **** uint8 s4 = 0;
  48:main.c        **** uint8 s5 = 0;
  49:main.c        **** uint8 s6 = 0;
  50:main.c        **** //* ========================================
  51:main.c        **** // Calculating Distance
  52:main.c        **** #define WHEEL_DIAMETER_MM 65
  53:main.c        **** uint32 totalMilliseconds = 0;
  54:main.c        **** uint32 totalDistance = 0; // in mm
  55:main.c        **** //* ========================================
  56:main.c        **** char buffer[69];
  57:main.c        **** int quadDec2Count = 0;
  58:main.c        **** int timerInt = 0;
  59:main.c        **** int keepLedOn = 0;
  60:main.c        **** 
  61:main.c        **** 
  62:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  63:main.c        **** 
  64:main.c        **** CY_ISR (speedTimer) {
 195              		.loc 1 64 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 1, uses_anonymous_args = 0
 199 0000 B0B5     		push	{r4, r5, r7, lr}
 200              		.cfi_def_cfa_offset 16
 201              		.cfi_offset 4, -16
 202              		.cfi_offset 5, -12
 203              		.cfi_offset 7, -8
 204              		.cfi_offset 14, -4
 205 0002 00AF     		add	r7, sp, #0
 206              		.cfi_def_cfa_register 7
  65:main.c        ****     timerInt = 1;
 207              		.loc 1 65 0
 208 0004 2A4B     		ldr	r3, .L3+8
 209 0006 0122     		movs	r2, #1
 210 0008 1A60     		str	r2, [r3]
  66:main.c        ****     //quadDec_M1 used for turning macros
  67:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 211              		.loc 1 67 0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 6


 212 000a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 213 000e 0346     		mov	r3, r0
 214 0010 1A46     		mov	r2, r3
 215 0012 284B     		ldr	r3, .L3+12
 216 0014 1A60     		str	r2, [r3]
  68:main.c        ****     
  69:main.c        ****     if (currentDirection == Forward && quadDec2Count != 0) {
 217              		.loc 1 69 0
 218 0016 284B     		ldr	r3, .L3+16
 219 0018 1B68     		ldr	r3, [r3]
 220 001a 002B     		cmp	r3, #0
 221 001c 38D1     		bne	.L2
 222              		.loc 1 69 0 is_stmt 0 discriminator 1
 223 001e 254B     		ldr	r3, .L3+12
 224 0020 1B68     		ldr	r3, [r3]
 225 0022 002B     		cmp	r3, #0
 226 0024 34D0     		beq	.L2
  70:main.c        ****         totalDistance = totalDistance + (abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM;
 227              		.loc 1 70 0 is_stmt 1
 228 0026 254B     		ldr	r3, .L3+20
 229 0028 1B68     		ldr	r3, [r3]
 230 002a 1846     		mov	r0, r3
 231 002c FFF7FEFF 		bl	__aeabi_ui2d
 232 0030 0446     		mov	r4, r0
 233 0032 0D46     		mov	r5, r1
 234 0034 1F4B     		ldr	r3, .L3+12
 235 0036 1B68     		ldr	r3, [r3]
 236 0038 002B     		cmp	r3, #0
 237 003a B8BF     		it	lt
 238 003c 5B42     		rsblt	r3, r3, #0
 239 003e 1846     		mov	r0, r3
 240 0040 FFF7FEFF 		bl	__aeabi_i2d
 241 0044 4FF00002 		mov	r2, #0
 242 0048 1D4B     		ldr	r3, .L3+24
 243 004a FFF7FEFF 		bl	__aeabi_ddiv
 244 004e 0246     		mov	r2, r0
 245 0050 0B46     		mov	r3, r1
 246 0052 1046     		mov	r0, r2
 247 0054 1946     		mov	r1, r3
 248 0056 14A3     		adr	r3, .L3
 249 0058 D3E90023 		ldrd	r2, [r3]
 250 005c FFF7FEFF 		bl	__aeabi_dmul
 251 0060 0246     		mov	r2, r0
 252 0062 0B46     		mov	r3, r1
 253 0064 1046     		mov	r0, r2
 254 0066 1946     		mov	r1, r3
 255 0068 4FF00002 		mov	r2, #0
 256 006c 154B     		ldr	r3, .L3+28
 257 006e FFF7FEFF 		bl	__aeabi_dmul
 258 0072 0246     		mov	r2, r0
 259 0074 0B46     		mov	r3, r1
 260 0076 2046     		mov	r0, r4
 261 0078 2946     		mov	r1, r5
 262 007a FFF7FEFF 		bl	__aeabi_dadd
 263 007e 0346     		mov	r3, r0
 264 0080 0C46     		mov	r4, r1
 265 0082 1846     		mov	r0, r3
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 7


 266 0084 2146     		mov	r1, r4
 267 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 268 008a 0246     		mov	r2, r0
 269 008c 0B4B     		ldr	r3, .L3+20
 270 008e 1A60     		str	r2, [r3]
 271              	.L2:
  71:main.c        ****     }
  72:main.c        ****     
  73:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 272              		.loc 1 73 0
 273 0090 0020     		movs	r0, #0
 274 0092 FFF7FEFF 		bl	QuadDec_M2_SetCounter
  74:main.c        ****     QuadDec_M2_Start(); // restart counter
 275              		.loc 1 74 0
 276 0096 FFF7FEFF 		bl	QuadDec_M2_Start
  75:main.c        ****     
  76:main.c        **** 
  77:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 277              		.loc 1 77 0
 278 009a FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
  78:main.c        **** }
 279              		.loc 1 78 0
 280 009e 00BF     		nop
 281 00a0 B0BD     		pop	{r4, r5, r7, pc}
 282              	.L4:
 283 00a2 00BFAFF3 		.align	3
 283      0080
 284              	.L3:
 285 00a8 182D4454 		.word	1413754136
 286 00ac FB210940 		.word	1074340347
 287 00b0 00000000 		.word	timerInt
 288 00b4 00000000 		.word	quadDec2Count
 289 00b8 00000000 		.word	currentDirection
 290 00bc 00000000 		.word	totalDistance
 291 00c0 00804C40 		.word	1078755328
 292 00c4 00405040 		.word	1079001088
 293              		.cfi_endproc
 294              	.LFE64:
 295              		.size	speedTimer, .-speedTimer
 296              		.section	.text.S1_DETECTED,"ax",%progbits
 297              		.align	2
 298              		.global	S1_DETECTED
 299              		.thumb
 300              		.thumb_func
 301              		.type	S1_DETECTED, %function
 302              	S1_DETECTED:
 303              	.LFB65:
  79:main.c        **** 
  80:main.c        **** CY_ISR(S1_DETECTED) {
 304              		.loc 1 80 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 1, uses_anonymous_args = 0
 308 0000 80B5     		push	{r7, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 7, -8
 311              		.cfi_offset 14, -4
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 8


 312 0002 00AF     		add	r7, sp, #0
 313              		.cfi_def_cfa_register 7
  81:main.c        ****     // Sensor has detected WHITE
  82:main.c        ****     s1 = 1; // , Black = 0, White = 1
 314              		.loc 1 82 0
 315 0004 034B     		ldr	r3, .L6
 316 0006 0122     		movs	r2, #1
 317 0008 1A70     		strb	r2, [r3]
  83:main.c        ****     LED_Write(1u);
 318              		.loc 1 83 0
 319 000a 0120     		movs	r0, #1
 320 000c FFF7FEFF 		bl	LED_Write
  84:main.c        ****     //moveForward();
  85:main.c        **** }
 321              		.loc 1 85 0
 322 0010 00BF     		nop
 323 0012 80BD     		pop	{r7, pc}
 324              	.L7:
 325              		.align	2
 326              	.L6:
 327 0014 00000000 		.word	s1
 328              		.cfi_endproc
 329              	.LFE65:
 330              		.size	S1_DETECTED, .-S1_DETECTED
 331              		.section	.text.S2_DETECTED,"ax",%progbits
 332              		.align	2
 333              		.global	S2_DETECTED
 334              		.thumb
 335              		.thumb_func
 336              		.type	S2_DETECTED, %function
 337              	S2_DETECTED:
 338              	.LFB66:
  86:main.c        **** 
  87:main.c        **** CY_ISR(S2_DETECTED) {
 339              		.loc 1 87 0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 0
 342              		@ frame_needed = 1, uses_anonymous_args = 0
 343 0000 80B5     		push	{r7, lr}
 344              		.cfi_def_cfa_offset 8
 345              		.cfi_offset 7, -8
 346              		.cfi_offset 14, -4
 347 0002 00AF     		add	r7, sp, #0
 348              		.cfi_def_cfa_register 7
  88:main.c        ****     // Sensor has detected WHITE
  89:main.c        ****     s2 = 1; // , Black = 0, White = 1
 349              		.loc 1 89 0
 350 0004 034B     		ldr	r3, .L9
 351 0006 0122     		movs	r2, #1
 352 0008 1A70     		strb	r2, [r3]
  90:main.c        ****     LED_Write(1u);
 353              		.loc 1 90 0
 354 000a 0120     		movs	r0, #1
 355 000c FFF7FEFF 		bl	LED_Write
  91:main.c        ****     //moveForward();
  92:main.c        **** }
 356              		.loc 1 92 0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 9


 357 0010 00BF     		nop
 358 0012 80BD     		pop	{r7, pc}
 359              	.L10:
 360              		.align	2
 361              	.L9:
 362 0014 00000000 		.word	s2
 363              		.cfi_endproc
 364              	.LFE66:
 365              		.size	S2_DETECTED, .-S2_DETECTED
 366              		.section	.text.S3_DETECTED,"ax",%progbits
 367              		.align	2
 368              		.global	S3_DETECTED
 369              		.thumb
 370              		.thumb_func
 371              		.type	S3_DETECTED, %function
 372              	S3_DETECTED:
 373              	.LFB67:
  93:main.c        **** 
  94:main.c        **** CY_ISR(S3_DETECTED) {
 374              		.loc 1 94 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 1, uses_anonymous_args = 0
 378 0000 80B5     		push	{r7, lr}
 379              		.cfi_def_cfa_offset 8
 380              		.cfi_offset 7, -8
 381              		.cfi_offset 14, -4
 382 0002 00AF     		add	r7, sp, #0
 383              		.cfi_def_cfa_register 7
  95:main.c        ****     // Sensor has detected WHITE
  96:main.c        ****     s3 = 1; // , Black = 0, White = 1
 384              		.loc 1 96 0
 385 0004 034B     		ldr	r3, .L12
 386 0006 0122     		movs	r2, #1
 387 0008 1A70     		strb	r2, [r3]
  97:main.c        ****     LED_Write(1u);
 388              		.loc 1 97 0
 389 000a 0120     		movs	r0, #1
 390 000c FFF7FEFF 		bl	LED_Write
  98:main.c        **** }
 391              		.loc 1 98 0
 392 0010 00BF     		nop
 393 0012 80BD     		pop	{r7, pc}
 394              	.L13:
 395              		.align	2
 396              	.L12:
 397 0014 00000000 		.word	s3
 398              		.cfi_endproc
 399              	.LFE67:
 400              		.size	S3_DETECTED, .-S3_DETECTED
 401              		.section	.text.S4_DETECTED,"ax",%progbits
 402              		.align	2
 403              		.global	S4_DETECTED
 404              		.thumb
 405              		.thumb_func
 406              		.type	S4_DETECTED, %function
 407              	S4_DETECTED:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 10


 408              	.LFB68:
  99:main.c        **** 
 100:main.c        **** CY_ISR(S4_DETECTED) {
 409              		.loc 1 100 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 1, uses_anonymous_args = 0
 413 0000 80B5     		push	{r7, lr}
 414              		.cfi_def_cfa_offset 8
 415              		.cfi_offset 7, -8
 416              		.cfi_offset 14, -4
 417 0002 00AF     		add	r7, sp, #0
 418              		.cfi_def_cfa_register 7
 101:main.c        ****     // Sensor has detected WHITE
 102:main.c        ****     s4 = 1; // , Black = 0, White = 1
 419              		.loc 1 102 0
 420 0004 034B     		ldr	r3, .L15
 421 0006 0122     		movs	r2, #1
 422 0008 1A70     		strb	r2, [r3]
 103:main.c        ****     LED_Write(1u);
 423              		.loc 1 103 0
 424 000a 0120     		movs	r0, #1
 425 000c FFF7FEFF 		bl	LED_Write
 104:main.c        **** }
 426              		.loc 1 104 0
 427 0010 00BF     		nop
 428 0012 80BD     		pop	{r7, pc}
 429              	.L16:
 430              		.align	2
 431              	.L15:
 432 0014 00000000 		.word	s4
 433              		.cfi_endproc
 434              	.LFE68:
 435              		.size	S4_DETECTED, .-S4_DETECTED
 436              		.section	.text.S5_DETECTED,"ax",%progbits
 437              		.align	2
 438              		.global	S5_DETECTED
 439              		.thumb
 440              		.thumb_func
 441              		.type	S5_DETECTED, %function
 442              	S5_DETECTED:
 443              	.LFB69:
 105:main.c        **** 
 106:main.c        **** CY_ISR(S5_DETECTED) {
 444              		.loc 1 106 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 1, uses_anonymous_args = 0
 448 0000 80B5     		push	{r7, lr}
 449              		.cfi_def_cfa_offset 8
 450              		.cfi_offset 7, -8
 451              		.cfi_offset 14, -4
 452 0002 00AF     		add	r7, sp, #0
 453              		.cfi_def_cfa_register 7
 107:main.c        ****     // Sensor has detected WHITE
 108:main.c        ****     s5 = 1; // , Black = 0, White = 1
 454              		.loc 1 108 0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 11


 455 0004 034B     		ldr	r3, .L18
 456 0006 0122     		movs	r2, #1
 457 0008 1A70     		strb	r2, [r3]
 109:main.c        ****     LED_Write(1u);
 458              		.loc 1 109 0
 459 000a 0120     		movs	r0, #1
 460 000c FFF7FEFF 		bl	LED_Write
 110:main.c        **** }
 461              		.loc 1 110 0
 462 0010 00BF     		nop
 463 0012 80BD     		pop	{r7, pc}
 464              	.L19:
 465              		.align	2
 466              	.L18:
 467 0014 00000000 		.word	s5
 468              		.cfi_endproc
 469              	.LFE69:
 470              		.size	S5_DETECTED, .-S5_DETECTED
 471              		.section	.text.S6_DETECTED,"ax",%progbits
 472              		.align	2
 473              		.global	S6_DETECTED
 474              		.thumb
 475              		.thumb_func
 476              		.type	S6_DETECTED, %function
 477              	S6_DETECTED:
 478              	.LFB70:
 111:main.c        **** 
 112:main.c        **** CY_ISR(S6_DETECTED) {
 479              		.loc 1 112 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 1, uses_anonymous_args = 0
 483 0000 80B5     		push	{r7, lr}
 484              		.cfi_def_cfa_offset 8
 485              		.cfi_offset 7, -8
 486              		.cfi_offset 14, -4
 487 0002 00AF     		add	r7, sp, #0
 488              		.cfi_def_cfa_register 7
 113:main.c        ****     // Sensor has detected WHITE
 114:main.c        ****     s6 = 1; // , Black = 0, White = 1
 489              		.loc 1 114 0
 490 0004 034B     		ldr	r3, .L21
 491 0006 0122     		movs	r2, #1
 492 0008 1A70     		strb	r2, [r3]
 115:main.c        ****     LED_Write(1u);
 493              		.loc 1 115 0
 494 000a 0120     		movs	r0, #1
 495 000c FFF7FEFF 		bl	LED_Write
 116:main.c        **** }
 496              		.loc 1 116 0
 497 0010 00BF     		nop
 498 0012 80BD     		pop	{r7, pc}
 499              	.L22:
 500              		.align	2
 501              	.L21:
 502 0014 00000000 		.word	s6
 503              		.cfi_endproc
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 12


 504              	.LFE70:
 505              		.size	S6_DETECTED, .-S6_DETECTED
 506              		.section	.text.TIMER_FINISH,"ax",%progbits
 507              		.align	2
 508              		.global	TIMER_FINISH
 509              		.thumb
 510              		.thumb_func
 511              		.type	TIMER_FINISH, %function
 512              	TIMER_FINISH:
 513              	.LFB71:
 117:main.c        **** 
 118:main.c        **** CY_ISR(TIMER_FINISH) {
 514              		.loc 1 118 0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 1, uses_anonymous_args = 0
 518 0000 80B5     		push	{r7, lr}
 519              		.cfi_def_cfa_offset 8
 520              		.cfi_offset 7, -8
 521              		.cfi_offset 14, -4
 522 0002 00AF     		add	r7, sp, #0
 523              		.cfi_def_cfa_register 7
 119:main.c        ****     // Check flags, set LEDs to high
 120:main.c        ****     if(s1 || s2 || s3 || s4 || s5 || s6) {
 524              		.loc 1 120 0
 525 0004 114B     		ldr	r3, .L25
 526 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 527 0008 002B     		cmp	r3, #0
 528 000a 16D1     		bne	.L24
 529              		.loc 1 120 0 is_stmt 0 discriminator 1
 530 000c 104B     		ldr	r3, .L25+4
 531 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 532 0010 002B     		cmp	r3, #0
 533 0012 12D1     		bne	.L24
 534              		.loc 1 120 0 discriminator 2
 535 0014 0F4B     		ldr	r3, .L25+8
 536 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 537 0018 002B     		cmp	r3, #0
 538 001a 0ED1     		bne	.L24
 539              		.loc 1 120 0 discriminator 3
 540 001c 0E4B     		ldr	r3, .L25+12
 541 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 542 0020 002B     		cmp	r3, #0
 543 0022 0AD1     		bne	.L24
 544              		.loc 1 120 0 discriminator 4
 545 0024 0D4B     		ldr	r3, .L25+16
 546 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 547 0028 002B     		cmp	r3, #0
 548 002a 06D1     		bne	.L24
 549              		.loc 1 120 0 discriminator 5
 550 002c 0C4B     		ldr	r3, .L25+20
 551 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 552 0030 002B     		cmp	r3, #0
 553 0032 02D1     		bne	.L24
 121:main.c        ****         //LED_Write(1u);
 122:main.c        ****     } else {
 123:main.c        ****         LED_Write(0u);
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 13


 554              		.loc 1 123 0 is_stmt 1
 555 0034 0020     		movs	r0, #0
 556 0036 FFF7FEFF 		bl	LED_Write
 557              	.L24:
 124:main.c        ****     }
 125:main.c        ****     
 126:main.c        ****     // Reset Sensor Flags for Next rising Eddge
 127:main.c        ****     // (s1 = 0, s2 = 0... etc.)
 128:main.c        ****     SetRobotMovement();
 558              		.loc 1 128 0
 559 003a FFF7FEFF 		bl	SetRobotMovement
 129:main.c        ****     ResetSensorFlags();
 560              		.loc 1 129 0
 561 003e FFF7FEFF 		bl	ResetSensorFlags
 130:main.c        **** 
 131:main.c        ****     Timer_LED_ReadStatusRegister();
 562              		.loc 1 131 0
 563 0042 FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 132:main.c        **** }
 564              		.loc 1 132 0
 565 0046 00BF     		nop
 566 0048 80BD     		pop	{r7, pc}
 567              	.L26:
 568 004a 00BF     		.align	2
 569              	.L25:
 570 004c 00000000 		.word	s1
 571 0050 00000000 		.word	s2
 572 0054 00000000 		.word	s3
 573 0058 00000000 		.word	s4
 574 005c 00000000 		.word	s5
 575 0060 00000000 		.word	s6
 576              		.cfi_endproc
 577              	.LFE71:
 578              		.size	TIMER_FINISH, .-TIMER_FINISH
 579              		.section	.rodata
 580              		.align	2
 581              	.LC0:
 582 0000 496E6974 		.ascii	"Initialised UART\000"
 582      69616C69 
 582      73656420 
 582      55415254 
 582      00
 583 0011 000000   		.align	2
 584              	.LC1:
 585 0014 256C7500 		.ascii	"%lu\000"
 586              		.align	2
 587              	.LC2:
 588 0018 2000     		.ascii	" \000"
 589              		.section	.text.main,"ax",%progbits
 590              		.align	2
 591              		.global	main
 592              		.thumb
 593              		.thumb_func
 594              		.type	main, %function
 595              	main:
 596              	.LFB72:
 133:main.c        **** 
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 14


 134:main.c        **** 
 135:main.c        **** int main()
 136:main.c        **** {
 597              		.loc 1 136 0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 1, uses_anonymous_args = 0
 601 0000 80B5     		push	{r7, lr}
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 7, -8
 604              		.cfi_offset 14, -4
 605 0002 00AF     		add	r7, sp, #0
 606              		.cfi_def_cfa_register 7
 137:main.c        **** // --------------------------------    
 138:main.c        **** // ----- INITIALIZATIONS ----------
 139:main.c        ****     CYGlobalIntEnable;
 607              		.loc 1 139 0
 608              		.syntax unified
 609              	@ 139 "main.c" 1
 610 0004 62B6     		CPSIE   i
 611              	@ 0 "" 2
 140:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 612              		.loc 1 140 0
 613              		.thumb
 614              		.syntax unified
 615 0006 FFF7FEFF 		bl	init
 141:main.c        ****     //findPath(map, "");// find shortest path- store this in map
 142:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 616              		.loc 1 142 0
 617 000a 2548     		ldr	r0, .L31
 618 000c FFF7FEFF 		bl	isr_speed_StartEx
 143:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 619              		.loc 1 143 0
 620 0010 2448     		ldr	r0, .L31+4
 621 0012 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 144:main.c        ****     S1_detected_StartEx(S1_DETECTED);
 622              		.loc 1 144 0
 623 0016 2448     		ldr	r0, .L31+8
 624 0018 FFF7FEFF 		bl	S1_detected_StartEx
 145:main.c        ****     S2_detected_StartEx(S2_DETECTED);
 625              		.loc 1 145 0
 626 001c 2348     		ldr	r0, .L31+12
 627 001e FFF7FEFF 		bl	S2_detected_StartEx
 146:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 628              		.loc 1 146 0
 629 0022 2348     		ldr	r0, .L31+16
 630 0024 FFF7FEFF 		bl	S3_detected_StartEx
 147:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 631              		.loc 1 147 0
 632 0028 2248     		ldr	r0, .L31+20
 633 002a FFF7FEFF 		bl	S4_detected_StartEx
 148:main.c        ****     S5_detected_StartEx(S5_DETECTED);
 634              		.loc 1 148 0
 635 002e 2248     		ldr	r0, .L31+24
 636 0030 FFF7FEFF 		bl	S5_detected_StartEx
 149:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 637              		.loc 1 149 0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 15


 638 0034 2148     		ldr	r0, .L31+28
 639 0036 FFF7FEFF 		bl	S6_detected_StartEx
 150:main.c        ****     Timer_LED_Start();
 640              		.loc 1 150 0
 641 003a FFF7FEFF 		bl	Timer_LED_Start
 151:main.c        ****     stopMoving();
 642              		.loc 1 151 0
 643 003e FFF7FEFF 		bl	stopMoving
 152:main.c        **** 
 153:main.c        **** // ------USB SETUP ----------------    
 154:main.c        **** #ifdef USE_USB    
 155:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 644              		.loc 1 155 0
 645 0042 0121     		movs	r1, #1
 646 0044 0020     		movs	r0, #0
 647 0046 FFF7FEFF 		bl	USBUART_Start
 156:main.c        **** #endif        
 157:main.c        ****     RF_BT_SELECT_Write(0);
 648              		.loc 1 157 0
 649 004a 0020     		movs	r0, #0
 650 004c FFF7FEFF 		bl	RF_BT_SELECT_Write
 158:main.c        ****     
 159:main.c        ****     usbPutString("Initialised UART");
 651              		.loc 1 159 0
 652 0050 1B48     		ldr	r0, .L31+32
 653 0052 FFF7FEFF 		bl	usbPutString
 654              	.L30:
 160:main.c        ****     for(;;)
 161:main.c        ****     {
 162:main.c        ****         //traverseMap(map);
 163:main.c        ****         //rotationAntiClockwise();
 164:main.c        ****         //rotationClockwise();
 165:main.c        ****         
 166:main.c        ****         
 167:main.c        ****         
 168:main.c        ****         if(timerInt == 1) {
 655              		.loc 1 168 0
 656 0056 1B4B     		ldr	r3, .L31+36
 657 0058 1B68     		ldr	r3, [r3]
 658 005a 012B     		cmp	r3, #1
 659 005c 15D1     		bne	.L28
 169:main.c        ****             timerInt = 0;
 660              		.loc 1 169 0
 661 005e 194B     		ldr	r3, .L31+36
 662 0060 0022     		movs	r2, #0
 663 0062 1A60     		str	r2, [r3]
 170:main.c        ****             // calculate RPM of M2
 171:main.c        ****             quadCountToRPM(quadDec2Count);
 664              		.loc 1 171 0
 665 0064 184B     		ldr	r3, .L31+40
 666 0066 1B68     		ldr	r3, [r3]
 667 0068 9BB2     		uxth	r3, r3
 668 006a 1846     		mov	r0, r3
 669 006c FFF7FEFF 		bl	quadCountToRPM
 172:main.c        ****             sprintf(buffer, "%lu", totalDistance);
 670              		.loc 1 172 0
 671 0070 164B     		ldr	r3, .L31+44
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 16


 672 0072 1B68     		ldr	r3, [r3]
 673 0074 1A46     		mov	r2, r3
 674 0076 1649     		ldr	r1, .L31+48
 675 0078 1648     		ldr	r0, .L31+52
 676 007a FFF7FEFF 		bl	sprintf
 173:main.c        ****             usbPutString(buffer);
 677              		.loc 1 173 0
 678 007e 1548     		ldr	r0, .L31+52
 679 0080 FFF7FEFF 		bl	usbPutString
 174:main.c        ****             usbPutString(" ");
 680              		.loc 1 174 0
 681 0084 1448     		ldr	r0, .L31+56
 682 0086 FFF7FEFF 		bl	usbPutString
 683              	.L28:
 175:main.c        ****         }
 176:main.c        ****         handle_usb();
 684              		.loc 1 176 0
 685 008a FFF7FEFF 		bl	handle_usb
 177:main.c        ****         if (flag_KB_string == 1)
 686              		.loc 1 177 0
 687 008e 134B     		ldr	r3, .L31+60
 688 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 689 0092 012B     		cmp	r3, #1
 690 0094 DFD1     		bne	.L30
 178:main.c        ****         {
 179:main.c        ****             //usbPutString("Total Distance: ");
 180:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 181:main.c        ****             //usbPutString(buffer);
 182:main.c        ****             flag_KB_string = 0;
 691              		.loc 1 182 0
 692 0096 114B     		ldr	r3, .L31+60
 693 0098 0022     		movs	r2, #0
 694 009a 1A70     		strb	r2, [r3]
 183:main.c        ****         }           
 184:main.c        ****     }
 695              		.loc 1 184 0
 696 009c DBE7     		b	.L30
 697              	.L32:
 698 009e 00BF     		.align	2
 699              	.L31:
 700 00a0 00000000 		.word	speedTimer
 701 00a4 00000000 		.word	TIMER_FINISH
 702 00a8 00000000 		.word	S1_DETECTED
 703 00ac 00000000 		.word	S2_DETECTED
 704 00b0 00000000 		.word	S3_DETECTED
 705 00b4 00000000 		.word	S4_DETECTED
 706 00b8 00000000 		.word	S5_DETECTED
 707 00bc 00000000 		.word	S6_DETECTED
 708 00c0 00000000 		.word	.LC0
 709 00c4 00000000 		.word	timerInt
 710 00c8 00000000 		.word	quadDec2Count
 711 00cc 00000000 		.word	totalDistance
 712 00d0 14000000 		.word	.LC1
 713 00d4 00000000 		.word	buffer
 714 00d8 18000000 		.word	.LC2
 715 00dc 00000000 		.word	flag_KB_string
 716              		.cfi_endproc
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 17


 717              	.LFE72:
 718              		.size	main, .-main
 719              		.global	__aeabi_d2f
 720              		.global	__aeabi_fmul
 721              		.global	__aeabi_f2iz
 722              		.section	.rodata
 723 001a 0000     		.align	2
 724              	.LC3:
 725 001c 256400   		.ascii	"%d\000"
 726              		.section	.text.quadCountToRPM,"ax",%progbits
 727              		.align	2
 728              		.global	quadCountToRPM
 729              		.thumb
 730              		.thumb_func
 731              		.type	quadCountToRPM, %function
 732              	quadCountToRPM:
 733              	.LFB73:
 185:main.c        ****     return 0;
 186:main.c        **** }
 187:main.c        **** 
 188:main.c        **** // Calculations
 189:main.c        **** //* ========================================
 190:main.c        **** int16 quadCountToRPM(uint16 count)
 191:main.c        **** {
 734              		.loc 1 191 0
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 16
 737              		@ frame_needed = 1, uses_anonymous_args = 0
 738 0000 90B5     		push	{r4, r7, lr}
 739              		.cfi_def_cfa_offset 12
 740              		.cfi_offset 4, -12
 741              		.cfi_offset 7, -8
 742              		.cfi_offset 14, -4
 743 0002 85B0     		sub	sp, sp, #20
 744              		.cfi_def_cfa_offset 32
 745 0004 00AF     		add	r7, sp, #0
 746              		.cfi_def_cfa_register 7
 747 0006 0346     		mov	r3, r0
 748 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 192:main.c        ****     float cps = count/57.00;
 749              		.loc 1 192 0
 750 000a FB88     		ldrh	r3, [r7, #6]
 751 000c 1846     		mov	r0, r3
 752 000e FFF7FEFF 		bl	__aeabi_i2d
 753 0012 4FF00002 		mov	r2, #0
 754 0016 114B     		ldr	r3, .L35
 755 0018 FFF7FEFF 		bl	__aeabi_ddiv
 756 001c 0346     		mov	r3, r0
 757 001e 0C46     		mov	r4, r1
 758 0020 1846     		mov	r0, r3
 759 0022 2146     		mov	r1, r4
 760 0024 FFF7FEFF 		bl	__aeabi_d2f
 761 0028 0346     		mov	r3, r0
 762 002a FB60     		str	r3, [r7, #12]	@ float
 193:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 763              		.loc 1 193 0
 764 002c 0C49     		ldr	r1, .L35+4
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 18


 765 002e F868     		ldr	r0, [r7, #12]	@ float
 766 0030 FFF7FEFF 		bl	__aeabi_fmul
 767 0034 0346     		mov	r3, r0
 768 0036 1846     		mov	r0, r3
 769 0038 FFF7FEFF 		bl	__aeabi_f2iz
 770 003c 0346     		mov	r3, r0
 771 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 194:main.c        ****     sprintf(buffer, "%d", rpm); // store in buffer
 772              		.loc 1 194 0
 773 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 774 0044 1A46     		mov	r2, r3
 775 0046 0749     		ldr	r1, .L35+8
 776 0048 0748     		ldr	r0, .L35+12
 777 004a FFF7FEFF 		bl	sprintf
 195:main.c        ****     return rpm;
 778              		.loc 1 195 0
 779 004e B7F90A30 		ldrsh	r3, [r7, #10]
 196:main.c        ****     //usbPutString(buffer);
 197:main.c        ****     //usbPutString("rpm ");
 198:main.c        **** }
 780              		.loc 1 198 0
 781 0052 1846     		mov	r0, r3
 782 0054 1437     		adds	r7, r7, #20
 783              		.cfi_def_cfa_offset 12
 784 0056 BD46     		mov	sp, r7
 785              		.cfi_def_cfa_register 13
 786              		@ sp needed
 787 0058 90BD     		pop	{r4, r7, pc}
 788              	.L36:
 789 005a 00BF     		.align	2
 790              	.L35:
 791 005c 00804C40 		.word	1078755328
 792 0060 00007041 		.word	1097859072
 793 0064 1C000000 		.word	.LC3
 794 0068 00000000 		.word	buffer
 795              		.cfi_endproc
 796              	.LFE73:
 797              		.size	quadCountToRPM, .-quadCountToRPM
 798              		.section	.text.ResetSensorFlags,"ax",%progbits
 799              		.align	2
 800              		.global	ResetSensorFlags
 801              		.thumb
 802              		.thumb_func
 803              		.type	ResetSensorFlags, %function
 804              	ResetSensorFlags:
 805              	.LFB74:
 199:main.c        **** 
 200:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
 201:main.c        **** void ResetSensorFlags() {
 806              		.loc 1 201 0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 0
 809              		@ frame_needed = 1, uses_anonymous_args = 0
 810              		@ link register save eliminated.
 811 0000 80B4     		push	{r7}
 812              		.cfi_def_cfa_offset 4
 813              		.cfi_offset 7, -4
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 19


 814 0002 00AF     		add	r7, sp, #0
 815              		.cfi_def_cfa_register 7
 202:main.c        ****     s1 = 0;
 816              		.loc 1 202 0
 817 0004 0A4B     		ldr	r3, .L38
 818 0006 0022     		movs	r2, #0
 819 0008 1A70     		strb	r2, [r3]
 203:main.c        ****     s2 = 0;
 820              		.loc 1 203 0
 821 000a 0A4B     		ldr	r3, .L38+4
 822 000c 0022     		movs	r2, #0
 823 000e 1A70     		strb	r2, [r3]
 204:main.c        ****     s3 = 0;
 824              		.loc 1 204 0
 825 0010 094B     		ldr	r3, .L38+8
 826 0012 0022     		movs	r2, #0
 827 0014 1A70     		strb	r2, [r3]
 205:main.c        ****     s4 = 0;
 828              		.loc 1 205 0
 829 0016 094B     		ldr	r3, .L38+12
 830 0018 0022     		movs	r2, #0
 831 001a 1A70     		strb	r2, [r3]
 206:main.c        ****     s5 = 0;
 832              		.loc 1 206 0
 833 001c 084B     		ldr	r3, .L38+16
 834 001e 0022     		movs	r2, #0
 835 0020 1A70     		strb	r2, [r3]
 207:main.c        ****     s6 = 0;
 836              		.loc 1 207 0
 837 0022 084B     		ldr	r3, .L38+20
 838 0024 0022     		movs	r2, #0
 839 0026 1A70     		strb	r2, [r3]
 208:main.c        **** }
 840              		.loc 1 208 0
 841 0028 00BF     		nop
 842 002a BD46     		mov	sp, r7
 843              		.cfi_def_cfa_register 13
 844              		@ sp needed
 845 002c 80BC     		pop	{r7}
 846              		.cfi_restore 7
 847              		.cfi_def_cfa_offset 0
 848 002e 7047     		bx	lr
 849              	.L39:
 850              		.align	2
 851              	.L38:
 852 0030 00000000 		.word	s1
 853 0034 00000000 		.word	s2
 854 0038 00000000 		.word	s3
 855 003c 00000000 		.word	s4
 856 0040 00000000 		.word	s5
 857 0044 00000000 		.word	s6
 858              		.cfi_endproc
 859              	.LFE74:
 860              		.size	ResetSensorFlags, .-ResetSensorFlags
 861              		.section	.text.CheckSensorDirection,"ax",%progbits
 862              		.align	2
 863              		.global	CheckSensorDirection
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 20


 864              		.thumb
 865              		.thumb_func
 866              		.type	CheckSensorDirection, %function
 867              	CheckSensorDirection:
 868              	.LFB75:
 209:main.c        **** 
 210:main.c        **** // This function checks the sensor flags s1-s6 through a boolean truth table and
 211:main.c        **** // returns a enum direction state depending on the flag configuration
 212:main.c        **** // if no conditons are met, it returns Unknown -- need to fix this edge case
 213:main.c        **** // s1 = 0 -- Black
 214:main.c        **** // s1 = 1 -- White
 215:main.c        **** enum DirectionState CheckSensorDirection() {
 869              		.loc 1 215 0
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 8
 872              		@ frame_needed = 1, uses_anonymous_args = 0
 873              		@ link register save eliminated.
 874 0000 80B4     		push	{r7}
 875              		.cfi_def_cfa_offset 4
 876              		.cfi_offset 7, -4
 877 0002 83B0     		sub	sp, sp, #12
 878              		.cfi_def_cfa_offset 16
 879 0004 00AF     		add	r7, sp, #0
 880              		.cfi_def_cfa_register 7
 216:main.c        ****     enum DirectionState directionState = Stop;
 881              		.loc 1 216 0
 882 0006 0523     		movs	r3, #5
 883 0008 7B60     		str	r3, [r7, #4]
 217:main.c        ****     previousDirection = currentDirection;
 884              		.loc 1 217 0
 885 000a 534B     		ldr	r3, .L51
 886 000c 1B68     		ldr	r3, [r3]
 887 000e 534A     		ldr	r2, .L51+4
 888 0010 1360     		str	r3, [r2]
 218:main.c        ****     
 219:main.c        ****     //forward if all sensors are on white
 220:main.c        ****     if (s1 && s2 && s3 && s4 & s5 && s6) {
 889              		.loc 1 220 0
 890 0012 534B     		ldr	r3, .L51+8
 891 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 892 0016 002B     		cmp	r3, #0
 893 0018 17D0     		beq	.L41
 894              		.loc 1 220 0 is_stmt 0 discriminator 1
 895 001a 524B     		ldr	r3, .L51+12
 896 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 897 001e 002B     		cmp	r3, #0
 898 0020 13D0     		beq	.L41
 899              		.loc 1 220 0 discriminator 2
 900 0022 514B     		ldr	r3, .L51+16
 901 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 902 0026 002B     		cmp	r3, #0
 903 0028 0FD0     		beq	.L41
 904              		.loc 1 220 0 discriminator 3
 905 002a 504B     		ldr	r3, .L51+20
 906 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 907 002e 504B     		ldr	r3, .L51+24
 908 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 21


 909 0032 1340     		ands	r3, r3, r2
 910 0034 DBB2     		uxtb	r3, r3
 911 0036 002B     		cmp	r3, #0
 912 0038 07D0     		beq	.L41
 913              		.loc 1 220 0 discriminator 4
 914 003a 4E4B     		ldr	r3, .L51+28
 915 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 916 003e 002B     		cmp	r3, #0
 917 0040 03D0     		beq	.L41
 221:main.c        ****         directionState = Forward;
 918              		.loc 1 221 0 is_stmt 1
 919 0042 0023     		movs	r3, #0
 920 0044 7B60     		str	r3, [r7, #4]
 222:main.c        ****         return directionState;   
 921              		.loc 1 222 0
 922 0046 7B68     		ldr	r3, [r7, #4]
 923 0048 81E0     		b	.L42
 924              	.L41:
 223:main.c        ****     }
 224:main.c        ****     
 225:main.c        ****     /* COURSE CORRECTION COURSE CORRECTION COURSE CORRETION */
 226:main.c        ****     // Only need to course corrcet when direction state is forward
 227:main.c        ****     
 228:main.c        ****     if (previousDirection == Forward || previousDirection == AdjustToTheLeft || previousDirection =
 925              		.loc 1 228 0
 926 004a 444B     		ldr	r3, .L51+4
 927 004c 1B68     		ldr	r3, [r3]
 928 004e 002B     		cmp	r3, #0
 929 0050 07D0     		beq	.L43
 930              		.loc 1 228 0 is_stmt 0 discriminator 1
 931 0052 424B     		ldr	r3, .L51+4
 932 0054 1B68     		ldr	r3, [r3]
 933 0056 032B     		cmp	r3, #3
 934 0058 03D0     		beq	.L43
 935              		.loc 1 228 0 discriminator 2
 936 005a 404B     		ldr	r3, .L51+4
 937 005c 1B68     		ldr	r3, [r3]
 938 005e 042B     		cmp	r3, #4
 939 0060 37D1     		bne	.L44
 940              	.L43:
 229:main.c        ****         // If robot is deviating to the left where top right sensor and bottom left sensor is on bl
 230:main.c        ****         // we turn right until all sensors are on white again
 231:main.c        ****         if (!s1 && s2 && s3 && s4 && s5 && !s6) {
 941              		.loc 1 231 0 is_stmt 1
 942 0062 3F4B     		ldr	r3, .L51+8
 943 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 944 0066 002B     		cmp	r3, #0
 945 0068 17D1     		bne	.L45
 946              		.loc 1 231 0 is_stmt 0 discriminator 1
 947 006a 3E4B     		ldr	r3, .L51+12
 948 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 949 006e 002B     		cmp	r3, #0
 950 0070 13D0     		beq	.L45
 951              		.loc 1 231 0 discriminator 2
 952 0072 3D4B     		ldr	r3, .L51+16
 953 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 954 0076 002B     		cmp	r3, #0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 22


 955 0078 0FD0     		beq	.L45
 956              		.loc 1 231 0 discriminator 3
 957 007a 3C4B     		ldr	r3, .L51+20
 958 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 959 007e 002B     		cmp	r3, #0
 960 0080 0BD0     		beq	.L45
 961              		.loc 1 231 0 discriminator 4
 962 0082 3B4B     		ldr	r3, .L51+24
 963 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 964 0086 002B     		cmp	r3, #0
 965 0088 07D0     		beq	.L45
 966              		.loc 1 231 0 discriminator 5
 967 008a 3A4B     		ldr	r3, .L51+28
 968 008c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 969 008e 002B     		cmp	r3, #0
 970 0090 03D1     		bne	.L45
 232:main.c        ****             directionState = AdjustToTheRight;
 971              		.loc 1 232 0 is_stmt 1
 972 0092 0423     		movs	r3, #4
 973 0094 7B60     		str	r3, [r7, #4]
 233:main.c        ****             return directionState;
 974              		.loc 1 233 0
 975 0096 7B68     		ldr	r3, [r7, #4]
 976 0098 59E0     		b	.L42
 977              	.L45:
 234:main.c        ****         }
 235:main.c        ****         
 236:main.c        ****         // If robot is deviating to the right where top left sensor and bottom right sensor is on b
 237:main.c        ****         // we turn left until all sensors are on white again
 238:main.c        ****         if (s1 && !s2 && s3 && s4 && !s5 && s6) {
 978              		.loc 1 238 0
 979 009a 314B     		ldr	r3, .L51+8
 980 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 981 009e 002B     		cmp	r3, #0
 982 00a0 17D0     		beq	.L44
 983              		.loc 1 238 0 is_stmt 0 discriminator 1
 984 00a2 304B     		ldr	r3, .L51+12
 985 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 986 00a6 002B     		cmp	r3, #0
 987 00a8 13D1     		bne	.L44
 988              		.loc 1 238 0 discriminator 2
 989 00aa 2F4B     		ldr	r3, .L51+16
 990 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 991 00ae 002B     		cmp	r3, #0
 992 00b0 0FD0     		beq	.L44
 993              		.loc 1 238 0 discriminator 3
 994 00b2 2E4B     		ldr	r3, .L51+20
 995 00b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 996 00b6 002B     		cmp	r3, #0
 997 00b8 0BD0     		beq	.L44
 998              		.loc 1 238 0 discriminator 4
 999 00ba 2D4B     		ldr	r3, .L51+24
 1000 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1001 00be 002B     		cmp	r3, #0
 1002 00c0 07D1     		bne	.L44
 1003              		.loc 1 238 0 discriminator 5
 1004 00c2 2C4B     		ldr	r3, .L51+28
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 23


 1005 00c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1006 00c6 002B     		cmp	r3, #0
 1007 00c8 03D0     		beq	.L44
 239:main.c        ****             directionState = AdjustToTheLeft;
 1008              		.loc 1 239 0 is_stmt 1
 1009 00ca 0323     		movs	r3, #3
 1010 00cc 7B60     		str	r3, [r7, #4]
 240:main.c        ****             return directionState;
 1011              		.loc 1 240 0
 1012 00ce 7B68     		ldr	r3, [r7, #4]
 1013 00d0 3DE0     		b	.L42
 1014              	.L44:
 241:main.c        ****         }
 242:main.c        ****     }
 243:main.c        ****     /* COURSE CORRECTION COURSE CORRECTION COURSE CORRETION */
 244:main.c        ****     
 245:main.c        ****     // Left sensor is on black and right sensor is on white
 246:main.c        ****     //turn left
 247:main.c        ****     if (!s3 && s4) {
 1015              		.loc 1 247 0
 1016 00d2 254B     		ldr	r3, .L51+16
 1017 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1018 00d6 002B     		cmp	r3, #0
 1019 00d8 07D1     		bne	.L46
 1020              		.loc 1 247 0 is_stmt 0 discriminator 1
 1021 00da 244B     		ldr	r3, .L51+20
 1022 00dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1023 00de 002B     		cmp	r3, #0
 1024 00e0 03D0     		beq	.L46
 248:main.c        ****         directionState = TurnLeft;
 1025              		.loc 1 248 0 is_stmt 1
 1026 00e2 0223     		movs	r3, #2
 1027 00e4 7B60     		str	r3, [r7, #4]
 249:main.c        ****         return directionState;
 1028              		.loc 1 249 0
 1029 00e6 7B68     		ldr	r3, [r7, #4]
 1030 00e8 31E0     		b	.L42
 1031              	.L46:
 250:main.c        ****     }
 251:main.c        ****     
 252:main.c        ****     // Right sensor is on white and right sensor is on black
 253:main.c        ****     //turn right
 254:main.c        ****     if (s3 && !s4) {
 1032              		.loc 1 254 0
 1033 00ea 1F4B     		ldr	r3, .L51+16
 1034 00ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1035 00ee 002B     		cmp	r3, #0
 1036 00f0 07D0     		beq	.L47
 1037              		.loc 1 254 0 is_stmt 0 discriminator 1
 1038 00f2 1E4B     		ldr	r3, .L51+20
 1039 00f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1040 00f6 002B     		cmp	r3, #0
 1041 00f8 03D1     		bne	.L47
 255:main.c        ****         directionState = TurnRight;
 1042              		.loc 1 255 0 is_stmt 1
 1043 00fa 0123     		movs	r3, #1
 1044 00fc 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 24


 256:main.c        ****         return directionState;
 1045              		.loc 1 256 0
 1046 00fe 7B68     		ldr	r3, [r7, #4]
 1047 0100 25E0     		b	.L42
 1048              	.L47:
 257:main.c        ****     }
 258:main.c        ****     
 259:main.c        ****     // if all sensors are on black -- we are currently in darkness so don't move
 260:main.c        ****     if (!(s1 && s2 && s3 && s4&& s5 && s6)) {
 1049              		.loc 1 260 0
 1050 0102 174B     		ldr	r3, .L51+8
 1051 0104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1052 0106 002B     		cmp	r3, #0
 1053 0108 13D0     		beq	.L48
 1054              		.loc 1 260 0 is_stmt 0 discriminator 1
 1055 010a 164B     		ldr	r3, .L51+12
 1056 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1057 010e 002B     		cmp	r3, #0
 1058 0110 0FD0     		beq	.L48
 1059              		.loc 1 260 0 discriminator 2
 1060 0112 154B     		ldr	r3, .L51+16
 1061 0114 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1062 0116 002B     		cmp	r3, #0
 1063 0118 0BD0     		beq	.L48
 1064              		.loc 1 260 0 discriminator 3
 1065 011a 144B     		ldr	r3, .L51+20
 1066 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1067 011e 002B     		cmp	r3, #0
 1068 0120 07D0     		beq	.L48
 1069              		.loc 1 260 0 discriminator 4
 1070 0122 134B     		ldr	r3, .L51+24
 1071 0124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1072 0126 002B     		cmp	r3, #0
 1073 0128 03D0     		beq	.L48
 1074              		.loc 1 260 0 discriminator 5
 1075 012a 124B     		ldr	r3, .L51+28
 1076 012c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1077 012e 002B     		cmp	r3, #0
 1078 0130 03D1     		bne	.L49
 1079              	.L48:
 261:main.c        ****         directionState = Stop;
 1080              		.loc 1 261 0 is_stmt 1
 1081 0132 0523     		movs	r3, #5
 1082 0134 7B60     		str	r3, [r7, #4]
 262:main.c        ****         return directionState;
 1083              		.loc 1 262 0
 1084 0136 7B68     		ldr	r3, [r7, #4]
 1085 0138 09E0     		b	.L42
 1086              	.L49:
 263:main.c        ****     }
 264:main.c        ****     
 265:main.c        ****     // If the code gets up to this point then no conditions have been met
 266:main.c        ****     // The sensors are in a configuration that has not been covered
 267:main.c        ****     // The currentDirection to turn into is unknown.
 268:main.c        ****     
 269:main.c        ****     // if currentDirection is Unknown, we continue with the previous direction
 270:main.c        ****     // However, if the previous direction is also Unknown, we will just move forward.
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 25


 271:main.c        ****     if (previousDirection == Unknown) {
 1087              		.loc 1 271 0
 1088 013a 084B     		ldr	r3, .L51+4
 1089 013c 1B68     		ldr	r3, [r3]
 1090 013e 062B     		cmp	r3, #6
 1091 0140 03D1     		bne	.L50
 272:main.c        ****         directionState = Forward;
 1092              		.loc 1 272 0
 1093 0142 0023     		movs	r3, #0
 1094 0144 7B60     		str	r3, [r7, #4]
 273:main.c        ****         return directionState;
 1095              		.loc 1 273 0
 1096 0146 7B68     		ldr	r3, [r7, #4]
 1097 0148 01E0     		b	.L42
 1098              	.L50:
 274:main.c        ****     }
 275:main.c        ****             
 276:main.c        ****     return previousDirection;
 1099              		.loc 1 276 0
 1100 014a 044B     		ldr	r3, .L51+4
 1101 014c 1B68     		ldr	r3, [r3]
 1102              	.L42:
 277:main.c        **** }
 1103              		.loc 1 277 0
 1104 014e 1846     		mov	r0, r3
 1105 0150 0C37     		adds	r7, r7, #12
 1106              		.cfi_def_cfa_offset 4
 1107 0152 BD46     		mov	sp, r7
 1108              		.cfi_def_cfa_register 13
 1109              		@ sp needed
 1110 0154 80BC     		pop	{r7}
 1111              		.cfi_restore 7
 1112              		.cfi_def_cfa_offset 0
 1113 0156 7047     		bx	lr
 1114              	.L52:
 1115              		.align	2
 1116              	.L51:
 1117 0158 00000000 		.word	currentDirection
 1118 015c 00000000 		.word	previousDirection
 1119 0160 00000000 		.word	s1
 1120 0164 00000000 		.word	s2
 1121 0168 00000000 		.word	s3
 1122 016c 00000000 		.word	s4
 1123 0170 00000000 		.word	s5
 1124 0174 00000000 		.word	s6
 1125              		.cfi_endproc
 1126              	.LFE75:
 1127              		.size	CheckSensorDirection, .-CheckSensorDirection
 1128              		.section	.text.SetRobotMovement,"ax",%progbits
 1129              		.align	2
 1130              		.global	SetRobotMovement
 1131              		.thumb
 1132              		.thumb_func
 1133              		.type	SetRobotMovement, %function
 1134              	SetRobotMovement:
 1135              	.LFB76:
 278:main.c        **** 
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 26


 279:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 280:main.c        **** void SetRobotMovement() {
 1136              		.loc 1 280 0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 0
 1139              		@ frame_needed = 1, uses_anonymous_args = 0
 1140 0000 80B5     		push	{r7, lr}
 1141              		.cfi_def_cfa_offset 8
 1142              		.cfi_offset 7, -8
 1143              		.cfi_offset 14, -4
 1144 0002 00AF     		add	r7, sp, #0
 1145              		.cfi_def_cfa_register 7
 281:main.c        ****     currentDirection = CheckSensorDirection();   
 1146              		.loc 1 281 0
 1147 0004 FFF7FEFF 		bl	CheckSensorDirection
 1148 0008 0246     		mov	r2, r0
 1149 000a 164B     		ldr	r3, .L65
 1150 000c 1A60     		str	r2, [r3]
 282:main.c        ****     
 283:main.c        ****     switch (currentDirection) {
 1151              		.loc 1 283 0
 1152 000e 154B     		ldr	r3, .L65
 1153 0010 1B68     		ldr	r3, [r3]
 1154 0012 062B     		cmp	r3, #6
 1155 0014 23D8     		bhi	.L63
 1156 0016 01A2     		adr	r2, .L56
 1157 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1158              		.p2align 2
 1159              	.L56:
 1160 001c 39000000 		.word	.L55+1
 1161 0020 3F000000 		.word	.L57+1
 1162 0024 45000000 		.word	.L58+1
 1163 0028 51000000 		.word	.L59+1
 1164 002c 4B000000 		.word	.L60+1
 1165 0030 57000000 		.word	.L61+1
 1166 0034 5D000000 		.word	.L64+1
 1167              		.p2align 1
 1168              	.L55:
 284:main.c        ****         //Forward, TurnRight, TurnLeft, AdjustToTheRight, AdjustToTheLeft, Stop, Unknown
 285:main.c        ****         case Forward:
 286:main.c        ****             moveForward();
 1169              		.loc 1 286 0
 1170 0038 FFF7FEFF 		bl	moveForward
 287:main.c        ****             break;
 1171              		.loc 1 287 0
 1172 003c 0FE0     		b	.L54
 1173              	.L57:
 288:main.c        ****         case TurnRight:
 289:main.c        ****             rotationClockwise();
 1174              		.loc 1 289 0
 1175 003e FFF7FEFF 		bl	rotationClockwise
 290:main.c        ****             break;
 1176              		.loc 1 290 0
 1177 0042 0CE0     		b	.L54
 1178              	.L58:
 291:main.c        ****         case TurnLeft:
 292:main.c        ****             rotationAntiClockwise();
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 27


 1179              		.loc 1 292 0
 1180 0044 FFF7FEFF 		bl	rotationAntiClockwise
 293:main.c        ****             break;
 1181              		.loc 1 293 0
 1182 0048 09E0     		b	.L54
 1183              	.L60:
 294:main.c        ****         case AdjustToTheRight:
 295:main.c        ****             keepRotatingClockwise();
 1184              		.loc 1 295 0
 1185 004a FFF7FEFF 		bl	keepRotatingClockwise
 296:main.c        ****             break;
 1186              		.loc 1 296 0
 1187 004e 06E0     		b	.L54
 1188              	.L59:
 297:main.c        ****         case AdjustToTheLeft:
 298:main.c        ****             keepRotatingAntiClockwise();
 1189              		.loc 1 298 0
 1190 0050 FFF7FEFF 		bl	keepRotatingAntiClockwise
 299:main.c        ****             break;
 1191              		.loc 1 299 0
 1192 0054 03E0     		b	.L54
 1193              	.L61:
 300:main.c        ****         case Stop:
 301:main.c        ****             stopMoving();
 1194              		.loc 1 301 0
 1195 0056 FFF7FEFF 		bl	stopMoving
 302:main.c        ****             break;
 1196              		.loc 1 302 0
 1197 005a 00E0     		b	.L54
 1198              	.L64:
 303:main.c        ****         case Unknown:
 304:main.c        ****             // UNKNOWN CONFIGURATION
 305:main.c        ****             break;  
 1199              		.loc 1 305 0
 1200 005c 00BF     		nop
 1201              	.L54:
 1202              	.L63:
 306:main.c        ****     }
 307:main.c        **** }
 1203              		.loc 1 307 0
 1204 005e 00BF     		nop
 1205 0060 80BD     		pop	{r7, pc}
 1206              	.L66:
 1207 0062 00BF     		.align	2
 1208              	.L65:
 1209 0064 00000000 		.word	currentDirection
 1210              		.cfi_endproc
 1211              	.LFE76:
 1212              		.size	SetRobotMovement, .-SetRobotMovement
 1213              		.section	.text.usbPutString,"ax",%progbits
 1214              		.align	2
 1215              		.global	usbPutString
 1216              		.thumb
 1217              		.thumb_func
 1218              		.type	usbPutString, %function
 1219              	usbPutString:
 1220              	.LFB77:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 28


 308:main.c        **** 
 309:main.c        **** // ======================================
 310:main.c        **** // USBUART
 311:main.c        **** //* ========================================
 312:main.c        ****     void usbPutString(char *s)
 313:main.c        **** {
 1221              		.loc 1 313 0
 1222              		.cfi_startproc
 1223              		@ args = 0, pretend = 0, frame = 8
 1224              		@ frame_needed = 1, uses_anonymous_args = 0
 1225 0000 80B5     		push	{r7, lr}
 1226              		.cfi_def_cfa_offset 8
 1227              		.cfi_offset 7, -8
 1228              		.cfi_offset 14, -4
 1229 0002 82B0     		sub	sp, sp, #8
 1230              		.cfi_def_cfa_offset 16
 1231 0004 00AF     		add	r7, sp, #0
 1232              		.cfi_def_cfa_register 7
 1233 0006 7860     		str	r0, [r7, #4]
 314:main.c        **** // !! Assumes that *s is a string with allocated space >=64 chars     
 315:main.c        **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 316:main.c        **** //  length to 62 char (63rd char is a '!')
 317:main.c        **** 
 318:main.c        **** #ifdef USE_USB     
 319:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1234              		.loc 1 319 0
 1235 0008 00BF     		nop
 1236              	.L68:
 1237              		.loc 1 319 0 is_stmt 0 discriminator 1
 1238 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 1239 000e 0346     		mov	r3, r0
 1240 0010 002B     		cmp	r3, #0
 1241 0012 FAD0     		beq	.L68
 320:main.c        ****     s[63]='\0';
 1242              		.loc 1 320 0 is_stmt 1
 1243 0014 7B68     		ldr	r3, [r7, #4]
 1244 0016 3F33     		adds	r3, r3, #63
 1245 0018 0022     		movs	r2, #0
 1246 001a 1A70     		strb	r2, [r3]
 321:main.c        ****     s[62]='!';
 1247              		.loc 1 321 0
 1248 001c 7B68     		ldr	r3, [r7, #4]
 1249 001e 3E33     		adds	r3, r3, #62
 1250 0020 2122     		movs	r2, #33
 1251 0022 1A70     		strb	r2, [r3]
 322:main.c        ****     USBUART_PutData((uint8*)s,strlen(s));
 1252              		.loc 1 322 0
 1253 0024 7868     		ldr	r0, [r7, #4]
 1254 0026 FFF7FEFF 		bl	strlen
 1255 002a 0346     		mov	r3, r0
 1256 002c 9BB2     		uxth	r3, r3
 1257 002e 1946     		mov	r1, r3
 1258 0030 7868     		ldr	r0, [r7, #4]
 1259 0032 FFF7FEFF 		bl	USBUART_PutData
 323:main.c        **** #endif
 324:main.c        **** }
 1260              		.loc 1 324 0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 29


 1261 0036 00BF     		nop
 1262 0038 0837     		adds	r7, r7, #8
 1263              		.cfi_def_cfa_offset 8
 1264 003a BD46     		mov	sp, r7
 1265              		.cfi_def_cfa_register 13
 1266              		@ sp needed
 1267 003c 80BD     		pop	{r7, pc}
 1268              		.cfi_endproc
 1269              	.LFE77:
 1270              		.size	usbPutString, .-usbPutString
 1271 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 1272              		.align	2
 1273              		.global	usbPutChar
 1274              		.thumb
 1275              		.thumb_func
 1276              		.type	usbPutChar, %function
 1277              	usbPutChar:
 1278              	.LFB78:
 325:main.c        **** //* ========================================
 326:main.c        **** void usbPutChar(char c)
 327:main.c        **** {
 1279              		.loc 1 327 0
 1280              		.cfi_startproc
 1281              		@ args = 0, pretend = 0, frame = 8
 1282              		@ frame_needed = 1, uses_anonymous_args = 0
 1283 0000 80B5     		push	{r7, lr}
 1284              		.cfi_def_cfa_offset 8
 1285              		.cfi_offset 7, -8
 1286              		.cfi_offset 14, -4
 1287 0002 82B0     		sub	sp, sp, #8
 1288              		.cfi_def_cfa_offset 16
 1289 0004 00AF     		add	r7, sp, #0
 1290              		.cfi_def_cfa_register 7
 1291 0006 0346     		mov	r3, r0
 1292 0008 FB71     		strb	r3, [r7, #7]
 328:main.c        **** #ifdef USE_USB     
 329:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1293              		.loc 1 329 0
 1294 000a 00BF     		nop
 1295              	.L70:
 1296              		.loc 1 329 0 is_stmt 0 discriminator 1
 1297 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 1298 0010 0346     		mov	r3, r0
 1299 0012 002B     		cmp	r3, #0
 1300 0014 FAD0     		beq	.L70
 330:main.c        ****     USBUART_PutChar(c);
 1301              		.loc 1 330 0 is_stmt 1
 1302 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1303 0018 1846     		mov	r0, r3
 1304 001a FFF7FEFF 		bl	USBUART_PutChar
 331:main.c        **** #endif    
 332:main.c        **** }
 1305              		.loc 1 332 0
 1306 001e 00BF     		nop
 1307 0020 0837     		adds	r7, r7, #8
 1308              		.cfi_def_cfa_offset 8
 1309 0022 BD46     		mov	sp, r7
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 30


 1310              		.cfi_def_cfa_register 13
 1311              		@ sp needed
 1312 0024 80BD     		pop	{r7, pc}
 1313              		.cfi_endproc
 1314              	.LFE78:
 1315              		.size	usbPutChar, .-usbPutChar
 1316 0026 00BF     		.section	.text.handle_usb,"ax",%progbits
 1317              		.align	2
 1318              		.global	handle_usb
 1319              		.thumb
 1320              		.thumb_func
 1321              		.type	handle_usb, %function
 1322              	handle_usb:
 1323              	.LFB79:
 333:main.c        **** //* ========================================
 334:main.c        **** void handle_usb()
 335:main.c        **** {
 1324              		.loc 1 335 0
 1325              		.cfi_startproc
 1326              		@ args = 0, pretend = 0, frame = 8
 1327              		@ frame_needed = 1, uses_anonymous_args = 0
 1328 0000 80B5     		push	{r7, lr}
 1329              		.cfi_def_cfa_offset 8
 1330              		.cfi_offset 7, -8
 1331              		.cfi_offset 14, -4
 1332 0002 82B0     		sub	sp, sp, #8
 1333              		.cfi_def_cfa_offset 16
 1334 0004 00AF     		add	r7, sp, #0
 1335              		.cfi_def_cfa_register 7
 336:main.c        ****     // handles input at terminal, echos it back to the terminal
 337:main.c        ****     // turn echo OFF, key emulation: only CR
 338:main.c        ****     // entered string is made available in 'line' and 'flag_KB_string' is set
 339:main.c        ****     
 340:main.c        ****     static uint8 usbStarted = FALSE;
 341:main.c        ****     static uint16 usbBufCount = 0;
 342:main.c        ****     uint8 c; 
 343:main.c        ****     
 344:main.c        **** 
 345:main.c        ****     if (!usbStarted)
 1336              		.loc 1 345 0
 1337 0006 2B4B     		ldr	r3, .L81
 1338 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1339 000a 002B     		cmp	r3, #0
 1340 000c 0AD1     		bne	.L72
 346:main.c        ****     {
 347:main.c        ****         if (USBUART_GetConfiguration())
 1341              		.loc 1 347 0
 1342 000e FFF7FEFF 		bl	USBUART_GetConfiguration
 1343 0012 0346     		mov	r3, r0
 1344 0014 002B     		cmp	r3, #0
 1345 0016 49D0     		beq	.L80
 348:main.c        ****         {
 349:main.c        ****             USBUART_CDC_Init();
 1346              		.loc 1 349 0
 1347 0018 FFF7FEFF 		bl	USBUART_CDC_Init
 350:main.c        ****             usbStarted = TRUE;
 1348              		.loc 1 350 0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 31


 1349 001c 254B     		ldr	r3, .L81
 1350 001e 0122     		movs	r2, #1
 1351 0020 1A70     		strb	r2, [r3]
 351:main.c        ****         }
 352:main.c        ****     }
 353:main.c        ****     else
 354:main.c        ****     {
 355:main.c        ****         if (USBUART_DataIsReady() != 0)
 356:main.c        ****         {  
 357:main.c        ****             c = USBUART_GetChar();
 358:main.c        **** 
 359:main.c        ****             if ((c == 13) || (c == 10))
 360:main.c        ****             {
 361:main.c        **** //                if (usbBufCount > 0)
 362:main.c        ****                 {
 363:main.c        ****                     entry[usbBufCount]= '\0';
 364:main.c        ****                     strcpy(line,entry);
 365:main.c        ****                     usbBufCount = 0;
 366:main.c        ****                     flag_KB_string = 1;
 367:main.c        ****                 }
 368:main.c        ****             }
 369:main.c        ****             else 
 370:main.c        ****             {
 371:main.c        ****                 if (((c == CHAR_BACKSP) || (c == CHAR_DEL) ) && (usbBufCount > 0) )
 372:main.c        ****                     usbBufCount--;
 373:main.c        ****                 else
 374:main.c        ****                 {
 375:main.c        ****                     if (usbBufCount > (BUF_SIZE-2) ) // one less else strtok triggers a crash
 376:main.c        ****                     {
 377:main.c        ****                        USBUART_PutChar('!');        
 378:main.c        ****                     }
 379:main.c        ****                     else
 380:main.c        ****                         entry[usbBufCount++] = c;  
 381:main.c        ****                 }  
 382:main.c        ****             }
 383:main.c        ****         }
 384:main.c        ****     }    
 385:main.c        **** }
 1352              		.loc 1 385 0
 1353 0022 43E0     		b	.L80
 1354              	.L72:
 355:main.c        ****         {  
 1355              		.loc 1 355 0
 1356 0024 FFF7FEFF 		bl	USBUART_DataIsReady
 1357 0028 0346     		mov	r3, r0
 1358 002a 002B     		cmp	r3, #0
 1359 002c 3ED0     		beq	.L80
 357:main.c        **** 
 1360              		.loc 1 357 0
 1361 002e FFF7FEFF 		bl	USBUART_GetChar
 1362 0032 0346     		mov	r3, r0
 1363 0034 FB71     		strb	r3, [r7, #7]
 359:main.c        ****             {
 1364              		.loc 1 359 0
 1365 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1366 0038 0D2B     		cmp	r3, #13
 1367 003a 02D0     		beq	.L75
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 32


 359:main.c        ****             {
 1368              		.loc 1 359 0 is_stmt 0 discriminator 1
 1369 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1370 003e 0A2B     		cmp	r3, #10
 1371 0040 10D1     		bne	.L76
 1372              	.L75:
 363:main.c        ****                     strcpy(line,entry);
 1373              		.loc 1 363 0 is_stmt 1
 1374 0042 1D4B     		ldr	r3, .L81+4
 1375 0044 1B88     		ldrh	r3, [r3]
 1376 0046 1A46     		mov	r2, r3
 1377 0048 1C4B     		ldr	r3, .L81+8
 1378 004a 0021     		movs	r1, #0
 1379 004c 9954     		strb	r1, [r3, r2]
 364:main.c        ****                     usbBufCount = 0;
 1380              		.loc 1 364 0
 1381 004e 1B49     		ldr	r1, .L81+8
 1382 0050 1B48     		ldr	r0, .L81+12
 1383 0052 FFF7FEFF 		bl	strcpy
 365:main.c        ****                     flag_KB_string = 1;
 1384              		.loc 1 365 0
 1385 0056 184B     		ldr	r3, .L81+4
 1386 0058 0022     		movs	r2, #0
 1387 005a 1A80     		strh	r2, [r3]	@ movhi
 366:main.c        ****                 }
 1388              		.loc 1 366 0
 1389 005c 194B     		ldr	r3, .L81+16
 1390 005e 0122     		movs	r2, #1
 1391 0060 1A70     		strb	r2, [r3]
 1392 0062 23E0     		b	.L74
 1393              	.L76:
 371:main.c        ****                     usbBufCount--;
 1394              		.loc 1 371 0
 1395 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1396 0066 082B     		cmp	r3, #8
 1397 0068 02D0     		beq	.L77
 371:main.c        ****                     usbBufCount--;
 1398              		.loc 1 371 0 is_stmt 0 discriminator 2
 1399 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1400 006c 7F2B     		cmp	r3, #127
 1401 006e 0AD1     		bne	.L78
 1402              	.L77:
 371:main.c        ****                     usbBufCount--;
 1403              		.loc 1 371 0 discriminator 3
 1404 0070 114B     		ldr	r3, .L81+4
 1405 0072 1B88     		ldrh	r3, [r3]
 1406 0074 002B     		cmp	r3, #0
 1407 0076 06D0     		beq	.L78
 372:main.c        ****                 else
 1408              		.loc 1 372 0 is_stmt 1
 1409 0078 0F4B     		ldr	r3, .L81+4
 1410 007a 1B88     		ldrh	r3, [r3]
 1411 007c 013B     		subs	r3, r3, #1
 1412 007e 9AB2     		uxth	r2, r3
 1413 0080 0D4B     		ldr	r3, .L81+4
 1414 0082 1A80     		strh	r2, [r3]	@ movhi
 1415 0084 12E0     		b	.L74
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 33


 1416              	.L78:
 375:main.c        ****                     {
 1417              		.loc 1 375 0
 1418 0086 0C4B     		ldr	r3, .L81+4
 1419 0088 1B88     		ldrh	r3, [r3]
 1420 008a 3E2B     		cmp	r3, #62
 1421 008c 03D9     		bls	.L79
 377:main.c        ****                     }
 1422              		.loc 1 377 0
 1423 008e 2120     		movs	r0, #33
 1424 0090 FFF7FEFF 		bl	USBUART_PutChar
 1425              		.loc 1 385 0
 1426 0094 0AE0     		b	.L80
 1427              	.L79:
 380:main.c        ****                 }  
 1428              		.loc 1 380 0
 1429 0096 084B     		ldr	r3, .L81+4
 1430 0098 1B88     		ldrh	r3, [r3]
 1431 009a 5A1C     		adds	r2, r3, #1
 1432 009c 91B2     		uxth	r1, r2
 1433 009e 064A     		ldr	r2, .L81+4
 1434 00a0 1180     		strh	r1, [r2]	@ movhi
 1435 00a2 1946     		mov	r1, r3
 1436 00a4 054A     		ldr	r2, .L81+8
 1437 00a6 FB79     		ldrb	r3, [r7, #7]
 1438 00a8 5354     		strb	r3, [r2, r1]
 1439              		.loc 1 385 0
 1440 00aa FFE7     		b	.L80
 1441              	.L74:
 1442              	.L80:
 1443 00ac 00BF     		nop
 1444 00ae 0837     		adds	r7, r7, #8
 1445              		.cfi_def_cfa_offset 8
 1446 00b0 BD46     		mov	sp, r7
 1447              		.cfi_def_cfa_register 13
 1448              		@ sp needed
 1449 00b2 80BD     		pop	{r7, pc}
 1450              	.L82:
 1451              		.align	2
 1452              	.L81:
 1453 00b4 2C000000 		.word	usbStarted.8236
 1454 00b8 2E000000 		.word	usbBufCount.8237
 1455 00bc 00000000 		.word	entry
 1456 00c0 00000000 		.word	line
 1457 00c4 00000000 		.word	flag_KB_string
 1458              		.cfi_endproc
 1459              	.LFE79:
 1460              		.size	handle_usb, .-handle_usb
 1461              		.bss
 1462              	usbStarted.8236:
 1463 002c 00       		.space	1
 1464 002d 00       		.align	1
 1465              	usbBufCount.8237:
 1466 002e 0000     		.space	2
 1467              		.text
 1468              	.Letext0:
 1469              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 34


 1470              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1471              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1472              		.file 5 "vars.h"
 1473              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1474              		.section	.debug_info,"",%progbits
 1475              	.Ldebug_info0:
 1476 0000 1E060000 		.4byte	0x61e
 1477 0004 0400     		.2byte	0x4
 1478 0006 00000000 		.4byte	.Ldebug_abbrev0
 1479 000a 04       		.byte	0x4
 1480 000b 01       		.uleb128 0x1
 1481 000c 89000000 		.4byte	.LASF90
 1482 0010 0C       		.byte	0xc
 1483 0011 C7030000 		.4byte	.LASF91
 1484 0015 94040000 		.4byte	.LASF92
 1485 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1486 001d 00000000 		.4byte	0
 1487 0021 00000000 		.4byte	.Ldebug_line0
 1488 0025 02       		.uleb128 0x2
 1489 0026 01       		.byte	0x1
 1490 0027 06       		.byte	0x6
 1491 0028 8F020000 		.4byte	.LASF0
 1492 002c 02       		.uleb128 0x2
 1493 002d 01       		.byte	0x1
 1494 002e 08       		.byte	0x8
 1495 002f 13020000 		.4byte	.LASF1
 1496 0033 02       		.uleb128 0x2
 1497 0034 02       		.byte	0x2
 1498 0035 05       		.byte	0x5
 1499 0036 50000000 		.4byte	.LASF2
 1500 003a 02       		.uleb128 0x2
 1501 003b 02       		.byte	0x2
 1502 003c 07       		.byte	0x7
 1503 003d 2F030000 		.4byte	.LASF3
 1504 0041 03       		.uleb128 0x3
 1505 0042 1A040000 		.4byte	.LASF12
 1506 0046 02       		.byte	0x2
 1507 0047 3F       		.byte	0x3f
 1508 0048 4C000000 		.4byte	0x4c
 1509 004c 02       		.uleb128 0x2
 1510 004d 04       		.byte	0x4
 1511 004e 05       		.byte	0x5
 1512 004f C0010000 		.4byte	.LASF4
 1513 0053 02       		.uleb128 0x2
 1514 0054 04       		.byte	0x4
 1515 0055 07       		.byte	0x7
 1516 0056 CE030000 		.4byte	.LASF5
 1517 005a 02       		.uleb128 0x2
 1518 005b 08       		.byte	0x8
 1519 005c 05       		.byte	0x5
 1520 005d 74010000 		.4byte	.LASF6
 1521 0061 02       		.uleb128 0x2
 1522 0062 08       		.byte	0x8
 1523 0063 07       		.byte	0x7
 1524 0064 A3020000 		.4byte	.LASF7
 1525 0068 04       		.uleb128 0x4
 1526 0069 04       		.byte	0x4
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 35


 1527 006a 05       		.byte	0x5
 1528 006b 696E7400 		.ascii	"int\000"
 1529 006f 02       		.uleb128 0x2
 1530 0070 04       		.byte	0x4
 1531 0071 07       		.byte	0x7
 1532 0072 CB020000 		.4byte	.LASF8
 1533 0076 02       		.uleb128 0x2
 1534 0077 08       		.byte	0x8
 1535 0078 04       		.byte	0x4
 1536 0079 39020000 		.4byte	.LASF9
 1537 007d 02       		.uleb128 0x2
 1538 007e 04       		.byte	0x4
 1539 007f 07       		.byte	0x7
 1540 0080 67000000 		.4byte	.LASF10
 1541 0084 05       		.uleb128 0x5
 1542 0085 04       		.byte	0x4
 1543 0086 8A000000 		.4byte	0x8a
 1544 008a 02       		.uleb128 0x2
 1545 008b 01       		.byte	0x1
 1546 008c 08       		.byte	0x8
 1547 008d 5D030000 		.4byte	.LASF11
 1548 0091 03       		.uleb128 0x3
 1549 0092 9B020000 		.4byte	.LASF13
 1550 0096 03       		.byte	0x3
 1551 0097 2C       		.byte	0x2c
 1552 0098 41000000 		.4byte	0x41
 1553 009c 06       		.uleb128 0x6
 1554 009d 56010000 		.4byte	.LASF14
 1555 00a1 04       		.byte	0x4
 1556 00a2 E901     		.2byte	0x1e9
 1557 00a4 2C000000 		.4byte	0x2c
 1558 00a8 06       		.uleb128 0x6
 1559 00a9 38010000 		.4byte	.LASF15
 1560 00ad 04       		.byte	0x4
 1561 00ae EA01     		.2byte	0x1ea
 1562 00b0 3A000000 		.4byte	0x3a
 1563 00b4 06       		.uleb128 0x6
 1564 00b5 C0030000 		.4byte	.LASF16
 1565 00b9 04       		.byte	0x4
 1566 00ba EB01     		.2byte	0x1eb
 1567 00bc 53000000 		.4byte	0x53
 1568 00c0 06       		.uleb128 0x6
 1569 00c1 8F010000 		.4byte	.LASF17
 1570 00c5 04       		.byte	0x4
 1571 00c6 EC01     		.2byte	0x1ec
 1572 00c8 25000000 		.4byte	0x25
 1573 00cc 06       		.uleb128 0x6
 1574 00cd 50010000 		.4byte	.LASF18
 1575 00d1 04       		.byte	0x4
 1576 00d2 ED01     		.2byte	0x1ed
 1577 00d4 33000000 		.4byte	0x33
 1578 00d8 02       		.uleb128 0x2
 1579 00d9 04       		.byte	0x4
 1580 00da 04       		.byte	0x4
 1581 00db 6E010000 		.4byte	.LASF19
 1582 00df 02       		.uleb128 0x2
 1583 00e0 08       		.byte	0x8
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 36


 1584 00e1 04       		.byte	0x4
 1585 00e2 27000000 		.4byte	.LASF20
 1586 00e6 07       		.uleb128 0x7
 1587 00e7 42030000 		.4byte	.LASF93
 1588 00eb 20       		.byte	0x20
 1589 00ec 05       		.byte	0x5
 1590 00ed 29       		.byte	0x29
 1591 00ee BF010000 		.4byte	0x1bf
 1592 00f2 08       		.uleb128 0x8
 1593 00f3 F7040000 		.4byte	.LASF21
 1594 00f7 05       		.byte	0x5
 1595 00f8 2A       		.byte	0x2a
 1596 00f9 C0000000 		.4byte	0xc0
 1597 00fd 00       		.byte	0
 1598 00fe 08       		.uleb128 0x8
 1599 00ff 3F010000 		.4byte	.LASF22
 1600 0103 05       		.byte	0x5
 1601 0104 2B       		.byte	0x2b
 1602 0105 9C000000 		.4byte	0x9c
 1603 0109 01       		.byte	0x1
 1604 010a 08       		.uleb128 0x8
 1605 010b A4030000 		.4byte	.LASF23
 1606 010f 05       		.byte	0x5
 1607 0110 2C       		.byte	0x2c
 1608 0111 CC000000 		.4byte	0xcc
 1609 0115 02       		.byte	0x2
 1610 0116 08       		.uleb128 0x8
 1611 0117 7C040000 		.4byte	.LASF24
 1612 011b 05       		.byte	0x5
 1613 011c 2D       		.byte	0x2d
 1614 011d CC000000 		.4byte	0xcc
 1615 0121 04       		.byte	0x4
 1616 0122 08       		.uleb128 0x8
 1617 0123 FC040000 		.4byte	.LASF25
 1618 0127 05       		.byte	0x5
 1619 0128 2E       		.byte	0x2e
 1620 0129 CC000000 		.4byte	0xcc
 1621 012d 06       		.byte	0x6
 1622 012e 08       		.uleb128 0x8
 1623 012f B8010000 		.4byte	.LASF26
 1624 0133 05       		.byte	0x5
 1625 0134 2F       		.byte	0x2f
 1626 0135 CC000000 		.4byte	0xcc
 1627 0139 08       		.byte	0x8
 1628 013a 08       		.uleb128 0x8
 1629 013b 29040000 		.4byte	.LASF27
 1630 013f 05       		.byte	0x5
 1631 0140 30       		.byte	0x30
 1632 0141 CC000000 		.4byte	0xcc
 1633 0145 0A       		.byte	0xa
 1634 0146 08       		.uleb128 0x8
 1635 0147 6F020000 		.4byte	.LASF28
 1636 014b 05       		.byte	0x5
 1637 014c 31       		.byte	0x31
 1638 014d CC000000 		.4byte	0xcc
 1639 0151 0C       		.byte	0xc
 1640 0152 08       		.uleb128 0x8
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 37


 1641 0153 AB010000 		.4byte	.LASF29
 1642 0157 05       		.byte	0x5
 1643 0158 32       		.byte	0x32
 1644 0159 CC000000 		.4byte	0xcc
 1645 015d 0E       		.byte	0xe
 1646 015e 08       		.uleb128 0x8
 1647 015f 87020000 		.4byte	.LASF30
 1648 0163 05       		.byte	0x5
 1649 0164 33       		.byte	0x33
 1650 0165 CC000000 		.4byte	0xcc
 1651 0169 10       		.byte	0x10
 1652 016a 08       		.uleb128 0x8
 1653 016b 78030000 		.4byte	.LASF31
 1654 016f 05       		.byte	0x5
 1655 0170 34       		.byte	0x34
 1656 0171 CC000000 		.4byte	0xcc
 1657 0175 12       		.byte	0x12
 1658 0176 08       		.uleb128 0x8
 1659 0177 8D030000 		.4byte	.LASF32
 1660 017b 05       		.byte	0x5
 1661 017c 35       		.byte	0x35
 1662 017d CC000000 		.4byte	0xcc
 1663 0181 14       		.byte	0x14
 1664 0182 08       		.uleb128 0x8
 1665 0183 5C010000 		.4byte	.LASF33
 1666 0187 05       		.byte	0x5
 1667 0188 36       		.byte	0x36
 1668 0189 CC000000 		.4byte	0xcc
 1669 018d 16       		.byte	0x16
 1670 018e 08       		.uleb128 0x8
 1671 018f 48000000 		.4byte	.LASF34
 1672 0193 05       		.byte	0x5
 1673 0194 37       		.byte	0x37
 1674 0195 CC000000 		.4byte	0xcc
 1675 0199 18       		.byte	0x18
 1676 019a 08       		.uleb128 0x8
 1677 019b A3010000 		.4byte	.LASF35
 1678 019f 05       		.byte	0x5
 1679 01a0 38       		.byte	0x38
 1680 01a1 CC000000 		.4byte	0xcc
 1681 01a5 1A       		.byte	0x1a
 1682 01a6 08       		.uleb128 0x8
 1683 01a7 1A030000 		.4byte	.LASF36
 1684 01ab 05       		.byte	0x5
 1685 01ac 39       		.byte	0x39
 1686 01ad CC000000 		.4byte	0xcc
 1687 01b1 1C       		.byte	0x1c
 1688 01b2 08       		.uleb128 0x8
 1689 01b3 80030000 		.4byte	.LASF37
 1690 01b7 05       		.byte	0x5
 1691 01b8 3A       		.byte	0x3a
 1692 01b9 CC000000 		.4byte	0xcc
 1693 01bd 1E       		.byte	0x1e
 1694 01be 00       		.byte	0
 1695 01bf 09       		.uleb128 0x9
 1696 01c0 70000000 		.4byte	.LASF94
 1697 01c4 04       		.byte	0x4
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 38


 1698 01c5 6F000000 		.4byte	0x6f
 1699 01c9 01       		.byte	0x1
 1700 01ca 27       		.byte	0x27
 1701 01cb FA010000 		.4byte	0x1fa
 1702 01cf 0A       		.uleb128 0xa
 1703 01d0 62030000 		.4byte	.LASF38
 1704 01d4 00       		.byte	0
 1705 01d5 0A       		.uleb128 0xa
 1706 01d6 AF030000 		.4byte	.LASF39
 1707 01da 01       		.byte	0x1
 1708 01db 0A       		.uleb128 0xa
 1709 01dc 17000000 		.4byte	.LASF40
 1710 01e0 02       		.byte	0x2
 1711 01e1 0A       		.uleb128 0xa
 1712 01e2 28010000 		.4byte	.LASF41
 1713 01e6 03       		.byte	0x3
 1714 01e7 0A       		.uleb128 0xa
 1715 01e8 BA020000 		.4byte	.LASF42
 1716 01ec 04       		.byte	0x4
 1717 01ed 0A       		.uleb128 0xa
 1718 01ee 24040000 		.4byte	.LASF43
 1719 01f2 05       		.byte	0x5
 1720 01f3 0A       		.uleb128 0xa
 1721 01f4 EB030000 		.4byte	.LASF44
 1722 01f8 06       		.byte	0x6
 1723 01f9 00       		.byte	0
 1724 01fa 0B       		.uleb128 0xb
 1725 01fb 45010000 		.4byte	.LASF45
 1726 01ff 01       		.byte	0x1
 1727 0200 40       		.byte	0x40
 1728 0201 00000000 		.4byte	.LFB64
 1729 0205 C8000000 		.4byte	.LFE64-.LFB64
 1730 0209 01       		.uleb128 0x1
 1731 020a 9C       		.byte	0x9c
 1732 020b 0B       		.uleb128 0xb
 1733 020c 0E050000 		.4byte	.LASF46
 1734 0210 01       		.byte	0x1
 1735 0211 50       		.byte	0x50
 1736 0212 00000000 		.4byte	.LFB65
 1737 0216 18000000 		.4byte	.LFE65-.LFB65
 1738 021a 01       		.uleb128 0x1
 1739 021b 9C       		.byte	0x9c
 1740 021c 0B       		.uleb128 0xb
 1741 021d DE010000 		.4byte	.LASF47
 1742 0221 01       		.byte	0x1
 1743 0222 57       		.byte	0x57
 1744 0223 00000000 		.4byte	.LFB66
 1745 0227 18000000 		.4byte	.LFE66-.LFB66
 1746 022b 01       		.uleb128 0x1
 1747 022c 9C       		.byte	0x9c
 1748 022d 0B       		.uleb128 0xb
 1749 022e F3030000 		.4byte	.LASF48
 1750 0232 01       		.byte	0x1
 1751 0233 5E       		.byte	0x5e
 1752 0234 00000000 		.4byte	.LFB67
 1753 0238 18000000 		.4byte	.LFE67-.LFB67
 1754 023c 01       		.uleb128 0x1
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 39


 1755 023d 9C       		.byte	0x9c
 1756 023e 0B       		.uleb128 0xb
 1757 023f 1C010000 		.4byte	.LASF49
 1758 0243 01       		.byte	0x1
 1759 0244 64       		.byte	0x64
 1760 0245 00000000 		.4byte	.LFB68
 1761 0249 18000000 		.4byte	.LFE68-.LFB68
 1762 024d 01       		.uleb128 0x1
 1763 024e 9C       		.byte	0x9c
 1764 024f 0B       		.uleb128 0xb
 1765 0250 23030000 		.4byte	.LASF50
 1766 0254 01       		.byte	0x1
 1767 0255 6A       		.byte	0x6a
 1768 0256 00000000 		.4byte	.LFB69
 1769 025a 18000000 		.4byte	.LFE69-.LFB69
 1770 025e 01       		.uleb128 0x1
 1771 025f 9C       		.byte	0x9c
 1772 0260 0B       		.uleb128 0xb
 1773 0261 00000000 		.4byte	.LASF51
 1774 0265 01       		.byte	0x1
 1775 0266 70       		.byte	0x70
 1776 0267 00000000 		.4byte	.LFB70
 1777 026b 18000000 		.4byte	.LFE70-.LFB70
 1778 026f 01       		.uleb128 0x1
 1779 0270 9C       		.byte	0x9c
 1780 0271 0B       		.uleb128 0xb
 1781 0272 0D030000 		.4byte	.LASF52
 1782 0276 01       		.byte	0x1
 1783 0277 76       		.byte	0x76
 1784 0278 00000000 		.4byte	.LFB71
 1785 027c 64000000 		.4byte	.LFE71-.LFB71
 1786 0280 01       		.uleb128 0x1
 1787 0281 9C       		.byte	0x9c
 1788 0282 0C       		.uleb128 0xc
 1789 0283 17010000 		.4byte	.LASF53
 1790 0287 01       		.byte	0x1
 1791 0288 87       		.byte	0x87
 1792 0289 68000000 		.4byte	0x68
 1793 028d 00000000 		.4byte	.LFB72
 1794 0291 E0000000 		.4byte	.LFE72-.LFB72
 1795 0295 01       		.uleb128 0x1
 1796 0296 9C       		.byte	0x9c
 1797 0297 0D       		.uleb128 0xd
 1798 0298 51040000 		.4byte	.LASF95
 1799 029c 01       		.byte	0x1
 1800 029d BE       		.byte	0xbe
 1801 029e CC000000 		.4byte	0xcc
 1802 02a2 00000000 		.4byte	.LFB73
 1803 02a6 6C000000 		.4byte	.LFE73-.LFB73
 1804 02aa 01       		.uleb128 0x1
 1805 02ab 9C       		.byte	0x9c
 1806 02ac DB020000 		.4byte	0x2db
 1807 02b0 0E       		.uleb128 0xe
 1808 02b1 08040000 		.4byte	.LASF59
 1809 02b5 01       		.byte	0x1
 1810 02b6 BE       		.byte	0xbe
 1811 02b7 A8000000 		.4byte	0xa8
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 40


 1812 02bb 02       		.uleb128 0x2
 1813 02bc 91       		.byte	0x91
 1814 02bd 66       		.sleb128 -26
 1815 02be 0F       		.uleb128 0xf
 1816 02bf 63707300 		.ascii	"cps\000"
 1817 02c3 01       		.byte	0x1
 1818 02c4 C0       		.byte	0xc0
 1819 02c5 D8000000 		.4byte	0xd8
 1820 02c9 02       		.uleb128 0x2
 1821 02ca 91       		.byte	0x91
 1822 02cb 6C       		.sleb128 -20
 1823 02cc 0F       		.uleb128 0xf
 1824 02cd 72706D00 		.ascii	"rpm\000"
 1825 02d1 01       		.byte	0x1
 1826 02d2 C1       		.byte	0xc1
 1827 02d3 CC000000 		.4byte	0xcc
 1828 02d7 02       		.uleb128 0x2
 1829 02d8 91       		.byte	0x91
 1830 02d9 6A       		.sleb128 -22
 1831 02da 00       		.byte	0
 1832 02db 10       		.uleb128 0x10
 1833 02dc 4C030000 		.4byte	.LASF55
 1834 02e0 01       		.byte	0x1
 1835 02e1 C9       		.byte	0xc9
 1836 02e2 00000000 		.4byte	.LFB74
 1837 02e6 48000000 		.4byte	.LFE74-.LFB74
 1838 02ea 01       		.uleb128 0x1
 1839 02eb 9C       		.byte	0x9c
 1840 02ec 11       		.uleb128 0x11
 1841 02ed C9010000 		.4byte	.LASF57
 1842 02f1 01       		.byte	0x1
 1843 02f2 D7       		.byte	0xd7
 1844 02f3 BF010000 		.4byte	0x1bf
 1845 02f7 00000000 		.4byte	.LFB75
 1846 02fb 78010000 		.4byte	.LFE75-.LFB75
 1847 02ff 01       		.uleb128 0x1
 1848 0300 9C       		.byte	0x9c
 1849 0301 14030000 		.4byte	0x314
 1850 0305 12       		.uleb128 0x12
 1851 0306 E8040000 		.4byte	.LASF54
 1852 030a 01       		.byte	0x1
 1853 030b D8       		.byte	0xd8
 1854 030c BF010000 		.4byte	0x1bf
 1855 0310 02       		.uleb128 0x2
 1856 0311 91       		.byte	0x91
 1857 0312 74       		.sleb128 -12
 1858 0313 00       		.byte	0
 1859 0314 13       		.uleb128 0x13
 1860 0315 FC020000 		.4byte	.LASF56
 1861 0319 01       		.byte	0x1
 1862 031a 1801     		.2byte	0x118
 1863 031c 00000000 		.4byte	.LFB76
 1864 0320 68000000 		.4byte	.LFE76-.LFB76
 1865 0324 01       		.uleb128 0x1
 1866 0325 9C       		.byte	0x9c
 1867 0326 14       		.uleb128 0x14
 1868 0327 82010000 		.4byte	.LASF58
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 41


 1869 032b 01       		.byte	0x1
 1870 032c 3801     		.2byte	0x138
 1871 032e 00000000 		.4byte	.LFB77
 1872 0332 3E000000 		.4byte	.LFE77-.LFB77
 1873 0336 01       		.uleb128 0x1
 1874 0337 9C       		.byte	0x9c
 1875 0338 4A030000 		.4byte	0x34a
 1876 033c 15       		.uleb128 0x15
 1877 033d 7300     		.ascii	"s\000"
 1878 033f 01       		.byte	0x1
 1879 0340 3801     		.2byte	0x138
 1880 0342 84000000 		.4byte	0x84
 1881 0346 02       		.uleb128 0x2
 1882 0347 91       		.byte	0x91
 1883 0348 74       		.sleb128 -12
 1884 0349 00       		.byte	0
 1885 034a 14       		.uleb128 0x14
 1886 034b 0C000000 		.4byte	.LASF60
 1887 034f 01       		.byte	0x1
 1888 0350 4601     		.2byte	0x146
 1889 0352 00000000 		.4byte	.LFB78
 1890 0356 26000000 		.4byte	.LFE78-.LFB78
 1891 035a 01       		.uleb128 0x1
 1892 035b 9C       		.byte	0x9c
 1893 035c 6E030000 		.4byte	0x36e
 1894 0360 15       		.uleb128 0x15
 1895 0361 6300     		.ascii	"c\000"
 1896 0363 01       		.byte	0x1
 1897 0364 4601     		.2byte	0x146
 1898 0366 8A000000 		.4byte	0x8a
 1899 036a 02       		.uleb128 0x2
 1900 036b 91       		.byte	0x91
 1901 036c 77       		.sleb128 -9
 1902 036d 00       		.byte	0
 1903 036e 16       		.uleb128 0x16
 1904 036f 46040000 		.4byte	.LASF96
 1905 0373 01       		.byte	0x1
 1906 0374 4E01     		.2byte	0x14e
 1907 0376 00000000 		.4byte	.LFB79
 1908 037a C8000000 		.4byte	.LFE79-.LFB79
 1909 037e 01       		.uleb128 0x1
 1910 037f 9C       		.byte	0x9c
 1911 0380 B6030000 		.4byte	0x3b6
 1912 0384 17       		.uleb128 0x17
 1913 0385 E0030000 		.4byte	.LASF61
 1914 0389 01       		.byte	0x1
 1915 038a 5401     		.2byte	0x154
 1916 038c 9C000000 		.4byte	0x9c
 1917 0390 05       		.uleb128 0x5
 1918 0391 03       		.byte	0x3
 1919 0392 2C000000 		.4byte	usbStarted.8236
 1920 0396 17       		.uleb128 0x17
 1921 0397 F0020000 		.4byte	.LASF62
 1922 039b 01       		.byte	0x1
 1923 039c 5501     		.2byte	0x155
 1924 039e A8000000 		.4byte	0xa8
 1925 03a2 05       		.uleb128 0x5
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 42


 1926 03a3 03       		.byte	0x3
 1927 03a4 2E000000 		.4byte	usbBufCount.8237
 1928 03a8 18       		.uleb128 0x18
 1929 03a9 6300     		.ascii	"c\000"
 1930 03ab 01       		.byte	0x1
 1931 03ac 5601     		.2byte	0x156
 1932 03ae 9C000000 		.4byte	0x9c
 1933 03b2 02       		.uleb128 0x2
 1934 03b3 91       		.byte	0x91
 1935 03b4 77       		.sleb128 -9
 1936 03b5 00       		.byte	0
 1937 03b6 19       		.uleb128 0x19
 1938 03b7 87040000 		.4byte	.LASF63
 1939 03bb 06       		.byte	0x6
 1940 03bc 1207     		.2byte	0x712
 1941 03be C2030000 		.4byte	0x3c2
 1942 03c2 1A       		.uleb128 0x1a
 1943 03c3 91000000 		.4byte	0x91
 1944 03c7 1B       		.uleb128 0x1b
 1945 03c8 747300   		.ascii	"ts\000"
 1946 03cb 05       		.byte	0x5
 1947 03cc 10       		.byte	0x10
 1948 03cd 9C000000 		.4byte	0x9c
 1949 03d1 05       		.uleb128 0x5
 1950 03d2 03       		.byte	0x3
 1951 03d3 00000000 		.4byte	ts
 1952 03d7 1C       		.uleb128 0x1c
 1953 03d8 20000000 		.4byte	.LASF64
 1954 03dc 05       		.byte	0x5
 1955 03dd 11       		.byte	0x11
 1956 03de A8000000 		.4byte	0xa8
 1957 03e2 05       		.uleb128 0x5
 1958 03e3 03       		.byte	0x3
 1959 03e4 00000000 		.4byte	ts_enc
 1960 03e8 1C       		.uleb128 0x1c
 1961 03e9 3C040000 		.4byte	.LASF65
 1962 03ed 05       		.byte	0x5
 1963 03ee 12       		.byte	0x12
 1964 03ef A8000000 		.4byte	0xa8
 1965 03f3 05       		.uleb128 0x5
 1966 03f4 03       		.byte	0x3
 1967 03f5 00000000 		.4byte	ts_update
 1968 03f9 1C       		.uleb128 0x1c
 1969 03fa FF030000 		.4byte	.LASF66
 1970 03fe 05       		.byte	0x5
 1971 03ff 13       		.byte	0x13
 1972 0400 A8000000 		.4byte	0xa8
 1973 0404 05       		.uleb128 0x5
 1974 0405 03       		.byte	0x3
 1975 0406 00000000 		.4byte	ts_speed
 1976 040a 1C       		.uleb128 0x1c
 1977 040b 31040000 		.4byte	.LASF67
 1978 040f 05       		.byte	0x5
 1979 0410 14       		.byte	0x14
 1980 0411 A8000000 		.4byte	0xa8
 1981 0415 05       		.uleb128 0x5
 1982 0416 03       		.byte	0x3
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 43


 1983 0417 00000000 		.4byte	ts_display
 1984 041b 1C       		.uleb128 0x1c
 1985 041c 0E040000 		.4byte	.LASF68
 1986 0420 05       		.byte	0x5
 1987 0421 16       		.byte	0x16
 1988 0422 9C000000 		.4byte	0x9c
 1989 0426 05       		.uleb128 0x5
 1990 0427 03       		.byte	0x3
 1991 0428 00000000 		.4byte	flag_ts_enc
 1992 042c 1C       		.uleb128 0x1c
 1993 042d 94010000 		.4byte	.LASF69
 1994 0431 05       		.byte	0x5
 1995 0432 17       		.byte	0x17
 1996 0433 9C000000 		.4byte	0x9c
 1997 0437 05       		.uleb128 0x5
 1998 0438 03       		.byte	0x3
 1999 0439 00000000 		.4byte	flag_ts_update
 2000 043d 1C       		.uleb128 0x1c
 2001 043e 3A000000 		.4byte	.LASF70
 2002 0442 05       		.byte	0x5
 2003 0443 18       		.byte	0x18
 2004 0444 9C000000 		.4byte	0x9c
 2005 0448 05       		.uleb128 0x5
 2006 0449 03       		.byte	0x3
 2007 044a 00000000 		.4byte	flag_ts_speed
 2008 044e 1C       		.uleb128 0x1c
 2009 044f FB010000 		.4byte	.LASF71
 2010 0453 05       		.byte	0x5
 2011 0454 19       		.byte	0x19
 2012 0455 9C000000 		.4byte	0x9c
 2013 0459 05       		.uleb128 0x5
 2014 045a 03       		.byte	0x3
 2015 045b 00000000 		.4byte	flag_ts_display
 2016 045f 1C       		.uleb128 0x1c
 2017 0460 0B020000 		.4byte	.LASF72
 2018 0464 05       		.byte	0x5
 2019 0465 1C       		.byte	0x1c
 2020 0466 9C000000 		.4byte	0x9c
 2021 046a 05       		.uleb128 0x5
 2022 046b 03       		.byte	0x3
 2023 046c 00000000 		.4byte	flag_rx
 2024 0470 1C       		.uleb128 0x1c
 2025 0471 2E000000 		.4byte	.LASF73
 2026 0475 05       		.byte	0x5
 2027 0476 1D       		.byte	0x1d
 2028 0477 9C000000 		.4byte	0x9c
 2029 047b 05       		.uleb128 0x5
 2030 047c 03       		.byte	0x3
 2031 047d 00000000 		.4byte	flag_packet
 2032 0481 1C       		.uleb128 0x1c
 2033 0482 E1020000 		.4byte	.LASF74
 2034 0486 05       		.byte	0x5
 2035 0487 1E       		.byte	0x1e
 2036 0488 9C000000 		.4byte	0x9c
 2037 048c 05       		.uleb128 0x5
 2038 048d 03       		.byte	0x3
 2039 048e 00000000 		.4byte	flag_KB_string
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 44


 2040 0492 1C       		.uleb128 0x1c
 2041 0493 78020000 		.4byte	.LASF75
 2042 0497 05       		.byte	0x5
 2043 0498 20       		.byte	0x20
 2044 0499 9C000000 		.4byte	0x9c
 2045 049d 05       		.uleb128 0x5
 2046 049e 03       		.byte	0x3
 2047 049f 00000000 		.4byte	dataready_flag
 2048 04a3 1C       		.uleb128 0x1c
 2049 04a4 60040000 		.4byte	.LASF76
 2050 04a8 05       		.byte	0x5
 2051 04a9 22       		.byte	0x22
 2052 04aa 9C000000 		.4byte	0x9c
 2053 04ae 05       		.uleb128 0x5
 2054 04af 03       		.byte	0x3
 2055 04b0 00000000 		.4byte	flag_rf_transmission_active
 2056 04b4 1D       		.uleb128 0x1d
 2057 04b5 8A000000 		.4byte	0x8a
 2058 04b9 C4040000 		.4byte	0x4c4
 2059 04bd 1E       		.uleb128 0x1e
 2060 04be 7D000000 		.4byte	0x7d
 2061 04c2 3F       		.byte	0x3f
 2062 04c3 00       		.byte	0
 2063 04c4 1C       		.uleb128 0x1c
 2064 04c5 96030000 		.4byte	.LASF77
 2065 04c9 05       		.byte	0x5
 2066 04ca 25       		.byte	0x25
 2067 04cb B4040000 		.4byte	0x4b4
 2068 04cf 05       		.uleb128 0x5
 2069 04d0 03       		.byte	0x3
 2070 04d1 00000000 		.4byte	displaystring
 2071 04d5 1C       		.uleb128 0x1c
 2072 04d6 69010000 		.4byte	.LASF78
 2073 04da 05       		.byte	0x5
 2074 04db 26       		.byte	0x26
 2075 04dc B4040000 		.4byte	0x4b4
 2076 04e0 05       		.uleb128 0x5
 2077 04e1 03       		.byte	0x3
 2078 04e2 00000000 		.4byte	line
 2079 04e6 1C       		.uleb128 0x1c
 2080 04e7 33020000 		.4byte	.LASF79
 2081 04eb 05       		.byte	0x5
 2082 04ec 26       		.byte	0x26
 2083 04ed B4040000 		.4byte	0x4b4
 2084 04f1 05       		.uleb128 0x5
 2085 04f2 03       		.byte	0x3
 2086 04f3 00000000 		.4byte	entry
 2087 04f7 1D       		.uleb128 0x1d
 2088 04f8 9C000000 		.4byte	0x9c
 2089 04fc 07050000 		.4byte	0x507
 2090 0500 1E       		.uleb128 0x1e
 2091 0501 7D000000 		.4byte	0x7d
 2092 0505 3F       		.byte	0x3f
 2093 0506 00       		.byte	0
 2094 0507 1C       		.uleb128 0x1c
 2095 0508 7F000000 		.4byte	.LASF80
 2096 050c 05       		.byte	0x5
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 45


 2097 050d 27       		.byte	0x27
 2098 050e F7040000 		.4byte	0x4f7
 2099 0512 05       		.uleb128 0x5
 2100 0513 03       		.byte	0x3
 2101 0514 00000000 		.4byte	usbBuffer
 2102 0518 1C       		.uleb128 0x1c
 2103 0519 5A000000 		.4byte	.LASF81
 2104 051d 05       		.byte	0x5
 2105 051e 3C       		.byte	0x3c
 2106 051f E6000000 		.4byte	0xe6
 2107 0523 05       		.uleb128 0x5
 2108 0524 03       		.byte	0x3
 2109 0525 00000000 		.4byte	system_state
 2110 0529 1C       		.uleb128 0x1c
 2111 052a EA010000 		.4byte	.LASF82
 2112 052e 01       		.byte	0x1
 2113 052f 29       		.byte	0x29
 2114 0530 BF010000 		.4byte	0x1bf
 2115 0534 05       		.uleb128 0x5
 2116 0535 03       		.byte	0x3
 2117 0536 00000000 		.4byte	currentDirection
 2118 053a 1C       		.uleb128 0x1c
 2119 053b 45020000 		.4byte	.LASF83
 2120 053f 01       		.byte	0x1
 2121 0540 2A       		.byte	0x2a
 2122 0541 BF010000 		.4byte	0x1bf
 2123 0545 05       		.uleb128 0x5
 2124 0546 03       		.byte	0x3
 2125 0547 00000000 		.4byte	previousDirection
 2126 054b 1B       		.uleb128 0x1b
 2127 054c 733100   		.ascii	"s1\000"
 2128 054f 01       		.byte	0x1
 2129 0550 2C       		.byte	0x2c
 2130 0551 9C000000 		.4byte	0x9c
 2131 0555 05       		.uleb128 0x5
 2132 0556 03       		.byte	0x3
 2133 0557 00000000 		.4byte	s1
 2134 055b 1B       		.uleb128 0x1b
 2135 055c 733200   		.ascii	"s2\000"
 2136 055f 01       		.byte	0x1
 2137 0560 2D       		.byte	0x2d
 2138 0561 9C000000 		.4byte	0x9c
 2139 0565 05       		.uleb128 0x5
 2140 0566 03       		.byte	0x3
 2141 0567 00000000 		.4byte	s2
 2142 056b 1B       		.uleb128 0x1b
 2143 056c 733300   		.ascii	"s3\000"
 2144 056f 01       		.byte	0x1
 2145 0570 2E       		.byte	0x2e
 2146 0571 9C000000 		.4byte	0x9c
 2147 0575 05       		.uleb128 0x5
 2148 0576 03       		.byte	0x3
 2149 0577 00000000 		.4byte	s3
 2150 057b 1B       		.uleb128 0x1b
 2151 057c 733400   		.ascii	"s4\000"
 2152 057f 01       		.byte	0x1
 2153 0580 2F       		.byte	0x2f
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 46


 2154 0581 9C000000 		.4byte	0x9c
 2155 0585 05       		.uleb128 0x5
 2156 0586 03       		.byte	0x3
 2157 0587 00000000 		.4byte	s4
 2158 058b 1B       		.uleb128 0x1b
 2159 058c 733500   		.ascii	"s5\000"
 2160 058f 01       		.byte	0x1
 2161 0590 30       		.byte	0x30
 2162 0591 9C000000 		.4byte	0x9c
 2163 0595 05       		.uleb128 0x5
 2164 0596 03       		.byte	0x3
 2165 0597 00000000 		.4byte	s5
 2166 059b 1B       		.uleb128 0x1b
 2167 059c 733600   		.ascii	"s6\000"
 2168 059f 01       		.byte	0x1
 2169 05a0 31       		.byte	0x31
 2170 05a1 9C000000 		.4byte	0x9c
 2171 05a5 05       		.uleb128 0x5
 2172 05a6 03       		.byte	0x3
 2173 05a7 00000000 		.4byte	s6
 2174 05ab 1C       		.uleb128 0x1c
 2175 05ac 21020000 		.4byte	.LASF84
 2176 05b0 01       		.byte	0x1
 2177 05b1 35       		.byte	0x35
 2178 05b2 B4000000 		.4byte	0xb4
 2179 05b6 05       		.uleb128 0x5
 2180 05b7 03       		.byte	0x3
 2181 05b8 00000000 		.4byte	totalMilliseconds
 2182 05bc 1C       		.uleb128 0x1c
 2183 05bd 57020000 		.4byte	.LASF85
 2184 05c1 01       		.byte	0x1
 2185 05c2 36       		.byte	0x36
 2186 05c3 B4000000 		.4byte	0xb4
 2187 05c7 05       		.uleb128 0x5
 2188 05c8 03       		.byte	0x3
 2189 05c9 00000000 		.4byte	totalDistance
 2190 05cd 1D       		.uleb128 0x1d
 2191 05ce 8A000000 		.4byte	0x8a
 2192 05d2 DD050000 		.4byte	0x5dd
 2193 05d6 1E       		.uleb128 0x1e
 2194 05d7 7D000000 		.4byte	0x7d
 2195 05db 44       		.byte	0x44
 2196 05dc 00       		.byte	0
 2197 05dd 1C       		.uleb128 0x1c
 2198 05de B9030000 		.4byte	.LASF86
 2199 05e2 01       		.byte	0x1
 2200 05e3 38       		.byte	0x38
 2201 05e4 CD050000 		.4byte	0x5cd
 2202 05e8 05       		.uleb128 0x5
 2203 05e9 03       		.byte	0x3
 2204 05ea 00000000 		.4byte	buffer
 2205 05ee 1C       		.uleb128 0x1c
 2206 05ef 6A030000 		.4byte	.LASF87
 2207 05f3 01       		.byte	0x1
 2208 05f4 39       		.byte	0x39
 2209 05f5 68000000 		.4byte	0x68
 2210 05f9 05       		.uleb128 0x5
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 47


 2211 05fa 03       		.byte	0x3
 2212 05fb 00000000 		.4byte	quadDec2Count
 2213 05ff 1C       		.uleb128 0x1c
 2214 0600 D8020000 		.4byte	.LASF88
 2215 0604 01       		.byte	0x1
 2216 0605 3A       		.byte	0x3a
 2217 0606 68000000 		.4byte	0x68
 2218 060a 05       		.uleb128 0x5
 2219 060b 03       		.byte	0x3
 2220 060c 00000000 		.4byte	timerInt
 2221 0610 1C       		.uleb128 0x1c
 2222 0611 65020000 		.4byte	.LASF89
 2223 0615 01       		.byte	0x1
 2224 0616 3B       		.byte	0x3b
 2225 0617 68000000 		.4byte	0x68
 2226 061b 05       		.uleb128 0x5
 2227 061c 03       		.byte	0x3
 2228 061d 00000000 		.4byte	keepLedOn
 2229 0621 00       		.byte	0
 2230              		.section	.debug_abbrev,"",%progbits
 2231              	.Ldebug_abbrev0:
 2232 0000 01       		.uleb128 0x1
 2233 0001 11       		.uleb128 0x11
 2234 0002 01       		.byte	0x1
 2235 0003 25       		.uleb128 0x25
 2236 0004 0E       		.uleb128 0xe
 2237 0005 13       		.uleb128 0x13
 2238 0006 0B       		.uleb128 0xb
 2239 0007 03       		.uleb128 0x3
 2240 0008 0E       		.uleb128 0xe
 2241 0009 1B       		.uleb128 0x1b
 2242 000a 0E       		.uleb128 0xe
 2243 000b 55       		.uleb128 0x55
 2244 000c 17       		.uleb128 0x17
 2245 000d 11       		.uleb128 0x11
 2246 000e 01       		.uleb128 0x1
 2247 000f 10       		.uleb128 0x10
 2248 0010 17       		.uleb128 0x17
 2249 0011 00       		.byte	0
 2250 0012 00       		.byte	0
 2251 0013 02       		.uleb128 0x2
 2252 0014 24       		.uleb128 0x24
 2253 0015 00       		.byte	0
 2254 0016 0B       		.uleb128 0xb
 2255 0017 0B       		.uleb128 0xb
 2256 0018 3E       		.uleb128 0x3e
 2257 0019 0B       		.uleb128 0xb
 2258 001a 03       		.uleb128 0x3
 2259 001b 0E       		.uleb128 0xe
 2260 001c 00       		.byte	0
 2261 001d 00       		.byte	0
 2262 001e 03       		.uleb128 0x3
 2263 001f 16       		.uleb128 0x16
 2264 0020 00       		.byte	0
 2265 0021 03       		.uleb128 0x3
 2266 0022 0E       		.uleb128 0xe
 2267 0023 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 48


 2268 0024 0B       		.uleb128 0xb
 2269 0025 3B       		.uleb128 0x3b
 2270 0026 0B       		.uleb128 0xb
 2271 0027 49       		.uleb128 0x49
 2272 0028 13       		.uleb128 0x13
 2273 0029 00       		.byte	0
 2274 002a 00       		.byte	0
 2275 002b 04       		.uleb128 0x4
 2276 002c 24       		.uleb128 0x24
 2277 002d 00       		.byte	0
 2278 002e 0B       		.uleb128 0xb
 2279 002f 0B       		.uleb128 0xb
 2280 0030 3E       		.uleb128 0x3e
 2281 0031 0B       		.uleb128 0xb
 2282 0032 03       		.uleb128 0x3
 2283 0033 08       		.uleb128 0x8
 2284 0034 00       		.byte	0
 2285 0035 00       		.byte	0
 2286 0036 05       		.uleb128 0x5
 2287 0037 0F       		.uleb128 0xf
 2288 0038 00       		.byte	0
 2289 0039 0B       		.uleb128 0xb
 2290 003a 0B       		.uleb128 0xb
 2291 003b 49       		.uleb128 0x49
 2292 003c 13       		.uleb128 0x13
 2293 003d 00       		.byte	0
 2294 003e 00       		.byte	0
 2295 003f 06       		.uleb128 0x6
 2296 0040 16       		.uleb128 0x16
 2297 0041 00       		.byte	0
 2298 0042 03       		.uleb128 0x3
 2299 0043 0E       		.uleb128 0xe
 2300 0044 3A       		.uleb128 0x3a
 2301 0045 0B       		.uleb128 0xb
 2302 0046 3B       		.uleb128 0x3b
 2303 0047 05       		.uleb128 0x5
 2304 0048 49       		.uleb128 0x49
 2305 0049 13       		.uleb128 0x13
 2306 004a 00       		.byte	0
 2307 004b 00       		.byte	0
 2308 004c 07       		.uleb128 0x7
 2309 004d 13       		.uleb128 0x13
 2310 004e 01       		.byte	0x1
 2311 004f 03       		.uleb128 0x3
 2312 0050 0E       		.uleb128 0xe
 2313 0051 0B       		.uleb128 0xb
 2314 0052 0B       		.uleb128 0xb
 2315 0053 3A       		.uleb128 0x3a
 2316 0054 0B       		.uleb128 0xb
 2317 0055 3B       		.uleb128 0x3b
 2318 0056 0B       		.uleb128 0xb
 2319 0057 01       		.uleb128 0x1
 2320 0058 13       		.uleb128 0x13
 2321 0059 00       		.byte	0
 2322 005a 00       		.byte	0
 2323 005b 08       		.uleb128 0x8
 2324 005c 0D       		.uleb128 0xd
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 49


 2325 005d 00       		.byte	0
 2326 005e 03       		.uleb128 0x3
 2327 005f 0E       		.uleb128 0xe
 2328 0060 3A       		.uleb128 0x3a
 2329 0061 0B       		.uleb128 0xb
 2330 0062 3B       		.uleb128 0x3b
 2331 0063 0B       		.uleb128 0xb
 2332 0064 49       		.uleb128 0x49
 2333 0065 13       		.uleb128 0x13
 2334 0066 38       		.uleb128 0x38
 2335 0067 0B       		.uleb128 0xb
 2336 0068 00       		.byte	0
 2337 0069 00       		.byte	0
 2338 006a 09       		.uleb128 0x9
 2339 006b 04       		.uleb128 0x4
 2340 006c 01       		.byte	0x1
 2341 006d 03       		.uleb128 0x3
 2342 006e 0E       		.uleb128 0xe
 2343 006f 0B       		.uleb128 0xb
 2344 0070 0B       		.uleb128 0xb
 2345 0071 49       		.uleb128 0x49
 2346 0072 13       		.uleb128 0x13
 2347 0073 3A       		.uleb128 0x3a
 2348 0074 0B       		.uleb128 0xb
 2349 0075 3B       		.uleb128 0x3b
 2350 0076 0B       		.uleb128 0xb
 2351 0077 01       		.uleb128 0x1
 2352 0078 13       		.uleb128 0x13
 2353 0079 00       		.byte	0
 2354 007a 00       		.byte	0
 2355 007b 0A       		.uleb128 0xa
 2356 007c 28       		.uleb128 0x28
 2357 007d 00       		.byte	0
 2358 007e 03       		.uleb128 0x3
 2359 007f 0E       		.uleb128 0xe
 2360 0080 1C       		.uleb128 0x1c
 2361 0081 0B       		.uleb128 0xb
 2362 0082 00       		.byte	0
 2363 0083 00       		.byte	0
 2364 0084 0B       		.uleb128 0xb
 2365 0085 2E       		.uleb128 0x2e
 2366 0086 00       		.byte	0
 2367 0087 3F       		.uleb128 0x3f
 2368 0088 19       		.uleb128 0x19
 2369 0089 03       		.uleb128 0x3
 2370 008a 0E       		.uleb128 0xe
 2371 008b 3A       		.uleb128 0x3a
 2372 008c 0B       		.uleb128 0xb
 2373 008d 3B       		.uleb128 0x3b
 2374 008e 0B       		.uleb128 0xb
 2375 008f 27       		.uleb128 0x27
 2376 0090 19       		.uleb128 0x19
 2377 0091 11       		.uleb128 0x11
 2378 0092 01       		.uleb128 0x1
 2379 0093 12       		.uleb128 0x12
 2380 0094 06       		.uleb128 0x6
 2381 0095 40       		.uleb128 0x40
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 50


 2382 0096 18       		.uleb128 0x18
 2383 0097 9642     		.uleb128 0x2116
 2384 0099 19       		.uleb128 0x19
 2385 009a 00       		.byte	0
 2386 009b 00       		.byte	0
 2387 009c 0C       		.uleb128 0xc
 2388 009d 2E       		.uleb128 0x2e
 2389 009e 00       		.byte	0
 2390 009f 3F       		.uleb128 0x3f
 2391 00a0 19       		.uleb128 0x19
 2392 00a1 03       		.uleb128 0x3
 2393 00a2 0E       		.uleb128 0xe
 2394 00a3 3A       		.uleb128 0x3a
 2395 00a4 0B       		.uleb128 0xb
 2396 00a5 3B       		.uleb128 0x3b
 2397 00a6 0B       		.uleb128 0xb
 2398 00a7 49       		.uleb128 0x49
 2399 00a8 13       		.uleb128 0x13
 2400 00a9 11       		.uleb128 0x11
 2401 00aa 01       		.uleb128 0x1
 2402 00ab 12       		.uleb128 0x12
 2403 00ac 06       		.uleb128 0x6
 2404 00ad 40       		.uleb128 0x40
 2405 00ae 18       		.uleb128 0x18
 2406 00af 9642     		.uleb128 0x2116
 2407 00b1 19       		.uleb128 0x19
 2408 00b2 00       		.byte	0
 2409 00b3 00       		.byte	0
 2410 00b4 0D       		.uleb128 0xd
 2411 00b5 2E       		.uleb128 0x2e
 2412 00b6 01       		.byte	0x1
 2413 00b7 3F       		.uleb128 0x3f
 2414 00b8 19       		.uleb128 0x19
 2415 00b9 03       		.uleb128 0x3
 2416 00ba 0E       		.uleb128 0xe
 2417 00bb 3A       		.uleb128 0x3a
 2418 00bc 0B       		.uleb128 0xb
 2419 00bd 3B       		.uleb128 0x3b
 2420 00be 0B       		.uleb128 0xb
 2421 00bf 27       		.uleb128 0x27
 2422 00c0 19       		.uleb128 0x19
 2423 00c1 49       		.uleb128 0x49
 2424 00c2 13       		.uleb128 0x13
 2425 00c3 11       		.uleb128 0x11
 2426 00c4 01       		.uleb128 0x1
 2427 00c5 12       		.uleb128 0x12
 2428 00c6 06       		.uleb128 0x6
 2429 00c7 40       		.uleb128 0x40
 2430 00c8 18       		.uleb128 0x18
 2431 00c9 9642     		.uleb128 0x2116
 2432 00cb 19       		.uleb128 0x19
 2433 00cc 01       		.uleb128 0x1
 2434 00cd 13       		.uleb128 0x13
 2435 00ce 00       		.byte	0
 2436 00cf 00       		.byte	0
 2437 00d0 0E       		.uleb128 0xe
 2438 00d1 05       		.uleb128 0x5
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 51


 2439 00d2 00       		.byte	0
 2440 00d3 03       		.uleb128 0x3
 2441 00d4 0E       		.uleb128 0xe
 2442 00d5 3A       		.uleb128 0x3a
 2443 00d6 0B       		.uleb128 0xb
 2444 00d7 3B       		.uleb128 0x3b
 2445 00d8 0B       		.uleb128 0xb
 2446 00d9 49       		.uleb128 0x49
 2447 00da 13       		.uleb128 0x13
 2448 00db 02       		.uleb128 0x2
 2449 00dc 18       		.uleb128 0x18
 2450 00dd 00       		.byte	0
 2451 00de 00       		.byte	0
 2452 00df 0F       		.uleb128 0xf
 2453 00e0 34       		.uleb128 0x34
 2454 00e1 00       		.byte	0
 2455 00e2 03       		.uleb128 0x3
 2456 00e3 08       		.uleb128 0x8
 2457 00e4 3A       		.uleb128 0x3a
 2458 00e5 0B       		.uleb128 0xb
 2459 00e6 3B       		.uleb128 0x3b
 2460 00e7 0B       		.uleb128 0xb
 2461 00e8 49       		.uleb128 0x49
 2462 00e9 13       		.uleb128 0x13
 2463 00ea 02       		.uleb128 0x2
 2464 00eb 18       		.uleb128 0x18
 2465 00ec 00       		.byte	0
 2466 00ed 00       		.byte	0
 2467 00ee 10       		.uleb128 0x10
 2468 00ef 2E       		.uleb128 0x2e
 2469 00f0 00       		.byte	0
 2470 00f1 3F       		.uleb128 0x3f
 2471 00f2 19       		.uleb128 0x19
 2472 00f3 03       		.uleb128 0x3
 2473 00f4 0E       		.uleb128 0xe
 2474 00f5 3A       		.uleb128 0x3a
 2475 00f6 0B       		.uleb128 0xb
 2476 00f7 3B       		.uleb128 0x3b
 2477 00f8 0B       		.uleb128 0xb
 2478 00f9 11       		.uleb128 0x11
 2479 00fa 01       		.uleb128 0x1
 2480 00fb 12       		.uleb128 0x12
 2481 00fc 06       		.uleb128 0x6
 2482 00fd 40       		.uleb128 0x40
 2483 00fe 18       		.uleb128 0x18
 2484 00ff 9742     		.uleb128 0x2117
 2485 0101 19       		.uleb128 0x19
 2486 0102 00       		.byte	0
 2487 0103 00       		.byte	0
 2488 0104 11       		.uleb128 0x11
 2489 0105 2E       		.uleb128 0x2e
 2490 0106 01       		.byte	0x1
 2491 0107 3F       		.uleb128 0x3f
 2492 0108 19       		.uleb128 0x19
 2493 0109 03       		.uleb128 0x3
 2494 010a 0E       		.uleb128 0xe
 2495 010b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 52


 2496 010c 0B       		.uleb128 0xb
 2497 010d 3B       		.uleb128 0x3b
 2498 010e 0B       		.uleb128 0xb
 2499 010f 49       		.uleb128 0x49
 2500 0110 13       		.uleb128 0x13
 2501 0111 11       		.uleb128 0x11
 2502 0112 01       		.uleb128 0x1
 2503 0113 12       		.uleb128 0x12
 2504 0114 06       		.uleb128 0x6
 2505 0115 40       		.uleb128 0x40
 2506 0116 18       		.uleb128 0x18
 2507 0117 9742     		.uleb128 0x2117
 2508 0119 19       		.uleb128 0x19
 2509 011a 01       		.uleb128 0x1
 2510 011b 13       		.uleb128 0x13
 2511 011c 00       		.byte	0
 2512 011d 00       		.byte	0
 2513 011e 12       		.uleb128 0x12
 2514 011f 34       		.uleb128 0x34
 2515 0120 00       		.byte	0
 2516 0121 03       		.uleb128 0x3
 2517 0122 0E       		.uleb128 0xe
 2518 0123 3A       		.uleb128 0x3a
 2519 0124 0B       		.uleb128 0xb
 2520 0125 3B       		.uleb128 0x3b
 2521 0126 0B       		.uleb128 0xb
 2522 0127 49       		.uleb128 0x49
 2523 0128 13       		.uleb128 0x13
 2524 0129 02       		.uleb128 0x2
 2525 012a 18       		.uleb128 0x18
 2526 012b 00       		.byte	0
 2527 012c 00       		.byte	0
 2528 012d 13       		.uleb128 0x13
 2529 012e 2E       		.uleb128 0x2e
 2530 012f 00       		.byte	0
 2531 0130 3F       		.uleb128 0x3f
 2532 0131 19       		.uleb128 0x19
 2533 0132 03       		.uleb128 0x3
 2534 0133 0E       		.uleb128 0xe
 2535 0134 3A       		.uleb128 0x3a
 2536 0135 0B       		.uleb128 0xb
 2537 0136 3B       		.uleb128 0x3b
 2538 0137 05       		.uleb128 0x5
 2539 0138 11       		.uleb128 0x11
 2540 0139 01       		.uleb128 0x1
 2541 013a 12       		.uleb128 0x12
 2542 013b 06       		.uleb128 0x6
 2543 013c 40       		.uleb128 0x40
 2544 013d 18       		.uleb128 0x18
 2545 013e 9642     		.uleb128 0x2116
 2546 0140 19       		.uleb128 0x19
 2547 0141 00       		.byte	0
 2548 0142 00       		.byte	0
 2549 0143 14       		.uleb128 0x14
 2550 0144 2E       		.uleb128 0x2e
 2551 0145 01       		.byte	0x1
 2552 0146 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 53


 2553 0147 19       		.uleb128 0x19
 2554 0148 03       		.uleb128 0x3
 2555 0149 0E       		.uleb128 0xe
 2556 014a 3A       		.uleb128 0x3a
 2557 014b 0B       		.uleb128 0xb
 2558 014c 3B       		.uleb128 0x3b
 2559 014d 05       		.uleb128 0x5
 2560 014e 27       		.uleb128 0x27
 2561 014f 19       		.uleb128 0x19
 2562 0150 11       		.uleb128 0x11
 2563 0151 01       		.uleb128 0x1
 2564 0152 12       		.uleb128 0x12
 2565 0153 06       		.uleb128 0x6
 2566 0154 40       		.uleb128 0x40
 2567 0155 18       		.uleb128 0x18
 2568 0156 9642     		.uleb128 0x2116
 2569 0158 19       		.uleb128 0x19
 2570 0159 01       		.uleb128 0x1
 2571 015a 13       		.uleb128 0x13
 2572 015b 00       		.byte	0
 2573 015c 00       		.byte	0
 2574 015d 15       		.uleb128 0x15
 2575 015e 05       		.uleb128 0x5
 2576 015f 00       		.byte	0
 2577 0160 03       		.uleb128 0x3
 2578 0161 08       		.uleb128 0x8
 2579 0162 3A       		.uleb128 0x3a
 2580 0163 0B       		.uleb128 0xb
 2581 0164 3B       		.uleb128 0x3b
 2582 0165 05       		.uleb128 0x5
 2583 0166 49       		.uleb128 0x49
 2584 0167 13       		.uleb128 0x13
 2585 0168 02       		.uleb128 0x2
 2586 0169 18       		.uleb128 0x18
 2587 016a 00       		.byte	0
 2588 016b 00       		.byte	0
 2589 016c 16       		.uleb128 0x16
 2590 016d 2E       		.uleb128 0x2e
 2591 016e 01       		.byte	0x1
 2592 016f 3F       		.uleb128 0x3f
 2593 0170 19       		.uleb128 0x19
 2594 0171 03       		.uleb128 0x3
 2595 0172 0E       		.uleb128 0xe
 2596 0173 3A       		.uleb128 0x3a
 2597 0174 0B       		.uleb128 0xb
 2598 0175 3B       		.uleb128 0x3b
 2599 0176 05       		.uleb128 0x5
 2600 0177 11       		.uleb128 0x11
 2601 0178 01       		.uleb128 0x1
 2602 0179 12       		.uleb128 0x12
 2603 017a 06       		.uleb128 0x6
 2604 017b 40       		.uleb128 0x40
 2605 017c 18       		.uleb128 0x18
 2606 017d 9642     		.uleb128 0x2116
 2607 017f 19       		.uleb128 0x19
 2608 0180 01       		.uleb128 0x1
 2609 0181 13       		.uleb128 0x13
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 54


 2610 0182 00       		.byte	0
 2611 0183 00       		.byte	0
 2612 0184 17       		.uleb128 0x17
 2613 0185 34       		.uleb128 0x34
 2614 0186 00       		.byte	0
 2615 0187 03       		.uleb128 0x3
 2616 0188 0E       		.uleb128 0xe
 2617 0189 3A       		.uleb128 0x3a
 2618 018a 0B       		.uleb128 0xb
 2619 018b 3B       		.uleb128 0x3b
 2620 018c 05       		.uleb128 0x5
 2621 018d 49       		.uleb128 0x49
 2622 018e 13       		.uleb128 0x13
 2623 018f 02       		.uleb128 0x2
 2624 0190 18       		.uleb128 0x18
 2625 0191 00       		.byte	0
 2626 0192 00       		.byte	0
 2627 0193 18       		.uleb128 0x18
 2628 0194 34       		.uleb128 0x34
 2629 0195 00       		.byte	0
 2630 0196 03       		.uleb128 0x3
 2631 0197 08       		.uleb128 0x8
 2632 0198 3A       		.uleb128 0x3a
 2633 0199 0B       		.uleb128 0xb
 2634 019a 3B       		.uleb128 0x3b
 2635 019b 05       		.uleb128 0x5
 2636 019c 49       		.uleb128 0x49
 2637 019d 13       		.uleb128 0x13
 2638 019e 02       		.uleb128 0x2
 2639 019f 18       		.uleb128 0x18
 2640 01a0 00       		.byte	0
 2641 01a1 00       		.byte	0
 2642 01a2 19       		.uleb128 0x19
 2643 01a3 34       		.uleb128 0x34
 2644 01a4 00       		.byte	0
 2645 01a5 03       		.uleb128 0x3
 2646 01a6 0E       		.uleb128 0xe
 2647 01a7 3A       		.uleb128 0x3a
 2648 01a8 0B       		.uleb128 0xb
 2649 01a9 3B       		.uleb128 0x3b
 2650 01aa 05       		.uleb128 0x5
 2651 01ab 49       		.uleb128 0x49
 2652 01ac 13       		.uleb128 0x13
 2653 01ad 3F       		.uleb128 0x3f
 2654 01ae 19       		.uleb128 0x19
 2655 01af 3C       		.uleb128 0x3c
 2656 01b0 19       		.uleb128 0x19
 2657 01b1 00       		.byte	0
 2658 01b2 00       		.byte	0
 2659 01b3 1A       		.uleb128 0x1a
 2660 01b4 35       		.uleb128 0x35
 2661 01b5 00       		.byte	0
 2662 01b6 49       		.uleb128 0x49
 2663 01b7 13       		.uleb128 0x13
 2664 01b8 00       		.byte	0
 2665 01b9 00       		.byte	0
 2666 01ba 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 55


 2667 01bb 34       		.uleb128 0x34
 2668 01bc 00       		.byte	0
 2669 01bd 03       		.uleb128 0x3
 2670 01be 08       		.uleb128 0x8
 2671 01bf 3A       		.uleb128 0x3a
 2672 01c0 0B       		.uleb128 0xb
 2673 01c1 3B       		.uleb128 0x3b
 2674 01c2 0B       		.uleb128 0xb
 2675 01c3 49       		.uleb128 0x49
 2676 01c4 13       		.uleb128 0x13
 2677 01c5 3F       		.uleb128 0x3f
 2678 01c6 19       		.uleb128 0x19
 2679 01c7 02       		.uleb128 0x2
 2680 01c8 18       		.uleb128 0x18
 2681 01c9 00       		.byte	0
 2682 01ca 00       		.byte	0
 2683 01cb 1C       		.uleb128 0x1c
 2684 01cc 34       		.uleb128 0x34
 2685 01cd 00       		.byte	0
 2686 01ce 03       		.uleb128 0x3
 2687 01cf 0E       		.uleb128 0xe
 2688 01d0 3A       		.uleb128 0x3a
 2689 01d1 0B       		.uleb128 0xb
 2690 01d2 3B       		.uleb128 0x3b
 2691 01d3 0B       		.uleb128 0xb
 2692 01d4 49       		.uleb128 0x49
 2693 01d5 13       		.uleb128 0x13
 2694 01d6 3F       		.uleb128 0x3f
 2695 01d7 19       		.uleb128 0x19
 2696 01d8 02       		.uleb128 0x2
 2697 01d9 18       		.uleb128 0x18
 2698 01da 00       		.byte	0
 2699 01db 00       		.byte	0
 2700 01dc 1D       		.uleb128 0x1d
 2701 01dd 01       		.uleb128 0x1
 2702 01de 01       		.byte	0x1
 2703 01df 49       		.uleb128 0x49
 2704 01e0 13       		.uleb128 0x13
 2705 01e1 01       		.uleb128 0x1
 2706 01e2 13       		.uleb128 0x13
 2707 01e3 00       		.byte	0
 2708 01e4 00       		.byte	0
 2709 01e5 1E       		.uleb128 0x1e
 2710 01e6 21       		.uleb128 0x21
 2711 01e7 00       		.byte	0
 2712 01e8 49       		.uleb128 0x49
 2713 01e9 13       		.uleb128 0x13
 2714 01ea 2F       		.uleb128 0x2f
 2715 01eb 0B       		.uleb128 0xb
 2716 01ec 00       		.byte	0
 2717 01ed 00       		.byte	0
 2718 01ee 00       		.byte	0
 2719              		.section	.debug_aranges,"",%progbits
 2720 0000 94000000 		.4byte	0x94
 2721 0004 0200     		.2byte	0x2
 2722 0006 00000000 		.4byte	.Ldebug_info0
 2723 000a 04       		.byte	0x4
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 56


 2724 000b 00       		.byte	0
 2725 000c 0000     		.2byte	0
 2726 000e 0000     		.2byte	0
 2727 0010 00000000 		.4byte	.LFB64
 2728 0014 C8000000 		.4byte	.LFE64-.LFB64
 2729 0018 00000000 		.4byte	.LFB65
 2730 001c 18000000 		.4byte	.LFE65-.LFB65
 2731 0020 00000000 		.4byte	.LFB66
 2732 0024 18000000 		.4byte	.LFE66-.LFB66
 2733 0028 00000000 		.4byte	.LFB67
 2734 002c 18000000 		.4byte	.LFE67-.LFB67
 2735 0030 00000000 		.4byte	.LFB68
 2736 0034 18000000 		.4byte	.LFE68-.LFB68
 2737 0038 00000000 		.4byte	.LFB69
 2738 003c 18000000 		.4byte	.LFE69-.LFB69
 2739 0040 00000000 		.4byte	.LFB70
 2740 0044 18000000 		.4byte	.LFE70-.LFB70
 2741 0048 00000000 		.4byte	.LFB71
 2742 004c 64000000 		.4byte	.LFE71-.LFB71
 2743 0050 00000000 		.4byte	.LFB72
 2744 0054 E0000000 		.4byte	.LFE72-.LFB72
 2745 0058 00000000 		.4byte	.LFB73
 2746 005c 6C000000 		.4byte	.LFE73-.LFB73
 2747 0060 00000000 		.4byte	.LFB74
 2748 0064 48000000 		.4byte	.LFE74-.LFB74
 2749 0068 00000000 		.4byte	.LFB75
 2750 006c 78010000 		.4byte	.LFE75-.LFB75
 2751 0070 00000000 		.4byte	.LFB76
 2752 0074 68000000 		.4byte	.LFE76-.LFB76
 2753 0078 00000000 		.4byte	.LFB77
 2754 007c 3E000000 		.4byte	.LFE77-.LFB77
 2755 0080 00000000 		.4byte	.LFB78
 2756 0084 26000000 		.4byte	.LFE78-.LFB78
 2757 0088 00000000 		.4byte	.LFB79
 2758 008c C8000000 		.4byte	.LFE79-.LFB79
 2759 0090 00000000 		.4byte	0
 2760 0094 00000000 		.4byte	0
 2761              		.section	.debug_ranges,"",%progbits
 2762              	.Ldebug_ranges0:
 2763 0000 00000000 		.4byte	.LFB64
 2764 0004 C8000000 		.4byte	.LFE64
 2765 0008 00000000 		.4byte	.LFB65
 2766 000c 18000000 		.4byte	.LFE65
 2767 0010 00000000 		.4byte	.LFB66
 2768 0014 18000000 		.4byte	.LFE66
 2769 0018 00000000 		.4byte	.LFB67
 2770 001c 18000000 		.4byte	.LFE67
 2771 0020 00000000 		.4byte	.LFB68
 2772 0024 18000000 		.4byte	.LFE68
 2773 0028 00000000 		.4byte	.LFB69
 2774 002c 18000000 		.4byte	.LFE69
 2775 0030 00000000 		.4byte	.LFB70
 2776 0034 18000000 		.4byte	.LFE70
 2777 0038 00000000 		.4byte	.LFB71
 2778 003c 64000000 		.4byte	.LFE71
 2779 0040 00000000 		.4byte	.LFB72
 2780 0044 E0000000 		.4byte	.LFE72
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 57


 2781 0048 00000000 		.4byte	.LFB73
 2782 004c 6C000000 		.4byte	.LFE73
 2783 0050 00000000 		.4byte	.LFB74
 2784 0054 48000000 		.4byte	.LFE74
 2785 0058 00000000 		.4byte	.LFB75
 2786 005c 78010000 		.4byte	.LFE75
 2787 0060 00000000 		.4byte	.LFB76
 2788 0064 68000000 		.4byte	.LFE76
 2789 0068 00000000 		.4byte	.LFB77
 2790 006c 3E000000 		.4byte	.LFE77
 2791 0070 00000000 		.4byte	.LFB78
 2792 0074 26000000 		.4byte	.LFE78
 2793 0078 00000000 		.4byte	.LFB79
 2794 007c C8000000 		.4byte	.LFE79
 2795 0080 00000000 		.4byte	0
 2796 0084 00000000 		.4byte	0
 2797              		.section	.debug_line,"",%progbits
 2798              	.Ldebug_line0:
 2799 0000 B7030000 		.section	.debug_str,"MS",%progbits,1
 2799      02005601 
 2799      00000201 
 2799      FB0E0D00 
 2799      01010101 
 2800              	.LASF51:
 2801 0000 53365F44 		.ascii	"S6_DETECTED\000"
 2801      45544543 
 2801      54454400 
 2802              	.LASF60:
 2803 000c 75736250 		.ascii	"usbPutChar\000"
 2803      75744368 
 2803      617200
 2804              	.LASF40:
 2805 0017 5475726E 		.ascii	"TurnLeft\000"
 2805      4C656674 
 2805      00
 2806              	.LASF64:
 2807 0020 74735F65 		.ascii	"ts_enc\000"
 2807      6E6300
 2808              	.LASF20:
 2809 0027 646F7562 		.ascii	"double\000"
 2809      6C6500
 2810              	.LASF73:
 2811 002e 666C6167 		.ascii	"flag_packet\000"
 2811      5F706163 
 2811      6B657400 
 2812              	.LASF70:
 2813 003a 666C6167 		.ascii	"flag_ts_speed\000"
 2813      5F74735F 
 2813      73706565 
 2813      6400
 2814              	.LASF34:
 2815 0048 67325F78 		.ascii	"g2_xpos\000"
 2815      706F7300 
 2816              	.LASF2:
 2817 0050 73686F72 		.ascii	"short int\000"
 2817      7420696E 
 2817      7400
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 58


 2818              	.LASF81:
 2819 005a 73797374 		.ascii	"system_state\000"
 2819      656D5F73 
 2819      74617465 
 2819      00
 2820              	.LASF10:
 2821 0067 73697A65 		.ascii	"sizetype\000"
 2821      74797065 
 2821      00
 2822              	.LASF94:
 2823 0070 44697265 		.ascii	"DirectionState\000"
 2823      6374696F 
 2823      6E537461 
 2823      746500
 2824              	.LASF80:
 2825 007f 75736242 		.ascii	"usbBuffer\000"
 2825      75666665 
 2825      7200
 2826              	.LASF90:
 2827 0089 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2827      43313120 
 2827      352E342E 
 2827      31203230 
 2827      31363036 
 2828 00bc 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2828      20726576 
 2828      6973696F 
 2828      6E203233 
 2828      37373135 
 2829 00ef 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2829      66756E63 
 2829      74696F6E 
 2829      2D736563 
 2829      74696F6E 
 2830              	.LASF53:
 2831 0117 6D61696E 		.ascii	"main\000"
 2831      00
 2832              	.LASF49:
 2833 011c 53345F44 		.ascii	"S4_DETECTED\000"
 2833      45544543 
 2833      54454400 
 2834              	.LASF41:
 2835 0128 41646A75 		.ascii	"AdjustToTheLeft\000"
 2835      7374546F 
 2835      5468654C 
 2835      65667400 
 2836              	.LASF15:
 2837 0138 75696E74 		.ascii	"uint16\000"
 2837      313600
 2838              	.LASF22:
 2839 013f 696E6465 		.ascii	"index\000"
 2839      7800
 2840              	.LASF45:
 2841 0145 73706565 		.ascii	"speedTimer\000"
 2841      6454696D 
 2841      657200
 2842              	.LASF18:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 59


 2843 0150 696E7431 		.ascii	"int16\000"
 2843      3600
 2844              	.LASF14:
 2845 0156 75696E74 		.ascii	"uint8\000"
 2845      3800
 2846              	.LASF33:
 2847 015c 67315F64 		.ascii	"g1_direction\000"
 2847      69726563 
 2847      74696F6E 
 2847      00
 2848              	.LASF78:
 2849 0169 6C696E65 		.ascii	"line\000"
 2849      00
 2850              	.LASF19:
 2851 016e 666C6F61 		.ascii	"float\000"
 2851      7400
 2852              	.LASF6:
 2853 0174 6C6F6E67 		.ascii	"long long int\000"
 2853      206C6F6E 
 2853      6720696E 
 2853      7400
 2854              	.LASF58:
 2855 0182 75736250 		.ascii	"usbPutString\000"
 2855      75745374 
 2855      72696E67 
 2855      00
 2856              	.LASF17:
 2857 018f 696E7438 		.ascii	"int8\000"
 2857      00
 2858              	.LASF69:
 2859 0194 666C6167 		.ascii	"flag_ts_update\000"
 2859      5F74735F 
 2859      75706461 
 2859      746500
 2860              	.LASF35:
 2861 01a3 67325F79 		.ascii	"g2_ypos\000"
 2861      706F7300 
 2862              	.LASF29:
 2863 01ab 67305F64 		.ascii	"g0_direction\000"
 2863      69726563 
 2863      74696F6E 
 2863      00
 2864              	.LASF26:
 2865 01b8 67305F78 		.ascii	"g0_xpos\000"
 2865      706F7300 
 2866              	.LASF4:
 2867 01c0 6C6F6E67 		.ascii	"long int\000"
 2867      20696E74 
 2867      00
 2868              	.LASF57:
 2869 01c9 43686563 		.ascii	"CheckSensorDirection\000"
 2869      6B53656E 
 2869      736F7244 
 2869      69726563 
 2869      74696F6E 
 2870              	.LASF47:
 2871 01de 53325F44 		.ascii	"S2_DETECTED\000"
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 60


 2871      45544543 
 2871      54454400 
 2872              	.LASF82:
 2873 01ea 63757272 		.ascii	"currentDirection\000"
 2873      656E7444 
 2873      69726563 
 2873      74696F6E 
 2873      00
 2874              	.LASF71:
 2875 01fb 666C6167 		.ascii	"flag_ts_display\000"
 2875      5F74735F 
 2875      64697370 
 2875      6C617900 
 2876              	.LASF72:
 2877 020b 666C6167 		.ascii	"flag_rx\000"
 2877      5F727800 
 2878              	.LASF1:
 2879 0213 756E7369 		.ascii	"unsigned char\000"
 2879      676E6564 
 2879      20636861 
 2879      7200
 2880              	.LASF84:
 2881 0221 746F7461 		.ascii	"totalMilliseconds\000"
 2881      6C4D696C 
 2881      6C697365 
 2881      636F6E64 
 2881      7300
 2882              	.LASF79:
 2883 0233 656E7472 		.ascii	"entry\000"
 2883      7900
 2884              	.LASF9:
 2885 0239 6C6F6E67 		.ascii	"long double\000"
 2885      20646F75 
 2885      626C6500 
 2886              	.LASF83:
 2887 0245 70726576 		.ascii	"previousDirection\000"
 2887      696F7573 
 2887      44697265 
 2887      6374696F 
 2887      6E00
 2888              	.LASF85:
 2889 0257 746F7461 		.ascii	"totalDistance\000"
 2889      6C446973 
 2889      74616E63 
 2889      6500
 2890              	.LASF89:
 2891 0265 6B656570 		.ascii	"keepLedOn\000"
 2891      4C65644F 
 2891      6E00
 2892              	.LASF28:
 2893 026f 67305F73 		.ascii	"g0_speed\000"
 2893      70656564 
 2893      00
 2894              	.LASF75:
 2895 0278 64617461 		.ascii	"dataready_flag\000"
 2895      72656164 
 2895      795F666C 
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 61


 2895      616700
 2896              	.LASF30:
 2897 0287 67315F78 		.ascii	"g1_xpos\000"
 2897      706F7300 
 2898              	.LASF0:
 2899 028f 7369676E 		.ascii	"signed char\000"
 2899      65642063 
 2899      68617200 
 2900              	.LASF13:
 2901 029b 696E7433 		.ascii	"int32_t\000"
 2901      325F7400 
 2902              	.LASF7:
 2903 02a3 6C6F6E67 		.ascii	"long long unsigned int\000"
 2903      206C6F6E 
 2903      6720756E 
 2903      7369676E 
 2903      65642069 
 2904              	.LASF42:
 2905 02ba 41646A75 		.ascii	"AdjustToTheRight\000"
 2905      7374546F 
 2905      54686552 
 2905      69676874 
 2905      00
 2906              	.LASF8:
 2907 02cb 756E7369 		.ascii	"unsigned int\000"
 2907      676E6564 
 2907      20696E74 
 2907      00
 2908              	.LASF88:
 2909 02d8 74696D65 		.ascii	"timerInt\000"
 2909      72496E74 
 2909      00
 2910              	.LASF74:
 2911 02e1 666C6167 		.ascii	"flag_KB_string\000"
 2911      5F4B425F 
 2911      73747269 
 2911      6E6700
 2912              	.LASF62:
 2913 02f0 75736242 		.ascii	"usbBufCount\000"
 2913      7566436F 
 2913      756E7400 
 2914              	.LASF56:
 2915 02fc 53657452 		.ascii	"SetRobotMovement\000"
 2915      6F626F74 
 2915      4D6F7665 
 2915      6D656E74 
 2915      00
 2916              	.LASF52:
 2917 030d 54494D45 		.ascii	"TIMER_FINISH\000"
 2917      525F4649 
 2917      4E495348 
 2917      00
 2918              	.LASF36:
 2919 031a 67325F73 		.ascii	"g2_speed\000"
 2919      70656564 
 2919      00
 2920              	.LASF50:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 62


 2921 0323 53355F44 		.ascii	"S5_DETECTED\000"
 2921      45544543 
 2921      54454400 
 2922              	.LASF3:
 2923 032f 73686F72 		.ascii	"short unsigned int\000"
 2923      7420756E 
 2923      7369676E 
 2923      65642069 
 2923      6E7400
 2924              	.LASF93:
 2925 0342 64617461 		.ascii	"data_main\000"
 2925      5F6D6169 
 2925      6E00
 2926              	.LASF55:
 2927 034c 52657365 		.ascii	"ResetSensorFlags\000"
 2927      7453656E 
 2927      736F7246 
 2927      6C616773 
 2927      00
 2928              	.LASF11:
 2929 035d 63686172 		.ascii	"char\000"
 2929      00
 2930              	.LASF38:
 2931 0362 466F7277 		.ascii	"Forward\000"
 2931      61726400 
 2932              	.LASF87:
 2933 036a 71756164 		.ascii	"quadDec2Count\000"
 2933      44656332 
 2933      436F756E 
 2933      7400
 2934              	.LASF31:
 2935 0378 67315F79 		.ascii	"g1_ypos\000"
 2935      706F7300 
 2936              	.LASF37:
 2937 0380 67325F64 		.ascii	"g2_direction\000"
 2937      69726563 
 2937      74696F6E 
 2937      00
 2938              	.LASF32:
 2939 038d 67315F73 		.ascii	"g1_speed\000"
 2939      70656564 
 2939      00
 2940              	.LASF77:
 2941 0396 64697370 		.ascii	"displaystring\000"
 2941      6C617973 
 2941      7472696E 
 2941      6700
 2942              	.LASF23:
 2943 03a4 726F626F 		.ascii	"robot_xpos\000"
 2943      745F7870 
 2943      6F7300
 2944              	.LASF39:
 2945 03af 5475726E 		.ascii	"TurnRight\000"
 2945      52696768 
 2945      7400
 2946              	.LASF86:
 2947 03b9 62756666 		.ascii	"buffer\000"
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 63


 2947      657200
 2948              	.LASF16:
 2949 03c0 75696E74 		.ascii	"uint32\000"
 2949      333200
 2950              	.LASF91:
 2951 03c7 6D61696E 		.ascii	"main.c\000"
 2951      2E6300
 2952              	.LASF5:
 2953 03ce 6C6F6E67 		.ascii	"long unsigned int\000"
 2953      20756E73 
 2953      69676E65 
 2953      6420696E 
 2953      7400
 2954              	.LASF61:
 2955 03e0 75736253 		.ascii	"usbStarted\000"
 2955      74617274 
 2955      656400
 2956              	.LASF44:
 2957 03eb 556E6B6E 		.ascii	"Unknown\000"
 2957      6F776E00 
 2958              	.LASF48:
 2959 03f3 53335F44 		.ascii	"S3_DETECTED\000"
 2959      45544543 
 2959      54454400 
 2960              	.LASF66:
 2961 03ff 74735F73 		.ascii	"ts_speed\000"
 2961      70656564 
 2961      00
 2962              	.LASF59:
 2963 0408 636F756E 		.ascii	"count\000"
 2963      7400
 2964              	.LASF68:
 2965 040e 666C6167 		.ascii	"flag_ts_enc\000"
 2965      5F74735F 
 2965      656E6300 
 2966              	.LASF12:
 2967 041a 5F5F696E 		.ascii	"__int32_t\000"
 2967      7433325F 
 2967      7400
 2968              	.LASF43:
 2969 0424 53746F70 		.ascii	"Stop\000"
 2969      00
 2970              	.LASF27:
 2971 0429 67305F79 		.ascii	"g0_ypos\000"
 2971      706F7300 
 2972              	.LASF67:
 2973 0431 74735F64 		.ascii	"ts_display\000"
 2973      6973706C 
 2973      617900
 2974              	.LASF65:
 2975 043c 74735F75 		.ascii	"ts_update\000"
 2975      70646174 
 2975      6500
 2976              	.LASF96:
 2977 0446 68616E64 		.ascii	"handle_usb\000"
 2977      6C655F75 
 2977      736200
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cc8bFZEY.s 			page 64


 2978              	.LASF95:
 2979 0451 71756164 		.ascii	"quadCountToRPM\000"
 2979      436F756E 
 2979      74546F52 
 2979      504D00
 2980              	.LASF76:
 2981 0460 666C6167 		.ascii	"flag_rf_transmission_active\000"
 2981      5F72665F 
 2981      7472616E 
 2981      736D6973 
 2981      73696F6E 
 2982              	.LASF24:
 2983 047c 726F626F 		.ascii	"robot_ypos\000"
 2983      745F7970 
 2983      6F7300
 2984              	.LASF63:
 2985 0487 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2985      52784275 
 2985      66666572 
 2985      00
 2986              	.LASF92:
 2987 0494 433A5C50 		.ascii	"C:\\Projects\\University\\301-Robot\\psoc student p"
 2987      726F6A65 
 2987      6374735C 
 2987      556E6976 
 2987      65727369 
 2988 04c3 61636B5C 		.ascii	"ack\\psoc_code_base\\CS301_Class.cydsn\000"
 2988      70736F63 
 2988      5F636F64 
 2988      655F6261 
 2988      73655C43 
 2989              	.LASF54:
 2990 04e8 64697265 		.ascii	"directionState\000"
 2990      6374696F 
 2990      6E537461 
 2990      746500
 2991              	.LASF21:
 2992 04f7 72737369 		.ascii	"rssi\000"
 2992      00
 2993              	.LASF25:
 2994 04fc 726F626F 		.ascii	"robot_orientation\000"
 2994      745F6F72 
 2994      69656E74 
 2994      6174696F 
 2994      6E00
 2995              	.LASF46:
 2996 050e 53315F44 		.ascii	"S1_DETECTED\000"
 2996      45544543 
 2996      54454400 
 2997              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
