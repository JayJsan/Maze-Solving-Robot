ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\015\000"
 100      31203230 
 100      31360A0D 
 100      00
 101 0011 00000000 		.space	51
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.global	currentDirection
 107              		.align	2
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 3


 108              		.type	currentDirection, %object
 109              		.size	currentDirection, 4
 110              	currentDirection:
 111 0044 05000000 		.word	5
 112              		.global	s1
 113              		.bss
 114              		.type	s1, %object
 115              		.size	s1, 1
 116              	s1:
 117 0012 00       		.space	1
 118              		.global	s2
 119              		.type	s2, %object
 120              		.size	s2, 1
 121              	s2:
 122 0013 00       		.space	1
 123              		.global	s3
 124              		.type	s3, %object
 125              		.size	s3, 1
 126              	s3:
 127 0014 00       		.space	1
 128              		.global	s4
 129              		.type	s4, %object
 130              		.size	s4, 1
 131              	s4:
 132 0015 00       		.space	1
 133              		.global	s5
 134              		.type	s5, %object
 135              		.size	s5, 1
 136              	s5:
 137 0016 00       		.space	1
 138              		.global	s6
 139              		.type	s6, %object
 140              		.size	s6, 1
 141              	s6:
 142 0017 00       		.space	1
 143              		.global	totalMilliseconds
 144              		.align	2
 145              		.type	totalMilliseconds, %object
 146              		.size	totalMilliseconds, 4
 147              	totalMilliseconds:
 148 0018 00000000 		.space	4
 149              		.global	totalDistance
 150              		.align	2
 151              		.type	totalDistance, %object
 152              		.size	totalDistance, 4
 153              	totalDistance:
 154 001c 00000000 		.space	4
 155              		.comm	buffer,69,4
 156              		.global	quadDec2Count
 157              		.align	2
 158              		.type	quadDec2Count, %object
 159              		.size	quadDec2Count, 4
 160              	quadDec2Count:
 161 0020 00000000 		.space	4
 162              		.global	timerInt
 163              		.align	2
 164              		.type	timerInt, %object
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 4


 165              		.size	timerInt, 4
 166              	timerInt:
 167 0024 00000000 		.space	4
 168              		.global	keepLedOn
 169              		.align	2
 170              		.type	keepLedOn, %object
 171              		.size	keepLedOn, 4
 172              	keepLedOn:
 173 0028 00000000 		.space	4
 174              		.global	__aeabi_ui2d
 175              		.global	__aeabi_i2d
 176              		.global	__aeabi_ddiv
 177              		.global	__aeabi_dmul
 178              		.global	__aeabi_dadd
 179              		.global	__aeabi_d2uiz
 180              		.section	.text.speedTimer,"ax",%progbits
 181              		.align	2
 182              		.global	speedTimer
 183              		.thumb
 184              		.thumb_func
 185              		.type	speedTimer, %function
 186              	speedTimer:
 187              	.LFB64:
 188              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <string.h>
  19:main.c        **** #include <stdlib.h>
  20:main.c        **** #include <project.h>
  21:main.c        **** //* ========================================
  22:main.c        **** #include "defines.h"
  23:main.c        **** #include "vars.h"
  24:main.c        **** //#include "pathfinding.h"
  25:main.c        **** #include "initialise.h"
  26:main.c        **** #include "movement.h"
  27:main.c        **** //#include "usbUART.h"
  28:main.c        **** //* ========================================
  29:main.c        **** // USBUART
  30:main.c        **** void usbPutString(char *s);
  31:main.c        **** void usbPutChar(char c);
  32:main.c        **** void handle_usb();
  33:main.c        **** //* ========================================
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 5


  34:main.c        **** int16 quadCountToRPM(uint16 count);
  35:main.c        **** //* ========================================
  36:main.c        **** // Sensors, Course correction and Movement Direction.
  37:main.c        **** void ResetSensorFlags();
  38:main.c        **** void SetRobotMovement();
  39:main.c        **** enum DirectionState CheckSensorDirection();
  40:main.c        **** enum DirectionState {Forward, TurnRight, TurnLeft, StopToTurnRight, StopToTurnLeft, Stop, Unknown};
  41:main.c        **** enum DirectionState currentDirection = Stop;
  42:main.c        **** // ----------------------------------------
  43:main.c        **** uint8 s1 = 0; // black = 0, white = 1
  44:main.c        **** uint8 s2 = 0;
  45:main.c        **** uint8 s3 = 0;
  46:main.c        **** uint8 s4 = 0;
  47:main.c        **** uint8 s5 = 0;
  48:main.c        **** uint8 s6 = 0;
  49:main.c        **** //* ========================================
  50:main.c        **** // Calculating Distance
  51:main.c        **** #define WHEEL_DIAMETER_MM 65
  52:main.c        **** uint32 totalMilliseconds = 0;
  53:main.c        **** uint32 totalDistance = 0; // in mm
  54:main.c        **** //* ========================================
  55:main.c        **** char buffer[69];
  56:main.c        **** int quadDec2Count = 0;
  57:main.c        **** int timerInt = 0;
  58:main.c        **** int keepLedOn = 0;
  59:main.c        **** 
  60:main.c        **** 
  61:main.c        **** //char map[MAX_ROWS][MAX_COLS]; // global map array- stores the map
  62:main.c        **** 
  63:main.c        **** CY_ISR (speedTimer) {
 189              		.loc 1 63 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 1, uses_anonymous_args = 0
 193 0000 B0B5     		push	{r4, r5, r7, lr}
 194              		.cfi_def_cfa_offset 16
 195              		.cfi_offset 4, -16
 196              		.cfi_offset 5, -12
 197              		.cfi_offset 7, -8
 198              		.cfi_offset 14, -4
 199 0002 00AF     		add	r7, sp, #0
 200              		.cfi_def_cfa_register 7
  64:main.c        ****     timerInt = 1;
 201              		.loc 1 64 0
 202 0004 2A4B     		ldr	r3, .L3+8
 203 0006 0122     		movs	r2, #1
 204 0008 1A60     		str	r2, [r3]
  65:main.c        ****     //quadDec_M1 used for turning macros
  66:main.c        ****     quadDec2Count = QuadDec_M2_GetCounter();
 205              		.loc 1 66 0
 206 000a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 207 000e 0346     		mov	r3, r0
 208 0010 1A46     		mov	r2, r3
 209 0012 284B     		ldr	r3, .L3+12
 210 0014 1A60     		str	r2, [r3]
  67:main.c        ****     
  68:main.c        ****     if (currentDirection == Forward && quadDec2Count != 0) {
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 6


 211              		.loc 1 68 0
 212 0016 284B     		ldr	r3, .L3+16
 213 0018 1B68     		ldr	r3, [r3]
 214 001a 002B     		cmp	r3, #0
 215 001c 38D1     		bne	.L2
 216              		.loc 1 68 0 is_stmt 0 discriminator 1
 217 001e 254B     		ldr	r3, .L3+12
 218 0020 1B68     		ldr	r3, [r3]
 219 0022 002B     		cmp	r3, #0
 220 0024 34D0     		beq	.L2
  69:main.c        ****         totalDistance = totalDistance + (abs(quadDec2Count) / 57.0) * CY_M_PI * WHEEL_DIAMETER_MM;
 221              		.loc 1 69 0 is_stmt 1
 222 0026 254B     		ldr	r3, .L3+20
 223 0028 1B68     		ldr	r3, [r3]
 224 002a 1846     		mov	r0, r3
 225 002c FFF7FEFF 		bl	__aeabi_ui2d
 226 0030 0446     		mov	r4, r0
 227 0032 0D46     		mov	r5, r1
 228 0034 1F4B     		ldr	r3, .L3+12
 229 0036 1B68     		ldr	r3, [r3]
 230 0038 002B     		cmp	r3, #0
 231 003a B8BF     		it	lt
 232 003c 5B42     		rsblt	r3, r3, #0
 233 003e 1846     		mov	r0, r3
 234 0040 FFF7FEFF 		bl	__aeabi_i2d
 235 0044 4FF00002 		mov	r2, #0
 236 0048 1D4B     		ldr	r3, .L3+24
 237 004a FFF7FEFF 		bl	__aeabi_ddiv
 238 004e 0246     		mov	r2, r0
 239 0050 0B46     		mov	r3, r1
 240 0052 1046     		mov	r0, r2
 241 0054 1946     		mov	r1, r3
 242 0056 14A3     		adr	r3, .L3
 243 0058 D3E90023 		ldrd	r2, [r3]
 244 005c FFF7FEFF 		bl	__aeabi_dmul
 245 0060 0246     		mov	r2, r0
 246 0062 0B46     		mov	r3, r1
 247 0064 1046     		mov	r0, r2
 248 0066 1946     		mov	r1, r3
 249 0068 4FF00002 		mov	r2, #0
 250 006c 154B     		ldr	r3, .L3+28
 251 006e FFF7FEFF 		bl	__aeabi_dmul
 252 0072 0246     		mov	r2, r0
 253 0074 0B46     		mov	r3, r1
 254 0076 2046     		mov	r0, r4
 255 0078 2946     		mov	r1, r5
 256 007a FFF7FEFF 		bl	__aeabi_dadd
 257 007e 0346     		mov	r3, r0
 258 0080 0C46     		mov	r4, r1
 259 0082 1846     		mov	r0, r3
 260 0084 2146     		mov	r1, r4
 261 0086 FFF7FEFF 		bl	__aeabi_d2uiz
 262 008a 0246     		mov	r2, r0
 263 008c 0B4B     		ldr	r3, .L3+20
 264 008e 1A60     		str	r2, [r3]
 265              	.L2:
  70:main.c        ****     }
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 7


  71:main.c        ****     
  72:main.c        ****     QuadDec_M2_SetCounter(0); // reset count
 266              		.loc 1 72 0
 267 0090 0020     		movs	r0, #0
 268 0092 FFF7FEFF 		bl	QuadDec_M2_SetCounter
  73:main.c        ****     QuadDec_M2_Start(); // restart counter
 269              		.loc 1 73 0
 270 0096 FFF7FEFF 		bl	QuadDec_M2_Start
  74:main.c        ****     
  75:main.c        **** 
  76:main.c        ****     SpeedTimer_ReadStatusRegister(); // clear interrupt
 271              		.loc 1 76 0
 272 009a FFF7FEFF 		bl	SpeedTimer_ReadStatusRegister
  77:main.c        **** }
 273              		.loc 1 77 0
 274 009e 00BF     		nop
 275 00a0 B0BD     		pop	{r4, r5, r7, pc}
 276              	.L4:
 277 00a2 00BFAFF3 		.align	3
 277      0080
 278              	.L3:
 279 00a8 182D4454 		.word	1413754136
 280 00ac FB210940 		.word	1074340347
 281 00b0 00000000 		.word	timerInt
 282 00b4 00000000 		.word	quadDec2Count
 283 00b8 00000000 		.word	currentDirection
 284 00bc 00000000 		.word	totalDistance
 285 00c0 00804C40 		.word	1078755328
 286 00c4 00405040 		.word	1079001088
 287              		.cfi_endproc
 288              	.LFE64:
 289              		.size	speedTimer, .-speedTimer
 290              		.section	.text.S1_DETECTED,"ax",%progbits
 291              		.align	2
 292              		.global	S1_DETECTED
 293              		.thumb
 294              		.thumb_func
 295              		.type	S1_DETECTED, %function
 296              	S1_DETECTED:
 297              	.LFB65:
  78:main.c        **** 
  79:main.c        **** CY_ISR(S1_DETECTED) {
 298              		.loc 1 79 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 1, uses_anonymous_args = 0
 302 0000 80B5     		push	{r7, lr}
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 7, -8
 305              		.cfi_offset 14, -4
 306 0002 00AF     		add	r7, sp, #0
 307              		.cfi_def_cfa_register 7
  80:main.c        ****     // Sensor has detected WHITE
  81:main.c        ****     s1 = 1; // , Black = 0, White = 1
 308              		.loc 1 81 0
 309 0004 034B     		ldr	r3, .L6
 310 0006 0122     		movs	r2, #1
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 8


 311 0008 1A70     		strb	r2, [r3]
  82:main.c        ****     LED_Write(1u);
 312              		.loc 1 82 0
 313 000a 0120     		movs	r0, #1
 314 000c FFF7FEFF 		bl	LED_Write
  83:main.c        ****     //moveForward();
  84:main.c        **** }
 315              		.loc 1 84 0
 316 0010 00BF     		nop
 317 0012 80BD     		pop	{r7, pc}
 318              	.L7:
 319              		.align	2
 320              	.L6:
 321 0014 00000000 		.word	s1
 322              		.cfi_endproc
 323              	.LFE65:
 324              		.size	S1_DETECTED, .-S1_DETECTED
 325              		.section	.text.S2_DETECTED,"ax",%progbits
 326              		.align	2
 327              		.global	S2_DETECTED
 328              		.thumb
 329              		.thumb_func
 330              		.type	S2_DETECTED, %function
 331              	S2_DETECTED:
 332              	.LFB66:
  85:main.c        **** 
  86:main.c        **** CY_ISR(S2_DETECTED) {
 333              		.loc 1 86 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 1, uses_anonymous_args = 0
 337 0000 80B5     		push	{r7, lr}
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 7, -8
 340              		.cfi_offset 14, -4
 341 0002 00AF     		add	r7, sp, #0
 342              		.cfi_def_cfa_register 7
  87:main.c        ****     // Sensor has detected WHITE
  88:main.c        ****     s2 = 1; // , Black = 0, White = 1
 343              		.loc 1 88 0
 344 0004 034B     		ldr	r3, .L9
 345 0006 0122     		movs	r2, #1
 346 0008 1A70     		strb	r2, [r3]
  89:main.c        ****     LED_Write(1u);
 347              		.loc 1 89 0
 348 000a 0120     		movs	r0, #1
 349 000c FFF7FEFF 		bl	LED_Write
  90:main.c        ****     //moveForward();
  91:main.c        **** }
 350              		.loc 1 91 0
 351 0010 00BF     		nop
 352 0012 80BD     		pop	{r7, pc}
 353              	.L10:
 354              		.align	2
 355              	.L9:
 356 0014 00000000 		.word	s2
 357              		.cfi_endproc
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 9


 358              	.LFE66:
 359              		.size	S2_DETECTED, .-S2_DETECTED
 360              		.section	.text.S3_DETECTED,"ax",%progbits
 361              		.align	2
 362              		.global	S3_DETECTED
 363              		.thumb
 364              		.thumb_func
 365              		.type	S3_DETECTED, %function
 366              	S3_DETECTED:
 367              	.LFB67:
  92:main.c        **** 
  93:main.c        **** CY_ISR(S3_DETECTED) {
 368              		.loc 1 93 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 1, uses_anonymous_args = 0
 372 0000 80B5     		push	{r7, lr}
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 7, -8
 375              		.cfi_offset 14, -4
 376 0002 00AF     		add	r7, sp, #0
 377              		.cfi_def_cfa_register 7
  94:main.c        ****     // Sensor has detected WHITE
  95:main.c        ****     s3 = 1; // , Black = 0, White = 1
 378              		.loc 1 95 0
 379 0004 034B     		ldr	r3, .L12
 380 0006 0122     		movs	r2, #1
 381 0008 1A70     		strb	r2, [r3]
  96:main.c        ****     LED_Write(1u);
 382              		.loc 1 96 0
 383 000a 0120     		movs	r0, #1
 384 000c FFF7FEFF 		bl	LED_Write
  97:main.c        **** }
 385              		.loc 1 97 0
 386 0010 00BF     		nop
 387 0012 80BD     		pop	{r7, pc}
 388              	.L13:
 389              		.align	2
 390              	.L12:
 391 0014 00000000 		.word	s3
 392              		.cfi_endproc
 393              	.LFE67:
 394              		.size	S3_DETECTED, .-S3_DETECTED
 395              		.section	.text.S4_DETECTED,"ax",%progbits
 396              		.align	2
 397              		.global	S4_DETECTED
 398              		.thumb
 399              		.thumb_func
 400              		.type	S4_DETECTED, %function
 401              	S4_DETECTED:
 402              	.LFB68:
  98:main.c        **** 
  99:main.c        **** CY_ISR(S4_DETECTED) {
 403              		.loc 1 99 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 10


 407              		@ link register save eliminated.
 408 0000 80B4     		push	{r7}
 409              		.cfi_def_cfa_offset 4
 410              		.cfi_offset 7, -4
 411 0002 00AF     		add	r7, sp, #0
 412              		.cfi_def_cfa_register 7
 100:main.c        ****     // Sensor has detected WHITE
 101:main.c        ****     s4 = 1; // , Black = 0, White = 1
 413              		.loc 1 101 0
 414 0004 034B     		ldr	r3, .L15
 415 0006 0122     		movs	r2, #1
 416 0008 1A70     		strb	r2, [r3]
 102:main.c        ****     //LED_Write(1u);
 103:main.c        **** }
 417              		.loc 1 103 0
 418 000a 00BF     		nop
 419 000c BD46     		mov	sp, r7
 420              		.cfi_def_cfa_register 13
 421              		@ sp needed
 422 000e 80BC     		pop	{r7}
 423              		.cfi_restore 7
 424              		.cfi_def_cfa_offset 0
 425 0010 7047     		bx	lr
 426              	.L16:
 427 0012 00BF     		.align	2
 428              	.L15:
 429 0014 00000000 		.word	s4
 430              		.cfi_endproc
 431              	.LFE68:
 432              		.size	S4_DETECTED, .-S4_DETECTED
 433              		.section	.text.S5_DETECTED,"ax",%progbits
 434              		.align	2
 435              		.global	S5_DETECTED
 436              		.thumb
 437              		.thumb_func
 438              		.type	S5_DETECTED, %function
 439              	S5_DETECTED:
 440              	.LFB69:
 104:main.c        **** 
 105:main.c        **** CY_ISR(S5_DETECTED) {
 441              		.loc 1 105 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 1, uses_anonymous_args = 0
 445              		@ link register save eliminated.
 446 0000 80B4     		push	{r7}
 447              		.cfi_def_cfa_offset 4
 448              		.cfi_offset 7, -4
 449 0002 00AF     		add	r7, sp, #0
 450              		.cfi_def_cfa_register 7
 106:main.c        ****     // Sensor has detected WHITE
 107:main.c        ****     s5 = 1; // , Black = 0, White = 1
 451              		.loc 1 107 0
 452 0004 034B     		ldr	r3, .L18
 453 0006 0122     		movs	r2, #1
 454 0008 1A70     		strb	r2, [r3]
 108:main.c        ****     //LED_Write(1u);
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 11


 109:main.c        **** }
 455              		.loc 1 109 0
 456 000a 00BF     		nop
 457 000c BD46     		mov	sp, r7
 458              		.cfi_def_cfa_register 13
 459              		@ sp needed
 460 000e 80BC     		pop	{r7}
 461              		.cfi_restore 7
 462              		.cfi_def_cfa_offset 0
 463 0010 7047     		bx	lr
 464              	.L19:
 465 0012 00BF     		.align	2
 466              	.L18:
 467 0014 00000000 		.word	s5
 468              		.cfi_endproc
 469              	.LFE69:
 470              		.size	S5_DETECTED, .-S5_DETECTED
 471              		.section	.text.S6_DETECTED,"ax",%progbits
 472              		.align	2
 473              		.global	S6_DETECTED
 474              		.thumb
 475              		.thumb_func
 476              		.type	S6_DETECTED, %function
 477              	S6_DETECTED:
 478              	.LFB70:
 110:main.c        **** 
 111:main.c        **** CY_ISR(S6_DETECTED) {
 479              		.loc 1 111 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 1, uses_anonymous_args = 0
 483              		@ link register save eliminated.
 484 0000 80B4     		push	{r7}
 485              		.cfi_def_cfa_offset 4
 486              		.cfi_offset 7, -4
 487 0002 00AF     		add	r7, sp, #0
 488              		.cfi_def_cfa_register 7
 112:main.c        ****     // Sensor has detected WHITE
 113:main.c        ****     s6 = 1; // , Black = 0, White = 1
 489              		.loc 1 113 0
 490 0004 034B     		ldr	r3, .L21
 491 0006 0122     		movs	r2, #1
 492 0008 1A70     		strb	r2, [r3]
 114:main.c        ****     //LED_Write(1u);
 115:main.c        **** }
 493              		.loc 1 115 0
 494 000a 00BF     		nop
 495 000c BD46     		mov	sp, r7
 496              		.cfi_def_cfa_register 13
 497              		@ sp needed
 498 000e 80BC     		pop	{r7}
 499              		.cfi_restore 7
 500              		.cfi_def_cfa_offset 0
 501 0010 7047     		bx	lr
 502              	.L22:
 503 0012 00BF     		.align	2
 504              	.L21:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 12


 505 0014 00000000 		.word	s6
 506              		.cfi_endproc
 507              	.LFE70:
 508              		.size	S6_DETECTED, .-S6_DETECTED
 509              		.section	.text.TIMER_FINISH,"ax",%progbits
 510              		.align	2
 511              		.global	TIMER_FINISH
 512              		.thumb
 513              		.thumb_func
 514              		.type	TIMER_FINISH, %function
 515              	TIMER_FINISH:
 516              	.LFB71:
 116:main.c        **** 
 117:main.c        **** CY_ISR(TIMER_FINISH) {
 517              		.loc 1 117 0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 0
 520              		@ frame_needed = 1, uses_anonymous_args = 0
 521 0000 80B5     		push	{r7, lr}
 522              		.cfi_def_cfa_offset 8
 523              		.cfi_offset 7, -8
 524              		.cfi_offset 14, -4
 525 0002 00AF     		add	r7, sp, #0
 526              		.cfi_def_cfa_register 7
 118:main.c        ****     // Check flags, set LEDs to high
 119:main.c        ****     if(s2 || s3 || s4 || s5 || s6) {
 527              		.loc 1 119 0
 528 0004 0F4B     		ldr	r3, .L25
 529 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 530 0008 002B     		cmp	r3, #0
 531 000a 12D1     		bne	.L24
 532              		.loc 1 119 0 is_stmt 0 discriminator 1
 533 000c 0E4B     		ldr	r3, .L25+4
 534 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 535 0010 002B     		cmp	r3, #0
 536 0012 0ED1     		bne	.L24
 537              		.loc 1 119 0 discriminator 2
 538 0014 0D4B     		ldr	r3, .L25+8
 539 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 540 0018 002B     		cmp	r3, #0
 541 001a 0AD1     		bne	.L24
 542              		.loc 1 119 0 discriminator 3
 543 001c 0C4B     		ldr	r3, .L25+12
 544 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 545 0020 002B     		cmp	r3, #0
 546 0022 06D1     		bne	.L24
 547              		.loc 1 119 0 discriminator 4
 548 0024 0B4B     		ldr	r3, .L25+16
 549 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 550 0028 002B     		cmp	r3, #0
 551 002a 02D1     		bne	.L24
 120:main.c        ****         //LED_Write(1u);
 121:main.c        ****     } else {
 122:main.c        ****         LED_Write(0u);
 552              		.loc 1 122 0 is_stmt 1
 553 002c 0020     		movs	r0, #0
 554 002e FFF7FEFF 		bl	LED_Write
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 13


 555              	.L24:
 123:main.c        ****     }
 124:main.c        ****     // FOR CALCULATING DISTANCE
 125:main.c        ****     // Since this timer is every 9.7ms we calculate distance travelled the last 9.7ms
 126:main.c        ****     // We don't calculate if we are currently turning
 127:main.c        ****     // total distance = total distance + ( RPM * PI * DIAMETER * (TIME SINCE LAST CALCULATATION) )
 128:main.c        ****     /*
 129:main.c        ****     if (currentDirection == Forward) {
 130:main.c        ****         totalDistance = totalDistance + abs(quadCountToRPM(quadDec2Count)) * CY_M_PI * WHEEL_DIAMET
 131:main.c        ****     }
 132:main.c        ****     */
 133:main.c        ****     
 134:main.c        ****     // Reset Sensor Flags for Next rising Eddge
 135:main.c        ****     // (s1 = 0, s2 = 0... etc.)
 136:main.c        ****     SetRobotMovement();
 556              		.loc 1 136 0
 557 0032 FFF7FEFF 		bl	SetRobotMovement
 137:main.c        ****     ResetSensorFlags();
 558              		.loc 1 137 0
 559 0036 FFF7FEFF 		bl	ResetSensorFlags
 138:main.c        **** 
 139:main.c        ****     Timer_LED_ReadStatusRegister();
 560              		.loc 1 139 0
 561 003a FFF7FEFF 		bl	Timer_LED_ReadStatusRegister
 140:main.c        **** }
 562              		.loc 1 140 0
 563 003e 00BF     		nop
 564 0040 80BD     		pop	{r7, pc}
 565              	.L26:
 566 0042 00BF     		.align	2
 567              	.L25:
 568 0044 00000000 		.word	s2
 569 0048 00000000 		.word	s3
 570 004c 00000000 		.word	s4
 571 0050 00000000 		.word	s5
 572 0054 00000000 		.word	s6
 573              		.cfi_endproc
 574              	.LFE71:
 575              		.size	TIMER_FINISH, .-TIMER_FINISH
 576              		.section	.rodata
 577              		.align	2
 578              	.LC0:
 579 0000 496E6974 		.ascii	"Initialised UART\000"
 579      69616C69 
 579      73656420 
 579      55415254 
 579      00
 580 0011 000000   		.align	2
 581              	.LC1:
 582 0014 256C7500 		.ascii	"%lu\000"
 583              		.align	2
 584              	.LC2:
 585 0018 2000     		.ascii	" \000"
 586              		.section	.text.main,"ax",%progbits
 587              		.align	2
 588              		.global	main
 589              		.thumb
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 14


 590              		.thumb_func
 591              		.type	main, %function
 592              	main:
 593              	.LFB72:
 141:main.c        **** 
 142:main.c        **** 
 143:main.c        **** int main()
 144:main.c        **** {
 594              		.loc 1 144 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 0
 597              		@ frame_needed = 1, uses_anonymous_args = 0
 598 0000 80B5     		push	{r7, lr}
 599              		.cfi_def_cfa_offset 8
 600              		.cfi_offset 7, -8
 601              		.cfi_offset 14, -4
 602 0002 00AF     		add	r7, sp, #0
 603              		.cfi_def_cfa_register 7
 145:main.c        **** // --------------------------------    
 146:main.c        **** // ----- INITIALIZATIONS ----------
 147:main.c        ****     CYGlobalIntEnable;
 604              		.loc 1 147 0
 605              		.syntax unified
 606              	@ 147 "main.c" 1
 607 0004 62B6     		CPSIE   i
 608              	@ 0 "" 2
 148:main.c        ****     init(); // initialise clocks, pwms, adc, dac etc- done in header file
 609              		.loc 1 148 0
 610              		.thumb
 611              		.syntax unified
 612 0006 FFF7FEFF 		bl	init
 149:main.c        ****     //findPath(map, "");// find shortest path- store this in map
 150:main.c        ****     isr_speed_StartEx(speedTimer); // start interrupt
 613              		.loc 1 150 0
 614 000a 2548     		ldr	r0, .L31
 615 000c FFF7FEFF 		bl	isr_speed_StartEx
 151:main.c        ****     isr_Timer_LED_StartEx(TIMER_FINISH);
 616              		.loc 1 151 0
 617 0010 2448     		ldr	r0, .L31+4
 618 0012 FFF7FEFF 		bl	isr_Timer_LED_StartEx
 152:main.c        ****     S1_detected_StartEx(S1_DETECTED);
 619              		.loc 1 152 0
 620 0016 2448     		ldr	r0, .L31+8
 621 0018 FFF7FEFF 		bl	S1_detected_StartEx
 153:main.c        ****     S2_detected_StartEx(S2_DETECTED);
 622              		.loc 1 153 0
 623 001c 2348     		ldr	r0, .L31+12
 624 001e FFF7FEFF 		bl	S2_detected_StartEx
 154:main.c        ****     S3_detected_StartEx(S3_DETECTED);
 625              		.loc 1 154 0
 626 0022 2348     		ldr	r0, .L31+16
 627 0024 FFF7FEFF 		bl	S3_detected_StartEx
 155:main.c        ****     S4_detected_StartEx(S4_DETECTED);
 628              		.loc 1 155 0
 629 0028 2248     		ldr	r0, .L31+20
 630 002a FFF7FEFF 		bl	S4_detected_StartEx
 156:main.c        ****     S5_detected_StartEx(S5_DETECTED);
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 15


 631              		.loc 1 156 0
 632 002e 2248     		ldr	r0, .L31+24
 633 0030 FFF7FEFF 		bl	S5_detected_StartEx
 157:main.c        ****     S6_detected_StartEx(S6_DETECTED);
 634              		.loc 1 157 0
 635 0034 2148     		ldr	r0, .L31+28
 636 0036 FFF7FEFF 		bl	S6_detected_StartEx
 158:main.c        ****     Timer_LED_Start();
 637              		.loc 1 158 0
 638 003a FFF7FEFF 		bl	Timer_LED_Start
 159:main.c        ****     stopMoving();
 639              		.loc 1 159 0
 640 003e FFF7FEFF 		bl	stopMoving
 160:main.c        **** 
 161:main.c        **** // ------USB SETUP ----------------    
 162:main.c        **** #ifdef USE_USB    
 163:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 641              		.loc 1 163 0
 642 0042 0121     		movs	r1, #1
 643 0044 0020     		movs	r0, #0
 644 0046 FFF7FEFF 		bl	USBUART_Start
 164:main.c        **** #endif        
 165:main.c        ****     RF_BT_SELECT_Write(0);
 645              		.loc 1 165 0
 646 004a 0020     		movs	r0, #0
 647 004c FFF7FEFF 		bl	RF_BT_SELECT_Write
 166:main.c        ****     
 167:main.c        ****     usbPutString("Initialised UART");
 648              		.loc 1 167 0
 649 0050 1B48     		ldr	r0, .L31+32
 650 0052 FFF7FEFF 		bl	usbPutString
 651              	.L30:
 168:main.c        ****     for(;;)
 169:main.c        ****     {
 170:main.c        ****         //traverseMap(map);
 171:main.c        ****         //rotationAntiClockwise();
 172:main.c        ****         //rotationClockwise();
 173:main.c        ****         //stopMoving();
 174:main.c        ****         //moveForward();
 175:main.c        ****         //ResetSensorFlags();
 176:main.c        ****         //SetRobotMovement();
 177:main.c        ****         
 178:main.c        ****         
 179:main.c        ****         
 180:main.c        ****         if(timerInt == 1) {
 652              		.loc 1 180 0
 653 0056 1B4B     		ldr	r3, .L31+36
 654 0058 1B68     		ldr	r3, [r3]
 655 005a 012B     		cmp	r3, #1
 656 005c 15D1     		bne	.L28
 181:main.c        ****             timerInt = 0;
 657              		.loc 1 181 0
 658 005e 194B     		ldr	r3, .L31+36
 659 0060 0022     		movs	r2, #0
 660 0062 1A60     		str	r2, [r3]
 182:main.c        ****             // calculate RPM of M2
 183:main.c        ****             quadCountToRPM(quadDec2Count);
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 16


 661              		.loc 1 183 0
 662 0064 184B     		ldr	r3, .L31+40
 663 0066 1B68     		ldr	r3, [r3]
 664 0068 9BB2     		uxth	r3, r3
 665 006a 1846     		mov	r0, r3
 666 006c FFF7FEFF 		bl	quadCountToRPM
 184:main.c        ****             sprintf(buffer, "%lu", totalDistance);
 667              		.loc 1 184 0
 668 0070 164B     		ldr	r3, .L31+44
 669 0072 1B68     		ldr	r3, [r3]
 670 0074 1A46     		mov	r2, r3
 671 0076 1649     		ldr	r1, .L31+48
 672 0078 1648     		ldr	r0, .L31+52
 673 007a FFF7FEFF 		bl	sprintf
 185:main.c        ****             usbPutString(buffer);
 674              		.loc 1 185 0
 675 007e 1548     		ldr	r0, .L31+52
 676 0080 FFF7FEFF 		bl	usbPutString
 186:main.c        ****             usbPutString(" ");
 677              		.loc 1 186 0
 678 0084 1448     		ldr	r0, .L31+56
 679 0086 FFF7FEFF 		bl	usbPutString
 680              	.L28:
 187:main.c        ****         }
 188:main.c        ****         handle_usb();
 681              		.loc 1 188 0
 682 008a FFF7FEFF 		bl	handle_usb
 189:main.c        ****         if (flag_KB_string == 1)
 683              		.loc 1 189 0
 684 008e 134B     		ldr	r3, .L31+60
 685 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 686 0092 012B     		cmp	r3, #1
 687 0094 DFD1     		bne	.L30
 190:main.c        ****         {
 191:main.c        ****             //usbPutString("Total Distance: ");
 192:main.c        ****             //sprintf(buffer, "%lu", totalDistance);
 193:main.c        ****             //usbPutString(buffer);
 194:main.c        ****             flag_KB_string = 0;
 688              		.loc 1 194 0
 689 0096 114B     		ldr	r3, .L31+60
 690 0098 0022     		movs	r2, #0
 691 009a 1A70     		strb	r2, [r3]
 195:main.c        ****         }           
 196:main.c        ****     }
 692              		.loc 1 196 0
 693 009c DBE7     		b	.L30
 694              	.L32:
 695 009e 00BF     		.align	2
 696              	.L31:
 697 00a0 00000000 		.word	speedTimer
 698 00a4 00000000 		.word	TIMER_FINISH
 699 00a8 00000000 		.word	S1_DETECTED
 700 00ac 00000000 		.word	S2_DETECTED
 701 00b0 00000000 		.word	S3_DETECTED
 702 00b4 00000000 		.word	S4_DETECTED
 703 00b8 00000000 		.word	S5_DETECTED
 704 00bc 00000000 		.word	S6_DETECTED
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 17


 705 00c0 00000000 		.word	.LC0
 706 00c4 00000000 		.word	timerInt
 707 00c8 00000000 		.word	quadDec2Count
 708 00cc 00000000 		.word	totalDistance
 709 00d0 14000000 		.word	.LC1
 710 00d4 00000000 		.word	buffer
 711 00d8 18000000 		.word	.LC2
 712 00dc 00000000 		.word	flag_KB_string
 713              		.cfi_endproc
 714              	.LFE72:
 715              		.size	main, .-main
 716              		.global	__aeabi_d2f
 717              		.global	__aeabi_fmul
 718              		.global	__aeabi_f2iz
 719              		.section	.rodata
 720 001a 0000     		.align	2
 721              	.LC3:
 722 001c 256400   		.ascii	"%d\000"
 723              		.section	.text.quadCountToRPM,"ax",%progbits
 724              		.align	2
 725              		.global	quadCountToRPM
 726              		.thumb
 727              		.thumb_func
 728              		.type	quadCountToRPM, %function
 729              	quadCountToRPM:
 730              	.LFB73:
 197:main.c        ****     return 0;
 198:main.c        **** }
 199:main.c        **** 
 200:main.c        **** // Calculations
 201:main.c        **** //* ========================================
 202:main.c        **** int16 quadCountToRPM(uint16 count)
 203:main.c        **** {
 731              		.loc 1 203 0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 16
 734              		@ frame_needed = 1, uses_anonymous_args = 0
 735 0000 90B5     		push	{r4, r7, lr}
 736              		.cfi_def_cfa_offset 12
 737              		.cfi_offset 4, -12
 738              		.cfi_offset 7, -8
 739              		.cfi_offset 14, -4
 740 0002 85B0     		sub	sp, sp, #20
 741              		.cfi_def_cfa_offset 32
 742 0004 00AF     		add	r7, sp, #0
 743              		.cfi_def_cfa_register 7
 744 0006 0346     		mov	r3, r0
 745 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 204:main.c        ****     float cps = count/57.00;
 746              		.loc 1 204 0
 747 000a FB88     		ldrh	r3, [r7, #6]
 748 000c 1846     		mov	r0, r3
 749 000e FFF7FEFF 		bl	__aeabi_i2d
 750 0012 4FF00002 		mov	r2, #0
 751 0016 114B     		ldr	r3, .L35
 752 0018 FFF7FEFF 		bl	__aeabi_ddiv
 753 001c 0346     		mov	r3, r0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 18


 754 001e 0C46     		mov	r4, r1
 755 0020 1846     		mov	r0, r3
 756 0022 2146     		mov	r1, r4
 757 0024 FFF7FEFF 		bl	__aeabi_d2f
 758 0028 0346     		mov	r3, r0
 759 002a FB60     		str	r3, [r7, #12]	@ float
 205:main.c        ****     int16 rpm = (int16)(cps*15); // rpm value
 760              		.loc 1 205 0
 761 002c 0C49     		ldr	r1, .L35+4
 762 002e F868     		ldr	r0, [r7, #12]	@ float
 763 0030 FFF7FEFF 		bl	__aeabi_fmul
 764 0034 0346     		mov	r3, r0
 765 0036 1846     		mov	r0, r3
 766 0038 FFF7FEFF 		bl	__aeabi_f2iz
 767 003c 0346     		mov	r3, r0
 768 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 206:main.c        ****     sprintf(buffer, "%d", rpm); // store in buffer
 769              		.loc 1 206 0
 770 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 771 0044 1A46     		mov	r2, r3
 772 0046 0749     		ldr	r1, .L35+8
 773 0048 0748     		ldr	r0, .L35+12
 774 004a FFF7FEFF 		bl	sprintf
 207:main.c        ****     return rpm;
 775              		.loc 1 207 0
 776 004e B7F90A30 		ldrsh	r3, [r7, #10]
 208:main.c        ****     //usbPutString(buffer);
 209:main.c        ****     //usbPutString("rpm ");
 210:main.c        **** }
 777              		.loc 1 210 0
 778 0052 1846     		mov	r0, r3
 779 0054 1437     		adds	r7, r7, #20
 780              		.cfi_def_cfa_offset 12
 781 0056 BD46     		mov	sp, r7
 782              		.cfi_def_cfa_register 13
 783              		@ sp needed
 784 0058 90BD     		pop	{r4, r7, pc}
 785              	.L36:
 786 005a 00BF     		.align	2
 787              	.L35:
 788 005c 00804C40 		.word	1078755328
 789 0060 00007041 		.word	1097859072
 790 0064 1C000000 		.word	.LC3
 791 0068 00000000 		.word	buffer
 792              		.cfi_endproc
 793              	.LFE73:
 794              		.size	quadCountToRPM, .-quadCountToRPM
 795              		.section	.text.ResetSensorFlags,"ax",%progbits
 796              		.align	2
 797              		.global	ResetSensorFlags
 798              		.thumb
 799              		.thumb_func
 800              		.type	ResetSensorFlags, %function
 801              	ResetSensorFlags:
 802              	.LFB74:
 211:main.c        **** 
 212:main.c        **** // Resets all sensor flags to 0 - i.e. currently out of map
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 19


 213:main.c        **** void ResetSensorFlags() {
 803              		.loc 1 213 0
 804              		.cfi_startproc
 805              		@ args = 0, pretend = 0, frame = 0
 806              		@ frame_needed = 1, uses_anonymous_args = 0
 807              		@ link register save eliminated.
 808 0000 80B4     		push	{r7}
 809              		.cfi_def_cfa_offset 4
 810              		.cfi_offset 7, -4
 811 0002 00AF     		add	r7, sp, #0
 812              		.cfi_def_cfa_register 7
 214:main.c        ****     s1 = 0;
 813              		.loc 1 214 0
 814 0004 0A4B     		ldr	r3, .L38
 815 0006 0022     		movs	r2, #0
 816 0008 1A70     		strb	r2, [r3]
 215:main.c        ****     s2 = 0;
 817              		.loc 1 215 0
 818 000a 0A4B     		ldr	r3, .L38+4
 819 000c 0022     		movs	r2, #0
 820 000e 1A70     		strb	r2, [r3]
 216:main.c        ****     s3 = 0;
 821              		.loc 1 216 0
 822 0010 094B     		ldr	r3, .L38+8
 823 0012 0022     		movs	r2, #0
 824 0014 1A70     		strb	r2, [r3]
 217:main.c        ****     s4 = 0;
 825              		.loc 1 217 0
 826 0016 094B     		ldr	r3, .L38+12
 827 0018 0022     		movs	r2, #0
 828 001a 1A70     		strb	r2, [r3]
 218:main.c        ****     s5 = 0;
 829              		.loc 1 218 0
 830 001c 084B     		ldr	r3, .L38+16
 831 001e 0022     		movs	r2, #0
 832 0020 1A70     		strb	r2, [r3]
 219:main.c        ****     s6 = 0;
 833              		.loc 1 219 0
 834 0022 084B     		ldr	r3, .L38+20
 835 0024 0022     		movs	r2, #0
 836 0026 1A70     		strb	r2, [r3]
 220:main.c        **** }
 837              		.loc 1 220 0
 838 0028 00BF     		nop
 839 002a BD46     		mov	sp, r7
 840              		.cfi_def_cfa_register 13
 841              		@ sp needed
 842 002c 80BC     		pop	{r7}
 843              		.cfi_restore 7
 844              		.cfi_def_cfa_offset 0
 845 002e 7047     		bx	lr
 846              	.L39:
 847              		.align	2
 848              	.L38:
 849 0030 00000000 		.word	s1
 850 0034 00000000 		.word	s2
 851 0038 00000000 		.word	s3
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 20


 852 003c 00000000 		.word	s4
 853 0040 00000000 		.word	s5
 854 0044 00000000 		.word	s6
 855              		.cfi_endproc
 856              	.LFE74:
 857              		.size	ResetSensorFlags, .-ResetSensorFlags
 858              		.section	.text.CheckSensorDirection,"ax",%progbits
 859              		.align	2
 860              		.global	CheckSensorDirection
 861              		.thumb
 862              		.thumb_func
 863              		.type	CheckSensorDirection, %function
 864              	CheckSensorDirection:
 865              	.LFB75:
 221:main.c        **** 
 222:main.c        **** // This function checks the sensor flags s1-s6 through a boolean truth table and
 223:main.c        **** // returns a enum direction state depending on the flag configuration
 224:main.c        **** // if no conditons are met, it returns Unknown -- need to fix this edge case
 225:main.c        **** // s1 = 0 -- Black
 226:main.c        **** // s1 = 1 -- White
 227:main.c        **** enum DirectionState CheckSensorDirection() {
 866              		.loc 1 227 0
 867              		.cfi_startproc
 868              		@ args = 0, pretend = 0, frame = 8
 869              		@ frame_needed = 1, uses_anonymous_args = 0
 870              		@ link register save eliminated.
 871 0000 80B4     		push	{r7}
 872              		.cfi_def_cfa_offset 4
 873              		.cfi_offset 7, -4
 874 0002 83B0     		sub	sp, sp, #12
 875              		.cfi_def_cfa_offset 16
 876 0004 00AF     		add	r7, sp, #0
 877              		.cfi_def_cfa_register 7
 228:main.c        ****     enum DirectionState directionState = Stop;
 878              		.loc 1 228 0
 879 0006 0523     		movs	r3, #5
 880 0008 7B60     		str	r3, [r7, #4]
 229:main.c        ****     //directionState = Unknown;
 230:main.c        ****     
 231:main.c        ****     // go forward if front two sensors are on black
 232:main.c        ****     // S1 and S2 are on black
 233:main.c        ****     //if (!s1 && !s2) {
 234:main.c        ****     //    directionState = Forward;
 235:main.c        ****     //    return directionState;
 236:main.c        ****     //}
 237:main.c        ****     
 238:main.c        ****     /*
 239:main.c        ****     //stop to turn left
 240:main.c        ****     // S1 and S2 are on white
 241:main.c        ****     // S3 and S4 are on black
 242:main.c        ****     // S5 is on black, S6 is on white
 243:main.c        ****     if (s1 && s2 && !s3 && !s4 && !s5 && s6) {
 244:main.c        ****         directionState = StopToTurnLeft;
 245:main.c        ****         return directionState;   
 246:main.c        ****     }
 247:main.c        ****     
 248:main.c        ****     //stop to turn right
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 21


 249:main.c        ****     if (s1 && s2 && !s3 && !s4 && s5 && !s6) {
 250:main.c        ****         directionState = StopToTurnRight;
 251:main.c        ****         return directionState;   
 252:main.c        ****     }
 253:main.c        ****     
 254:main.c        ****     //forward if all sensors are on white
 255:main.c        ****     
 256:main.c        ****     if (s1 && s2 && s3 && s4 & s5 && s6) {
 257:main.c        ****         directionState = Forward;
 258:main.c        ****         return directionState;   
 259:main.c        ****     }
 260:main.c        **** 
 261:main.c        ****     //turn left
 262:main.c        ****     if (!s5 && s6) {
 263:main.c        ****         directionState = TurnLeft;
 264:main.c        ****         return directionState;
 265:main.c        ****     }
 266:main.c        ****     
 267:main.c        ****     //turn right
 268:main.c        ****     if (s5 && !s6) {
 269:main.c        ****         directionState = TurnRight;
 270:main.c        ****         return directionState;
 271:main.c        ****     }
 272:main.c        ****     */
 273:main.c        ****     // ============================ TESTING
 274:main.c        ****     if (s1) {
 881              		.loc 1 274 0
 882 000a 0F4B     		ldr	r3, .L45
 883 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 884 000e 002B     		cmp	r3, #0
 885 0010 03D0     		beq	.L41
 275:main.c        ****         directionState = Forward;
 886              		.loc 1 275 0
 887 0012 0023     		movs	r3, #0
 888 0014 7B60     		str	r3, [r7, #4]
 276:main.c        ****         return directionState;   
 889              		.loc 1 276 0
 890 0016 7B68     		ldr	r3, [r7, #4]
 891 0018 10E0     		b	.L42
 892              	.L41:
 277:main.c        ****     }
 278:main.c        ****     
 279:main.c        ****     //turn left
 280:main.c        ****     if (s2) {
 893              		.loc 1 280 0
 894 001a 0C4B     		ldr	r3, .L45+4
 895 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 896 001e 002B     		cmp	r3, #0
 897 0020 03D0     		beq	.L43
 281:main.c        ****         directionState = TurnLeft;
 898              		.loc 1 281 0
 899 0022 0223     		movs	r3, #2
 900 0024 7B60     		str	r3, [r7, #4]
 282:main.c        ****         return directionState;
 901              		.loc 1 282 0
 902 0026 7B68     		ldr	r3, [r7, #4]
 903 0028 08E0     		b	.L42
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 22


 904              	.L43:
 283:main.c        ****     }
 284:main.c        ****     
 285:main.c        ****     //turn right
 286:main.c        ****     if (s3) {
 905              		.loc 1 286 0
 906 002a 094B     		ldr	r3, .L45+8
 907 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 908 002e 002B     		cmp	r3, #0
 909 0030 03D0     		beq	.L44
 287:main.c        ****         directionState = TurnRight;
 910              		.loc 1 287 0
 911 0032 0123     		movs	r3, #1
 912 0034 7B60     		str	r3, [r7, #4]
 288:main.c        ****         return directionState;
 913              		.loc 1 288 0
 914 0036 7B68     		ldr	r3, [r7, #4]
 915 0038 00E0     		b	.L42
 916              	.L44:
 289:main.c        ****     }
 290:main.c        ****     // ============================ TESTING
 291:main.c        ****     // If the code gets up to this point then no conditions have been met
 292:main.c        ****     // The sensors are in a configuration that has not been covered
 293:main.c        ****     // The currentDirection to turn into is unknown.
 294:main.c        ****     return directionState;
 917              		.loc 1 294 0
 918 003a 7B68     		ldr	r3, [r7, #4]
 919              	.L42:
 295:main.c        **** }
 920              		.loc 1 295 0
 921 003c 1846     		mov	r0, r3
 922 003e 0C37     		adds	r7, r7, #12
 923              		.cfi_def_cfa_offset 4
 924 0040 BD46     		mov	sp, r7
 925              		.cfi_def_cfa_register 13
 926              		@ sp needed
 927 0042 80BC     		pop	{r7}
 928              		.cfi_restore 7
 929              		.cfi_def_cfa_offset 0
 930 0044 7047     		bx	lr
 931              	.L46:
 932 0046 00BF     		.align	2
 933              	.L45:
 934 0048 00000000 		.word	s1
 935 004c 00000000 		.word	s2
 936 0050 00000000 		.word	s3
 937              		.cfi_endproc
 938              	.LFE75:
 939              		.size	CheckSensorDirection, .-CheckSensorDirection
 940              		.section	.text.SetRobotMovement,"ax",%progbits
 941              		.align	2
 942              		.global	SetRobotMovement
 943              		.thumb
 944              		.thumb_func
 945              		.type	SetRobotMovement, %function
 946              	SetRobotMovement:
 947              	.LFB76:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 23


 296:main.c        **** 
 297:main.c        **** // Sets robot movement direction state according to currentDirection which is set by Check
 298:main.c        **** void SetRobotMovement() {
 948              		.loc 1 298 0
 949              		.cfi_startproc
 950              		@ args = 0, pretend = 0, frame = 0
 951              		@ frame_needed = 1, uses_anonymous_args = 0
 952 0000 80B5     		push	{r7, lr}
 953              		.cfi_def_cfa_offset 8
 954              		.cfi_offset 7, -8
 955              		.cfi_offset 14, -4
 956 0002 00AF     		add	r7, sp, #0
 957              		.cfi_def_cfa_register 7
 299:main.c        ****     currentDirection = CheckSensorDirection();   
 958              		.loc 1 299 0
 959 0004 FFF7FEFF 		bl	CheckSensorDirection
 960 0008 0246     		mov	r2, r0
 961 000a 174B     		ldr	r3, .L58
 962 000c 1A60     		str	r2, [r3]
 300:main.c        ****     
 301:main.c        ****     switch (currentDirection) {
 963              		.loc 1 301 0
 964 000e 164B     		ldr	r3, .L58
 965 0010 1B68     		ldr	r3, [r3]
 966 0012 062B     		cmp	r3, #6
 967 0014 25D8     		bhi	.L57
 968 0016 01A2     		adr	r2, .L50
 969 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 970              		.p2align 2
 971              	.L50:
 972 001c 39000000 		.word	.L49+1
 973 0020 3F000000 		.word	.L51+1
 974 0024 45000000 		.word	.L52+1
 975 0028 4B000000 		.word	.L53+1
 976 002c 51000000 		.word	.L54+1
 977 0030 57000000 		.word	.L55+1
 978 0034 5D000000 		.word	.L56+1
 979              		.p2align 1
 980              	.L49:
 302:main.c        ****         //Forward, TurnRight, TurnLeft, StopToTurnRight, StopToTurnLeft, Stop, Unknown
 303:main.c        ****         case Forward:
 304:main.c        ****             //LED_Write(1u);
 305:main.c        ****             moveForward();
 981              		.loc 1 305 0
 982 0038 FFF7FEFF 		bl	moveForward
 306:main.c        ****             break;
 983              		.loc 1 306 0
 984 003c 11E0     		b	.L48
 985              	.L51:
 307:main.c        ****         case TurnRight:
 308:main.c        ****             rotationClockwise();
 986              		.loc 1 308 0
 987 003e FFF7FEFF 		bl	rotationClockwise
 309:main.c        ****             break;
 988              		.loc 1 309 0
 989 0042 0EE0     		b	.L48
 990              	.L52:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 24


 310:main.c        ****         case TurnLeft:
 311:main.c        ****             rotationAntiClockwise();
 991              		.loc 1 311 0
 992 0044 FFF7FEFF 		bl	rotationAntiClockwise
 312:main.c        ****             break;
 993              		.loc 1 312 0
 994 0048 0BE0     		b	.L48
 995              	.L53:
 313:main.c        ****         case StopToTurnRight:
 314:main.c        ****             //stopMoving();
 315:main.c        ****             rotationClockwise();
 996              		.loc 1 315 0
 997 004a FFF7FEFF 		bl	rotationClockwise
 316:main.c        ****             // need to move forward for a specifed amount of time so that left sensors dont activat
 317:main.c        ****             break;
 998              		.loc 1 317 0
 999 004e 08E0     		b	.L48
 1000              	.L54:
 318:main.c        ****         case StopToTurnLeft:
 319:main.c        ****             //stopMoving();
 320:main.c        ****             rotationAntiClockwise();
 1001              		.loc 1 320 0
 1002 0050 FFF7FEFF 		bl	rotationAntiClockwise
 321:main.c        ****             break;
 1003              		.loc 1 321 0
 1004 0054 05E0     		b	.L48
 1005              	.L55:
 322:main.c        ****         case Stop:
 323:main.c        ****             //stopMoving();
 324:main.c        ****             stopMoving();
 1006              		.loc 1 324 0
 1007 0056 FFF7FEFF 		bl	stopMoving
 325:main.c        ****             break;
 1008              		.loc 1 325 0
 1009 005a 02E0     		b	.L48
 1010              	.L56:
 326:main.c        ****         case Unknown:
 327:main.c        ****             // UNKNOWN CONFIGURATION
 328:main.c        ****             stopMoving();
 1011              		.loc 1 328 0
 1012 005c FFF7FEFF 		bl	stopMoving
 329:main.c        ****             break;  
 1013              		.loc 1 329 0
 1014 0060 00BF     		nop
 1015              	.L48:
 1016              	.L57:
 330:main.c        ****     }
 331:main.c        **** }
 1017              		.loc 1 331 0
 1018 0062 00BF     		nop
 1019 0064 80BD     		pop	{r7, pc}
 1020              	.L59:
 1021 0066 00BF     		.align	2
 1022              	.L58:
 1023 0068 00000000 		.word	currentDirection
 1024              		.cfi_endproc
 1025              	.LFE76:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 25


 1026              		.size	SetRobotMovement, .-SetRobotMovement
 1027              		.section	.text.usbPutString,"ax",%progbits
 1028              		.align	2
 1029              		.global	usbPutString
 1030              		.thumb
 1031              		.thumb_func
 1032              		.type	usbPutString, %function
 1033              	usbPutString:
 1034              	.LFB77:
 332:main.c        **** 
 333:main.c        **** // ======================================
 334:main.c        **** // USBUART
 335:main.c        **** //* ========================================
 336:main.c        ****     void usbPutString(char *s)
 337:main.c        **** {
 1035              		.loc 1 337 0
 1036              		.cfi_startproc
 1037              		@ args = 0, pretend = 0, frame = 8
 1038              		@ frame_needed = 1, uses_anonymous_args = 0
 1039 0000 80B5     		push	{r7, lr}
 1040              		.cfi_def_cfa_offset 8
 1041              		.cfi_offset 7, -8
 1042              		.cfi_offset 14, -4
 1043 0002 82B0     		sub	sp, sp, #8
 1044              		.cfi_def_cfa_offset 16
 1045 0004 00AF     		add	r7, sp, #0
 1046              		.cfi_def_cfa_register 7
 1047 0006 7860     		str	r0, [r7, #4]
 338:main.c        **** // !! Assumes that *s is a string with allocated space >=64 chars     
 339:main.c        **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 340:main.c        **** //  length to 62 char (63rd char is a '!')
 341:main.c        **** 
 342:main.c        **** #ifdef USE_USB     
 343:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1048              		.loc 1 343 0
 1049 0008 00BF     		nop
 1050              	.L61:
 1051              		.loc 1 343 0 is_stmt 0 discriminator 1
 1052 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 1053 000e 0346     		mov	r3, r0
 1054 0010 002B     		cmp	r3, #0
 1055 0012 FAD0     		beq	.L61
 344:main.c        ****     s[63]='\0';
 1056              		.loc 1 344 0 is_stmt 1
 1057 0014 7B68     		ldr	r3, [r7, #4]
 1058 0016 3F33     		adds	r3, r3, #63
 1059 0018 0022     		movs	r2, #0
 1060 001a 1A70     		strb	r2, [r3]
 345:main.c        ****     s[62]='!';
 1061              		.loc 1 345 0
 1062 001c 7B68     		ldr	r3, [r7, #4]
 1063 001e 3E33     		adds	r3, r3, #62
 1064 0020 2122     		movs	r2, #33
 1065 0022 1A70     		strb	r2, [r3]
 346:main.c        ****     USBUART_PutData((uint8*)s,strlen(s));
 1066              		.loc 1 346 0
 1067 0024 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 26


 1068 0026 FFF7FEFF 		bl	strlen
 1069 002a 0346     		mov	r3, r0
 1070 002c 9BB2     		uxth	r3, r3
 1071 002e 1946     		mov	r1, r3
 1072 0030 7868     		ldr	r0, [r7, #4]
 1073 0032 FFF7FEFF 		bl	USBUART_PutData
 347:main.c        **** #endif
 348:main.c        **** }
 1074              		.loc 1 348 0
 1075 0036 00BF     		nop
 1076 0038 0837     		adds	r7, r7, #8
 1077              		.cfi_def_cfa_offset 8
 1078 003a BD46     		mov	sp, r7
 1079              		.cfi_def_cfa_register 13
 1080              		@ sp needed
 1081 003c 80BD     		pop	{r7, pc}
 1082              		.cfi_endproc
 1083              	.LFE77:
 1084              		.size	usbPutString, .-usbPutString
 1085 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 1086              		.align	2
 1087              		.global	usbPutChar
 1088              		.thumb
 1089              		.thumb_func
 1090              		.type	usbPutChar, %function
 1091              	usbPutChar:
 1092              	.LFB78:
 349:main.c        **** //* ========================================
 350:main.c        **** void usbPutChar(char c)
 351:main.c        **** {
 1093              		.loc 1 351 0
 1094              		.cfi_startproc
 1095              		@ args = 0, pretend = 0, frame = 8
 1096              		@ frame_needed = 1, uses_anonymous_args = 0
 1097 0000 80B5     		push	{r7, lr}
 1098              		.cfi_def_cfa_offset 8
 1099              		.cfi_offset 7, -8
 1100              		.cfi_offset 14, -4
 1101 0002 82B0     		sub	sp, sp, #8
 1102              		.cfi_def_cfa_offset 16
 1103 0004 00AF     		add	r7, sp, #0
 1104              		.cfi_def_cfa_register 7
 1105 0006 0346     		mov	r3, r0
 1106 0008 FB71     		strb	r3, [r7, #7]
 352:main.c        **** #ifdef USE_USB     
 353:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1107              		.loc 1 353 0
 1108 000a 00BF     		nop
 1109              	.L63:
 1110              		.loc 1 353 0 is_stmt 0 discriminator 1
 1111 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 1112 0010 0346     		mov	r3, r0
 1113 0012 002B     		cmp	r3, #0
 1114 0014 FAD0     		beq	.L63
 354:main.c        ****     USBUART_PutChar(c);
 1115              		.loc 1 354 0 is_stmt 1
 1116 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 27


 1117 0018 1846     		mov	r0, r3
 1118 001a FFF7FEFF 		bl	USBUART_PutChar
 355:main.c        **** #endif    
 356:main.c        **** }
 1119              		.loc 1 356 0
 1120 001e 00BF     		nop
 1121 0020 0837     		adds	r7, r7, #8
 1122              		.cfi_def_cfa_offset 8
 1123 0022 BD46     		mov	sp, r7
 1124              		.cfi_def_cfa_register 13
 1125              		@ sp needed
 1126 0024 80BD     		pop	{r7, pc}
 1127              		.cfi_endproc
 1128              	.LFE78:
 1129              		.size	usbPutChar, .-usbPutChar
 1130 0026 00BF     		.section	.text.handle_usb,"ax",%progbits
 1131              		.align	2
 1132              		.global	handle_usb
 1133              		.thumb
 1134              		.thumb_func
 1135              		.type	handle_usb, %function
 1136              	handle_usb:
 1137              	.LFB79:
 357:main.c        **** //* ========================================
 358:main.c        **** void handle_usb()
 359:main.c        **** {
 1138              		.loc 1 359 0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 8
 1141              		@ frame_needed = 1, uses_anonymous_args = 0
 1142 0000 80B5     		push	{r7, lr}
 1143              		.cfi_def_cfa_offset 8
 1144              		.cfi_offset 7, -8
 1145              		.cfi_offset 14, -4
 1146 0002 82B0     		sub	sp, sp, #8
 1147              		.cfi_def_cfa_offset 16
 1148 0004 00AF     		add	r7, sp, #0
 1149              		.cfi_def_cfa_register 7
 360:main.c        ****     // handles input at terminal, echos it back to the terminal
 361:main.c        ****     // turn echo OFF, key emulation: only CR
 362:main.c        ****     // entered string is made available in 'line' and 'flag_KB_string' is set
 363:main.c        ****     
 364:main.c        ****     static uint8 usbStarted = FALSE;
 365:main.c        ****     static uint16 usbBufCount = 0;
 366:main.c        ****     uint8 c; 
 367:main.c        ****     
 368:main.c        **** 
 369:main.c        ****     if (!usbStarted)
 1150              		.loc 1 369 0
 1151 0006 2B4B     		ldr	r3, .L74
 1152 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1153 000a 002B     		cmp	r3, #0
 1154 000c 0AD1     		bne	.L65
 370:main.c        ****     {
 371:main.c        ****         if (USBUART_GetConfiguration())
 1155              		.loc 1 371 0
 1156 000e FFF7FEFF 		bl	USBUART_GetConfiguration
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 28


 1157 0012 0346     		mov	r3, r0
 1158 0014 002B     		cmp	r3, #0
 1159 0016 49D0     		beq	.L73
 372:main.c        ****         {
 373:main.c        ****             USBUART_CDC_Init();
 1160              		.loc 1 373 0
 1161 0018 FFF7FEFF 		bl	USBUART_CDC_Init
 374:main.c        ****             usbStarted = TRUE;
 1162              		.loc 1 374 0
 1163 001c 254B     		ldr	r3, .L74
 1164 001e 0122     		movs	r2, #1
 1165 0020 1A70     		strb	r2, [r3]
 375:main.c        ****         }
 376:main.c        ****     }
 377:main.c        ****     else
 378:main.c        ****     {
 379:main.c        ****         if (USBUART_DataIsReady() != 0)
 380:main.c        ****         {  
 381:main.c        ****             c = USBUART_GetChar();
 382:main.c        **** 
 383:main.c        ****             if ((c == 13) || (c == 10))
 384:main.c        ****             {
 385:main.c        **** //                if (usbBufCount > 0)
 386:main.c        ****                 {
 387:main.c        ****                     entry[usbBufCount]= '\0';
 388:main.c        ****                     strcpy(line,entry);
 389:main.c        ****                     usbBufCount = 0;
 390:main.c        ****                     flag_KB_string = 1;
 391:main.c        ****                 }
 392:main.c        ****             }
 393:main.c        ****             else 
 394:main.c        ****             {
 395:main.c        ****                 if (((c == CHAR_BACKSP) || (c == CHAR_DEL) ) && (usbBufCount > 0) )
 396:main.c        ****                     usbBufCount--;
 397:main.c        ****                 else
 398:main.c        ****                 {
 399:main.c        ****                     if (usbBufCount > (BUF_SIZE-2) ) // one less else strtok triggers a crash
 400:main.c        ****                     {
 401:main.c        ****                        USBUART_PutChar('!');        
 402:main.c        ****                     }
 403:main.c        ****                     else
 404:main.c        ****                         entry[usbBufCount++] = c;  
 405:main.c        ****                 }  
 406:main.c        ****             }
 407:main.c        ****         }
 408:main.c        ****     }    
 409:main.c        **** }
 1166              		.loc 1 409 0
 1167 0022 43E0     		b	.L73
 1168              	.L65:
 379:main.c        ****         {  
 1169              		.loc 1 379 0
 1170 0024 FFF7FEFF 		bl	USBUART_DataIsReady
 1171 0028 0346     		mov	r3, r0
 1172 002a 002B     		cmp	r3, #0
 1173 002c 3ED0     		beq	.L73
 381:main.c        **** 
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 29


 1174              		.loc 1 381 0
 1175 002e FFF7FEFF 		bl	USBUART_GetChar
 1176 0032 0346     		mov	r3, r0
 1177 0034 FB71     		strb	r3, [r7, #7]
 383:main.c        ****             {
 1178              		.loc 1 383 0
 1179 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1180 0038 0D2B     		cmp	r3, #13
 1181 003a 02D0     		beq	.L68
 383:main.c        ****             {
 1182              		.loc 1 383 0 is_stmt 0 discriminator 1
 1183 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1184 003e 0A2B     		cmp	r3, #10
 1185 0040 10D1     		bne	.L69
 1186              	.L68:
 387:main.c        ****                     strcpy(line,entry);
 1187              		.loc 1 387 0 is_stmt 1
 1188 0042 1D4B     		ldr	r3, .L74+4
 1189 0044 1B88     		ldrh	r3, [r3]
 1190 0046 1A46     		mov	r2, r3
 1191 0048 1C4B     		ldr	r3, .L74+8
 1192 004a 0021     		movs	r1, #0
 1193 004c 9954     		strb	r1, [r3, r2]
 388:main.c        ****                     usbBufCount = 0;
 1194              		.loc 1 388 0
 1195 004e 1B49     		ldr	r1, .L74+8
 1196 0050 1B48     		ldr	r0, .L74+12
 1197 0052 FFF7FEFF 		bl	strcpy
 389:main.c        ****                     flag_KB_string = 1;
 1198              		.loc 1 389 0
 1199 0056 184B     		ldr	r3, .L74+4
 1200 0058 0022     		movs	r2, #0
 1201 005a 1A80     		strh	r2, [r3]	@ movhi
 390:main.c        ****                 }
 1202              		.loc 1 390 0
 1203 005c 194B     		ldr	r3, .L74+16
 1204 005e 0122     		movs	r2, #1
 1205 0060 1A70     		strb	r2, [r3]
 1206 0062 23E0     		b	.L67
 1207              	.L69:
 395:main.c        ****                     usbBufCount--;
 1208              		.loc 1 395 0
 1209 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1210 0066 082B     		cmp	r3, #8
 1211 0068 02D0     		beq	.L70
 395:main.c        ****                     usbBufCount--;
 1212              		.loc 1 395 0 is_stmt 0 discriminator 2
 1213 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1214 006c 7F2B     		cmp	r3, #127
 1215 006e 0AD1     		bne	.L71
 1216              	.L70:
 395:main.c        ****                     usbBufCount--;
 1217              		.loc 1 395 0 discriminator 3
 1218 0070 114B     		ldr	r3, .L74+4
 1219 0072 1B88     		ldrh	r3, [r3]
 1220 0074 002B     		cmp	r3, #0
 1221 0076 06D0     		beq	.L71
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 30


 396:main.c        ****                 else
 1222              		.loc 1 396 0 is_stmt 1
 1223 0078 0F4B     		ldr	r3, .L74+4
 1224 007a 1B88     		ldrh	r3, [r3]
 1225 007c 013B     		subs	r3, r3, #1
 1226 007e 9AB2     		uxth	r2, r3
 1227 0080 0D4B     		ldr	r3, .L74+4
 1228 0082 1A80     		strh	r2, [r3]	@ movhi
 1229 0084 12E0     		b	.L67
 1230              	.L71:
 399:main.c        ****                     {
 1231              		.loc 1 399 0
 1232 0086 0C4B     		ldr	r3, .L74+4
 1233 0088 1B88     		ldrh	r3, [r3]
 1234 008a 3E2B     		cmp	r3, #62
 1235 008c 03D9     		bls	.L72
 401:main.c        ****                     }
 1236              		.loc 1 401 0
 1237 008e 2120     		movs	r0, #33
 1238 0090 FFF7FEFF 		bl	USBUART_PutChar
 1239              		.loc 1 409 0
 1240 0094 0AE0     		b	.L73
 1241              	.L72:
 404:main.c        ****                 }  
 1242              		.loc 1 404 0
 1243 0096 084B     		ldr	r3, .L74+4
 1244 0098 1B88     		ldrh	r3, [r3]
 1245 009a 5A1C     		adds	r2, r3, #1
 1246 009c 91B2     		uxth	r1, r2
 1247 009e 064A     		ldr	r2, .L74+4
 1248 00a0 1180     		strh	r1, [r2]	@ movhi
 1249 00a2 1946     		mov	r1, r3
 1250 00a4 054A     		ldr	r2, .L74+8
 1251 00a6 FB79     		ldrb	r3, [r7, #7]
 1252 00a8 5354     		strb	r3, [r2, r1]
 1253              		.loc 1 409 0
 1254 00aa FFE7     		b	.L73
 1255              	.L67:
 1256              	.L73:
 1257 00ac 00BF     		nop
 1258 00ae 0837     		adds	r7, r7, #8
 1259              		.cfi_def_cfa_offset 8
 1260 00b0 BD46     		mov	sp, r7
 1261              		.cfi_def_cfa_register 13
 1262              		@ sp needed
 1263 00b2 80BD     		pop	{r7, pc}
 1264              	.L75:
 1265              		.align	2
 1266              	.L74:
 1267 00b4 2C000000 		.word	usbStarted.8233
 1268 00b8 2E000000 		.word	usbBufCount.8234
 1269 00bc 00000000 		.word	entry
 1270 00c0 00000000 		.word	line
 1271 00c4 00000000 		.word	flag_KB_string
 1272              		.cfi_endproc
 1273              	.LFE79:
 1274              		.size	handle_usb, .-handle_usb
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 31


 1275              		.bss
 1276              	usbStarted.8233:
 1277 002c 00       		.space	1
 1278 002d 00       		.align	1
 1279              	usbBufCount.8234:
 1280 002e 0000     		.space	2
 1281              		.text
 1282              	.Letext0:
 1283              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1284              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1285              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1286              		.file 5 "vars.h"
 1287              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1288              		.section	.debug_info,"",%progbits
 1289              	.Ldebug_info0:
 1290 0000 0D060000 		.4byte	0x60d
 1291 0004 0400     		.2byte	0x4
 1292 0006 00000000 		.4byte	.Ldebug_abbrev0
 1293 000a 04       		.byte	0x4
 1294 000b 01       		.uleb128 0x1
 1295 000c A5000000 		.4byte	.LASF89
 1296 0010 0C       		.byte	0xc
 1297 0011 B0030000 		.4byte	.LASF90
 1298 0015 7D040000 		.4byte	.LASF91
 1299 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1300 001d 00000000 		.4byte	0
 1301 0021 00000000 		.4byte	.Ldebug_line0
 1302 0025 02       		.uleb128 0x2
 1303 0026 01       		.byte	0x1
 1304 0027 06       		.byte	0x6
 1305 0028 89020000 		.4byte	.LASF0
 1306 002c 02       		.uleb128 0x2
 1307 002d 01       		.byte	0x1
 1308 002e 08       		.byte	0x8
 1309 002f 1F020000 		.4byte	.LASF1
 1310 0033 02       		.uleb128 0x2
 1311 0034 02       		.byte	0x2
 1312 0035 05       		.byte	0x5
 1313 0036 6C000000 		.4byte	.LASF2
 1314 003a 02       		.uleb128 0x2
 1315 003b 02       		.byte	0x2
 1316 003c 07       		.byte	0x7
 1317 003d 18030000 		.4byte	.LASF3
 1318 0041 03       		.uleb128 0x3
 1319 0042 03040000 		.4byte	.LASF12
 1320 0046 02       		.byte	0x2
 1321 0047 3F       		.byte	0x3f
 1322 0048 4C000000 		.4byte	0x4c
 1323 004c 02       		.uleb128 0x2
 1324 004d 04       		.byte	0x4
 1325 004e 05       		.byte	0x5
 1326 004f CC010000 		.4byte	.LASF4
 1327 0053 02       		.uleb128 0x2
 1328 0054 04       		.byte	0x4
 1329 0055 07       		.byte	0x7
 1330 0056 B7030000 		.4byte	.LASF5
 1331 005a 02       		.uleb128 0x2
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 32


 1332 005b 08       		.byte	0x8
 1333 005c 05       		.byte	0x5
 1334 005d 80010000 		.4byte	.LASF6
 1335 0061 02       		.uleb128 0x2
 1336 0062 08       		.byte	0x8
 1337 0063 07       		.byte	0x7
 1338 0064 9D020000 		.4byte	.LASF7
 1339 0068 04       		.uleb128 0x4
 1340 0069 04       		.byte	0x4
 1341 006a 05       		.byte	0x5
 1342 006b 696E7400 		.ascii	"int\000"
 1343 006f 02       		.uleb128 0x2
 1344 0070 04       		.byte	0x4
 1345 0071 07       		.byte	0x7
 1346 0072 B4020000 		.4byte	.LASF8
 1347 0076 02       		.uleb128 0x2
 1348 0077 08       		.byte	0x8
 1349 0078 04       		.byte	0x4
 1350 0079 45020000 		.4byte	.LASF9
 1351 007d 02       		.uleb128 0x2
 1352 007e 04       		.byte	0x4
 1353 007f 07       		.byte	0x7
 1354 0080 83000000 		.4byte	.LASF10
 1355 0084 05       		.uleb128 0x5
 1356 0085 04       		.byte	0x4
 1357 0086 8A000000 		.4byte	0x8a
 1358 008a 02       		.uleb128 0x2
 1359 008b 01       		.byte	0x1
 1360 008c 08       		.byte	0x8
 1361 008d 46030000 		.4byte	.LASF11
 1362 0091 03       		.uleb128 0x3
 1363 0092 95020000 		.4byte	.LASF13
 1364 0096 03       		.byte	0x3
 1365 0097 2C       		.byte	0x2c
 1366 0098 41000000 		.4byte	0x41
 1367 009c 06       		.uleb128 0x6
 1368 009d 62010000 		.4byte	.LASF14
 1369 00a1 04       		.byte	0x4
 1370 00a2 E901     		.2byte	0x1e9
 1371 00a4 2C000000 		.4byte	0x2c
 1372 00a8 06       		.uleb128 0x6
 1373 00a9 44010000 		.4byte	.LASF15
 1374 00ad 04       		.byte	0x4
 1375 00ae EA01     		.2byte	0x1ea
 1376 00b0 3A000000 		.4byte	0x3a
 1377 00b4 06       		.uleb128 0x6
 1378 00b5 A9030000 		.4byte	.LASF16
 1379 00b9 04       		.byte	0x4
 1380 00ba EB01     		.2byte	0x1eb
 1381 00bc 53000000 		.4byte	0x53
 1382 00c0 06       		.uleb128 0x6
 1383 00c1 9B010000 		.4byte	.LASF17
 1384 00c5 04       		.byte	0x4
 1385 00c6 EC01     		.2byte	0x1ec
 1386 00c8 25000000 		.4byte	0x25
 1387 00cc 06       		.uleb128 0x6
 1388 00cd 5C010000 		.4byte	.LASF18
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 33


 1389 00d1 04       		.byte	0x4
 1390 00d2 ED01     		.2byte	0x1ed
 1391 00d4 33000000 		.4byte	0x33
 1392 00d8 02       		.uleb128 0x2
 1393 00d9 04       		.byte	0x4
 1394 00da 04       		.byte	0x4
 1395 00db 7A010000 		.4byte	.LASF19
 1396 00df 02       		.uleb128 0x2
 1397 00e0 08       		.byte	0x8
 1398 00e1 04       		.byte	0x4
 1399 00e2 33000000 		.4byte	.LASF20
 1400 00e6 07       		.uleb128 0x7
 1401 00e7 2B030000 		.4byte	.LASF92
 1402 00eb 20       		.byte	0x20
 1403 00ec 05       		.byte	0x5
 1404 00ed 29       		.byte	0x29
 1405 00ee BF010000 		.4byte	0x1bf
 1406 00f2 08       		.uleb128 0x8
 1407 00f3 E0040000 		.4byte	.LASF21
 1408 00f7 05       		.byte	0x5
 1409 00f8 2A       		.byte	0x2a
 1410 00f9 C0000000 		.4byte	0xc0
 1411 00fd 00       		.byte	0
 1412 00fe 08       		.uleb128 0x8
 1413 00ff 4B010000 		.4byte	.LASF22
 1414 0103 05       		.byte	0x5
 1415 0104 2B       		.byte	0x2b
 1416 0105 9C000000 		.4byte	0x9c
 1417 0109 01       		.byte	0x1
 1418 010a 08       		.uleb128 0x8
 1419 010b 8D030000 		.4byte	.LASF23
 1420 010f 05       		.byte	0x5
 1421 0110 2C       		.byte	0x2c
 1422 0111 CC000000 		.4byte	0xcc
 1423 0115 02       		.byte	0x2
 1424 0116 08       		.uleb128 0x8
 1425 0117 65040000 		.4byte	.LASF24
 1426 011b 05       		.byte	0x5
 1427 011c 2D       		.byte	0x2d
 1428 011d CC000000 		.4byte	0xcc
 1429 0121 04       		.byte	0x4
 1430 0122 08       		.uleb128 0x8
 1431 0123 E5040000 		.4byte	.LASF25
 1432 0127 05       		.byte	0x5
 1433 0128 2E       		.byte	0x2e
 1434 0129 CC000000 		.4byte	0xcc
 1435 012d 06       		.byte	0x6
 1436 012e 08       		.uleb128 0x8
 1437 012f C4010000 		.4byte	.LASF26
 1438 0133 05       		.byte	0x5
 1439 0134 2F       		.byte	0x2f
 1440 0135 CC000000 		.4byte	0xcc
 1441 0139 08       		.byte	0x8
 1442 013a 08       		.uleb128 0x8
 1443 013b 12040000 		.4byte	.LASF27
 1444 013f 05       		.byte	0x5
 1445 0140 30       		.byte	0x30
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 34


 1446 0141 CC000000 		.4byte	0xcc
 1447 0145 0A       		.byte	0xa
 1448 0146 08       		.uleb128 0x8
 1449 0147 69020000 		.4byte	.LASF28
 1450 014b 05       		.byte	0x5
 1451 014c 31       		.byte	0x31
 1452 014d CC000000 		.4byte	0xcc
 1453 0151 0C       		.byte	0xc
 1454 0152 08       		.uleb128 0x8
 1455 0153 B7010000 		.4byte	.LASF29
 1456 0157 05       		.byte	0x5
 1457 0158 32       		.byte	0x32
 1458 0159 CC000000 		.4byte	0xcc
 1459 015d 0E       		.byte	0xe
 1460 015e 08       		.uleb128 0x8
 1461 015f 81020000 		.4byte	.LASF30
 1462 0163 05       		.byte	0x5
 1463 0164 33       		.byte	0x33
 1464 0165 CC000000 		.4byte	0xcc
 1465 0169 10       		.byte	0x10
 1466 016a 08       		.uleb128 0x8
 1467 016b 61030000 		.4byte	.LASF31
 1468 016f 05       		.byte	0x5
 1469 0170 34       		.byte	0x34
 1470 0171 CC000000 		.4byte	0xcc
 1471 0175 12       		.byte	0x12
 1472 0176 08       		.uleb128 0x8
 1473 0177 76030000 		.4byte	.LASF32
 1474 017b 05       		.byte	0x5
 1475 017c 35       		.byte	0x35
 1476 017d CC000000 		.4byte	0xcc
 1477 0181 14       		.byte	0x14
 1478 0182 08       		.uleb128 0x8
 1479 0183 68010000 		.4byte	.LASF33
 1480 0187 05       		.byte	0x5
 1481 0188 36       		.byte	0x36
 1482 0189 CC000000 		.4byte	0xcc
 1483 018d 16       		.byte	0x16
 1484 018e 08       		.uleb128 0x8
 1485 018f 64000000 		.4byte	.LASF34
 1486 0193 05       		.byte	0x5
 1487 0194 37       		.byte	0x37
 1488 0195 CC000000 		.4byte	0xcc
 1489 0199 18       		.byte	0x18
 1490 019a 08       		.uleb128 0x8
 1491 019b AF010000 		.4byte	.LASF35
 1492 019f 05       		.byte	0x5
 1493 01a0 38       		.byte	0x38
 1494 01a1 CC000000 		.4byte	0xcc
 1495 01a5 1A       		.byte	0x1a
 1496 01a6 08       		.uleb128 0x8
 1497 01a7 03030000 		.4byte	.LASF36
 1498 01ab 05       		.byte	0x5
 1499 01ac 39       		.byte	0x39
 1500 01ad CC000000 		.4byte	0xcc
 1501 01b1 1C       		.byte	0x1c
 1502 01b2 08       		.uleb128 0x8
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 35


 1503 01b3 69030000 		.4byte	.LASF37
 1504 01b7 05       		.byte	0x5
 1505 01b8 3A       		.byte	0x3a
 1506 01b9 CC000000 		.4byte	0xcc
 1507 01bd 1E       		.byte	0x1e
 1508 01be 00       		.byte	0
 1509 01bf 09       		.uleb128 0x9
 1510 01c0 8C000000 		.4byte	.LASF93
 1511 01c4 04       		.byte	0x4
 1512 01c5 6F000000 		.4byte	0x6f
 1513 01c9 01       		.byte	0x1
 1514 01ca 27       		.byte	0x27
 1515 01cb FA010000 		.4byte	0x1fa
 1516 01cf 0A       		.uleb128 0xa
 1517 01d0 4B030000 		.4byte	.LASF38
 1518 01d4 00       		.byte	0
 1519 01d5 0A       		.uleb128 0xa
 1520 01d6 98030000 		.4byte	.LASF39
 1521 01da 01       		.byte	0x1
 1522 01db 0A       		.uleb128 0xa
 1523 01dc 17000000 		.4byte	.LASF40
 1524 01e0 02       		.byte	0x2
 1525 01e1 0A       		.uleb128 0xa
 1526 01e2 46000000 		.4byte	.LASF41
 1527 01e6 03       		.byte	0x3
 1528 01e7 0A       		.uleb128 0xa
 1529 01e8 F7040000 		.4byte	.LASF42
 1530 01ec 04       		.byte	0x4
 1531 01ed 0A       		.uleb128 0xa
 1532 01ee 0D040000 		.4byte	.LASF43
 1533 01f2 05       		.byte	0x5
 1534 01f3 0A       		.uleb128 0xa
 1535 01f4 D4030000 		.4byte	.LASF44
 1536 01f8 06       		.byte	0x6
 1537 01f9 00       		.byte	0
 1538 01fa 0B       		.uleb128 0xb
 1539 01fb 51010000 		.4byte	.LASF45
 1540 01ff 01       		.byte	0x1
 1541 0200 3F       		.byte	0x3f
 1542 0201 00000000 		.4byte	.LFB64
 1543 0205 C8000000 		.4byte	.LFE64-.LFB64
 1544 0209 01       		.uleb128 0x1
 1545 020a 9C       		.byte	0x9c
 1546 020b 0B       		.uleb128 0xb
 1547 020c 20000000 		.4byte	.LASF46
 1548 0210 01       		.byte	0x1
 1549 0211 4F       		.byte	0x4f
 1550 0212 00000000 		.4byte	.LFB65
 1551 0216 18000000 		.4byte	.LFE65-.LFB65
 1552 021a 01       		.uleb128 0x1
 1553 021b 9C       		.byte	0x9c
 1554 021c 0B       		.uleb128 0xb
 1555 021d EA010000 		.4byte	.LASF47
 1556 0221 01       		.byte	0x1
 1557 0222 56       		.byte	0x56
 1558 0223 00000000 		.4byte	.LFB66
 1559 0227 18000000 		.4byte	.LFE66-.LFB66
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 36


 1560 022b 01       		.uleb128 0x1
 1561 022c 9C       		.byte	0x9c
 1562 022d 0B       		.uleb128 0xb
 1563 022e DC030000 		.4byte	.LASF48
 1564 0232 01       		.byte	0x1
 1565 0233 5D       		.byte	0x5d
 1566 0234 00000000 		.4byte	.LFB67
 1567 0238 18000000 		.4byte	.LFE67-.LFB67
 1568 023c 01       		.uleb128 0x1
 1569 023d 9C       		.byte	0x9c
 1570 023e 0C       		.uleb128 0xc
 1571 023f 38010000 		.4byte	.LASF49
 1572 0243 01       		.byte	0x1
 1573 0244 63       		.byte	0x63
 1574 0245 00000000 		.4byte	.LFB68
 1575 0249 18000000 		.4byte	.LFE68-.LFB68
 1576 024d 01       		.uleb128 0x1
 1577 024e 9C       		.byte	0x9c
 1578 024f 0C       		.uleb128 0xc
 1579 0250 0C030000 		.4byte	.LASF50
 1580 0254 01       		.byte	0x1
 1581 0255 69       		.byte	0x69
 1582 0256 00000000 		.4byte	.LFB69
 1583 025a 18000000 		.4byte	.LFE69-.LFB69
 1584 025e 01       		.uleb128 0x1
 1585 025f 9C       		.byte	0x9c
 1586 0260 0C       		.uleb128 0xc
 1587 0261 00000000 		.4byte	.LASF51
 1588 0265 01       		.byte	0x1
 1589 0266 6F       		.byte	0x6f
 1590 0267 00000000 		.4byte	.LFB70
 1591 026b 18000000 		.4byte	.LFE70-.LFB70
 1592 026f 01       		.uleb128 0x1
 1593 0270 9C       		.byte	0x9c
 1594 0271 0B       		.uleb128 0xb
 1595 0272 F6020000 		.4byte	.LASF52
 1596 0276 01       		.byte	0x1
 1597 0277 75       		.byte	0x75
 1598 0278 00000000 		.4byte	.LFB71
 1599 027c 58000000 		.4byte	.LFE71-.LFB71
 1600 0280 01       		.uleb128 0x1
 1601 0281 9C       		.byte	0x9c
 1602 0282 0D       		.uleb128 0xd
 1603 0283 33010000 		.4byte	.LASF53
 1604 0287 01       		.byte	0x1
 1605 0288 8F       		.byte	0x8f
 1606 0289 68000000 		.4byte	0x68
 1607 028d 00000000 		.4byte	.LFB72
 1608 0291 E0000000 		.4byte	.LFE72-.LFB72
 1609 0295 01       		.uleb128 0x1
 1610 0296 9C       		.byte	0x9c
 1611 0297 0E       		.uleb128 0xe
 1612 0298 3A040000 		.4byte	.LASF94
 1613 029c 01       		.byte	0x1
 1614 029d CA       		.byte	0xca
 1615 029e CC000000 		.4byte	0xcc
 1616 02a2 00000000 		.4byte	.LFB73
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 37


 1617 02a6 6C000000 		.4byte	.LFE73-.LFB73
 1618 02aa 01       		.uleb128 0x1
 1619 02ab 9C       		.byte	0x9c
 1620 02ac DB020000 		.4byte	0x2db
 1621 02b0 0F       		.uleb128 0xf
 1622 02b1 F1030000 		.4byte	.LASF59
 1623 02b5 01       		.byte	0x1
 1624 02b6 CA       		.byte	0xca
 1625 02b7 A8000000 		.4byte	0xa8
 1626 02bb 02       		.uleb128 0x2
 1627 02bc 91       		.byte	0x91
 1628 02bd 66       		.sleb128 -26
 1629 02be 10       		.uleb128 0x10
 1630 02bf 63707300 		.ascii	"cps\000"
 1631 02c3 01       		.byte	0x1
 1632 02c4 CC       		.byte	0xcc
 1633 02c5 D8000000 		.4byte	0xd8
 1634 02c9 02       		.uleb128 0x2
 1635 02ca 91       		.byte	0x91
 1636 02cb 6C       		.sleb128 -20
 1637 02cc 10       		.uleb128 0x10
 1638 02cd 72706D00 		.ascii	"rpm\000"
 1639 02d1 01       		.byte	0x1
 1640 02d2 CD       		.byte	0xcd
 1641 02d3 CC000000 		.4byte	0xcc
 1642 02d7 02       		.uleb128 0x2
 1643 02d8 91       		.byte	0x91
 1644 02d9 6A       		.sleb128 -22
 1645 02da 00       		.byte	0
 1646 02db 11       		.uleb128 0x11
 1647 02dc 35030000 		.4byte	.LASF55
 1648 02e0 01       		.byte	0x1
 1649 02e1 D5       		.byte	0xd5
 1650 02e2 00000000 		.4byte	.LFB74
 1651 02e6 48000000 		.4byte	.LFE74-.LFB74
 1652 02ea 01       		.uleb128 0x1
 1653 02eb 9C       		.byte	0x9c
 1654 02ec 12       		.uleb128 0x12
 1655 02ed D5010000 		.4byte	.LASF57
 1656 02f1 01       		.byte	0x1
 1657 02f2 E3       		.byte	0xe3
 1658 02f3 BF010000 		.4byte	0x1bf
 1659 02f7 00000000 		.4byte	.LFB75
 1660 02fb 54000000 		.4byte	.LFE75-.LFB75
 1661 02ff 01       		.uleb128 0x1
 1662 0300 9C       		.byte	0x9c
 1663 0301 14030000 		.4byte	0x314
 1664 0305 13       		.uleb128 0x13
 1665 0306 D1040000 		.4byte	.LASF54
 1666 030a 01       		.byte	0x1
 1667 030b E4       		.byte	0xe4
 1668 030c BF010000 		.4byte	0x1bf
 1669 0310 02       		.uleb128 0x2
 1670 0311 91       		.byte	0x91
 1671 0312 74       		.sleb128 -12
 1672 0313 00       		.byte	0
 1673 0314 14       		.uleb128 0x14
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 38


 1674 0315 E5020000 		.4byte	.LASF56
 1675 0319 01       		.byte	0x1
 1676 031a 2A01     		.2byte	0x12a
 1677 031c 00000000 		.4byte	.LFB76
 1678 0320 6C000000 		.4byte	.LFE76-.LFB76
 1679 0324 01       		.uleb128 0x1
 1680 0325 9C       		.byte	0x9c
 1681 0326 15       		.uleb128 0x15
 1682 0327 8E010000 		.4byte	.LASF58
 1683 032b 01       		.byte	0x1
 1684 032c 5001     		.2byte	0x150
 1685 032e 00000000 		.4byte	.LFB77
 1686 0332 3E000000 		.4byte	.LFE77-.LFB77
 1687 0336 01       		.uleb128 0x1
 1688 0337 9C       		.byte	0x9c
 1689 0338 4A030000 		.4byte	0x34a
 1690 033c 16       		.uleb128 0x16
 1691 033d 7300     		.ascii	"s\000"
 1692 033f 01       		.byte	0x1
 1693 0340 5001     		.2byte	0x150
 1694 0342 84000000 		.4byte	0x84
 1695 0346 02       		.uleb128 0x2
 1696 0347 91       		.byte	0x91
 1697 0348 74       		.sleb128 -12
 1698 0349 00       		.byte	0
 1699 034a 15       		.uleb128 0x15
 1700 034b 0C000000 		.4byte	.LASF60
 1701 034f 01       		.byte	0x1
 1702 0350 5E01     		.2byte	0x15e
 1703 0352 00000000 		.4byte	.LFB78
 1704 0356 26000000 		.4byte	.LFE78-.LFB78
 1705 035a 01       		.uleb128 0x1
 1706 035b 9C       		.byte	0x9c
 1707 035c 6E030000 		.4byte	0x36e
 1708 0360 16       		.uleb128 0x16
 1709 0361 6300     		.ascii	"c\000"
 1710 0363 01       		.byte	0x1
 1711 0364 5E01     		.2byte	0x15e
 1712 0366 8A000000 		.4byte	0x8a
 1713 036a 02       		.uleb128 0x2
 1714 036b 91       		.byte	0x91
 1715 036c 77       		.sleb128 -9
 1716 036d 00       		.byte	0
 1717 036e 17       		.uleb128 0x17
 1718 036f 2F040000 		.4byte	.LASF95
 1719 0373 01       		.byte	0x1
 1720 0374 6601     		.2byte	0x166
 1721 0376 00000000 		.4byte	.LFB79
 1722 037a C8000000 		.4byte	.LFE79-.LFB79
 1723 037e 01       		.uleb128 0x1
 1724 037f 9C       		.byte	0x9c
 1725 0380 B6030000 		.4byte	0x3b6
 1726 0384 18       		.uleb128 0x18
 1727 0385 C9030000 		.4byte	.LASF61
 1728 0389 01       		.byte	0x1
 1729 038a 6C01     		.2byte	0x16c
 1730 038c 9C000000 		.4byte	0x9c
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 39


 1731 0390 05       		.uleb128 0x5
 1732 0391 03       		.byte	0x3
 1733 0392 2C000000 		.4byte	usbStarted.8233
 1734 0396 18       		.uleb128 0x18
 1735 0397 D9020000 		.4byte	.LASF62
 1736 039b 01       		.byte	0x1
 1737 039c 6D01     		.2byte	0x16d
 1738 039e A8000000 		.4byte	0xa8
 1739 03a2 05       		.uleb128 0x5
 1740 03a3 03       		.byte	0x3
 1741 03a4 2E000000 		.4byte	usbBufCount.8234
 1742 03a8 19       		.uleb128 0x19
 1743 03a9 6300     		.ascii	"c\000"
 1744 03ab 01       		.byte	0x1
 1745 03ac 6E01     		.2byte	0x16e
 1746 03ae 9C000000 		.4byte	0x9c
 1747 03b2 02       		.uleb128 0x2
 1748 03b3 91       		.byte	0x91
 1749 03b4 77       		.sleb128 -9
 1750 03b5 00       		.byte	0
 1751 03b6 1A       		.uleb128 0x1a
 1752 03b7 70040000 		.4byte	.LASF63
 1753 03bb 06       		.byte	0x6
 1754 03bc 1207     		.2byte	0x712
 1755 03be C2030000 		.4byte	0x3c2
 1756 03c2 1B       		.uleb128 0x1b
 1757 03c3 91000000 		.4byte	0x91
 1758 03c7 1C       		.uleb128 0x1c
 1759 03c8 747300   		.ascii	"ts\000"
 1760 03cb 05       		.byte	0x5
 1761 03cc 10       		.byte	0x10
 1762 03cd 9C000000 		.4byte	0x9c
 1763 03d1 05       		.uleb128 0x5
 1764 03d2 03       		.byte	0x3
 1765 03d3 00000000 		.4byte	ts
 1766 03d7 1D       		.uleb128 0x1d
 1767 03d8 2C000000 		.4byte	.LASF64
 1768 03dc 05       		.byte	0x5
 1769 03dd 11       		.byte	0x11
 1770 03de A8000000 		.4byte	0xa8
 1771 03e2 05       		.uleb128 0x5
 1772 03e3 03       		.byte	0x3
 1773 03e4 00000000 		.4byte	ts_enc
 1774 03e8 1D       		.uleb128 0x1d
 1775 03e9 25040000 		.4byte	.LASF65
 1776 03ed 05       		.byte	0x5
 1777 03ee 12       		.byte	0x12
 1778 03ef A8000000 		.4byte	0xa8
 1779 03f3 05       		.uleb128 0x5
 1780 03f4 03       		.byte	0x3
 1781 03f5 00000000 		.4byte	ts_update
 1782 03f9 1D       		.uleb128 0x1d
 1783 03fa E8030000 		.4byte	.LASF66
 1784 03fe 05       		.byte	0x5
 1785 03ff 13       		.byte	0x13
 1786 0400 A8000000 		.4byte	0xa8
 1787 0404 05       		.uleb128 0x5
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 40


 1788 0405 03       		.byte	0x3
 1789 0406 00000000 		.4byte	ts_speed
 1790 040a 1D       		.uleb128 0x1d
 1791 040b 1A040000 		.4byte	.LASF67
 1792 040f 05       		.byte	0x5
 1793 0410 14       		.byte	0x14
 1794 0411 A8000000 		.4byte	0xa8
 1795 0415 05       		.uleb128 0x5
 1796 0416 03       		.byte	0x3
 1797 0417 00000000 		.4byte	ts_display
 1798 041b 1D       		.uleb128 0x1d
 1799 041c F7030000 		.4byte	.LASF68
 1800 0420 05       		.byte	0x5
 1801 0421 16       		.byte	0x16
 1802 0422 9C000000 		.4byte	0x9c
 1803 0426 05       		.uleb128 0x5
 1804 0427 03       		.byte	0x3
 1805 0428 00000000 		.4byte	flag_ts_enc
 1806 042c 1D       		.uleb128 0x1d
 1807 042d A0010000 		.4byte	.LASF69
 1808 0431 05       		.byte	0x5
 1809 0432 17       		.byte	0x17
 1810 0433 9C000000 		.4byte	0x9c
 1811 0437 05       		.uleb128 0x5
 1812 0438 03       		.byte	0x3
 1813 0439 00000000 		.4byte	flag_ts_update
 1814 043d 1D       		.uleb128 0x1d
 1815 043e 56000000 		.4byte	.LASF70
 1816 0442 05       		.byte	0x5
 1817 0443 18       		.byte	0x18
 1818 0444 9C000000 		.4byte	0x9c
 1819 0448 05       		.uleb128 0x5
 1820 0449 03       		.byte	0x3
 1821 044a 00000000 		.4byte	flag_ts_speed
 1822 044e 1D       		.uleb128 0x1d
 1823 044f 07020000 		.4byte	.LASF71
 1824 0453 05       		.byte	0x5
 1825 0454 19       		.byte	0x19
 1826 0455 9C000000 		.4byte	0x9c
 1827 0459 05       		.uleb128 0x5
 1828 045a 03       		.byte	0x3
 1829 045b 00000000 		.4byte	flag_ts_display
 1830 045f 1D       		.uleb128 0x1d
 1831 0460 17020000 		.4byte	.LASF72
 1832 0464 05       		.byte	0x5
 1833 0465 1C       		.byte	0x1c
 1834 0466 9C000000 		.4byte	0x9c
 1835 046a 05       		.uleb128 0x5
 1836 046b 03       		.byte	0x3
 1837 046c 00000000 		.4byte	flag_rx
 1838 0470 1D       		.uleb128 0x1d
 1839 0471 3A000000 		.4byte	.LASF73
 1840 0475 05       		.byte	0x5
 1841 0476 1D       		.byte	0x1d
 1842 0477 9C000000 		.4byte	0x9c
 1843 047b 05       		.uleb128 0x5
 1844 047c 03       		.byte	0x3
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 41


 1845 047d 00000000 		.4byte	flag_packet
 1846 0481 1D       		.uleb128 0x1d
 1847 0482 CA020000 		.4byte	.LASF74
 1848 0486 05       		.byte	0x5
 1849 0487 1E       		.byte	0x1e
 1850 0488 9C000000 		.4byte	0x9c
 1851 048c 05       		.uleb128 0x5
 1852 048d 03       		.byte	0x3
 1853 048e 00000000 		.4byte	flag_KB_string
 1854 0492 1D       		.uleb128 0x1d
 1855 0493 72020000 		.4byte	.LASF75
 1856 0497 05       		.byte	0x5
 1857 0498 20       		.byte	0x20
 1858 0499 9C000000 		.4byte	0x9c
 1859 049d 05       		.uleb128 0x5
 1860 049e 03       		.byte	0x3
 1861 049f 00000000 		.4byte	dataready_flag
 1862 04a3 1D       		.uleb128 0x1d
 1863 04a4 49040000 		.4byte	.LASF76
 1864 04a8 05       		.byte	0x5
 1865 04a9 22       		.byte	0x22
 1866 04aa 9C000000 		.4byte	0x9c
 1867 04ae 05       		.uleb128 0x5
 1868 04af 03       		.byte	0x3
 1869 04b0 00000000 		.4byte	flag_rf_transmission_active
 1870 04b4 1E       		.uleb128 0x1e
 1871 04b5 8A000000 		.4byte	0x8a
 1872 04b9 C4040000 		.4byte	0x4c4
 1873 04bd 1F       		.uleb128 0x1f
 1874 04be 7D000000 		.4byte	0x7d
 1875 04c2 3F       		.byte	0x3f
 1876 04c3 00       		.byte	0
 1877 04c4 1D       		.uleb128 0x1d
 1878 04c5 7F030000 		.4byte	.LASF77
 1879 04c9 05       		.byte	0x5
 1880 04ca 25       		.byte	0x25
 1881 04cb B4040000 		.4byte	0x4b4
 1882 04cf 05       		.uleb128 0x5
 1883 04d0 03       		.byte	0x3
 1884 04d1 00000000 		.4byte	displaystring
 1885 04d5 1D       		.uleb128 0x1d
 1886 04d6 75010000 		.4byte	.LASF78
 1887 04da 05       		.byte	0x5
 1888 04db 26       		.byte	0x26
 1889 04dc B4040000 		.4byte	0x4b4
 1890 04e0 05       		.uleb128 0x5
 1891 04e1 03       		.byte	0x3
 1892 04e2 00000000 		.4byte	line
 1893 04e6 1D       		.uleb128 0x1d
 1894 04e7 3F020000 		.4byte	.LASF79
 1895 04eb 05       		.byte	0x5
 1896 04ec 26       		.byte	0x26
 1897 04ed B4040000 		.4byte	0x4b4
 1898 04f1 05       		.uleb128 0x5
 1899 04f2 03       		.byte	0x3
 1900 04f3 00000000 		.4byte	entry
 1901 04f7 1E       		.uleb128 0x1e
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 42


 1902 04f8 9C000000 		.4byte	0x9c
 1903 04fc 07050000 		.4byte	0x507
 1904 0500 1F       		.uleb128 0x1f
 1905 0501 7D000000 		.4byte	0x7d
 1906 0505 3F       		.byte	0x3f
 1907 0506 00       		.byte	0
 1908 0507 1D       		.uleb128 0x1d
 1909 0508 9B000000 		.4byte	.LASF80
 1910 050c 05       		.byte	0x5
 1911 050d 27       		.byte	0x27
 1912 050e F7040000 		.4byte	0x4f7
 1913 0512 05       		.uleb128 0x5
 1914 0513 03       		.byte	0x3
 1915 0514 00000000 		.4byte	usbBuffer
 1916 0518 1D       		.uleb128 0x1d
 1917 0519 76000000 		.4byte	.LASF81
 1918 051d 05       		.byte	0x5
 1919 051e 3C       		.byte	0x3c
 1920 051f E6000000 		.4byte	0xe6
 1921 0523 05       		.uleb128 0x5
 1922 0524 03       		.byte	0x3
 1923 0525 00000000 		.4byte	system_state
 1924 0529 1D       		.uleb128 0x1d
 1925 052a F6010000 		.4byte	.LASF82
 1926 052e 01       		.byte	0x1
 1927 052f 29       		.byte	0x29
 1928 0530 BF010000 		.4byte	0x1bf
 1929 0534 05       		.uleb128 0x5
 1930 0535 03       		.byte	0x3
 1931 0536 00000000 		.4byte	currentDirection
 1932 053a 1C       		.uleb128 0x1c
 1933 053b 733100   		.ascii	"s1\000"
 1934 053e 01       		.byte	0x1
 1935 053f 2B       		.byte	0x2b
 1936 0540 9C000000 		.4byte	0x9c
 1937 0544 05       		.uleb128 0x5
 1938 0545 03       		.byte	0x3
 1939 0546 00000000 		.4byte	s1
 1940 054a 1C       		.uleb128 0x1c
 1941 054b 733200   		.ascii	"s2\000"
 1942 054e 01       		.byte	0x1
 1943 054f 2C       		.byte	0x2c
 1944 0550 9C000000 		.4byte	0x9c
 1945 0554 05       		.uleb128 0x5
 1946 0555 03       		.byte	0x3
 1947 0556 00000000 		.4byte	s2
 1948 055a 1C       		.uleb128 0x1c
 1949 055b 733300   		.ascii	"s3\000"
 1950 055e 01       		.byte	0x1
 1951 055f 2D       		.byte	0x2d
 1952 0560 9C000000 		.4byte	0x9c
 1953 0564 05       		.uleb128 0x5
 1954 0565 03       		.byte	0x3
 1955 0566 00000000 		.4byte	s3
 1956 056a 1C       		.uleb128 0x1c
 1957 056b 733400   		.ascii	"s4\000"
 1958 056e 01       		.byte	0x1
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 43


 1959 056f 2E       		.byte	0x2e
 1960 0570 9C000000 		.4byte	0x9c
 1961 0574 05       		.uleb128 0x5
 1962 0575 03       		.byte	0x3
 1963 0576 00000000 		.4byte	s4
 1964 057a 1C       		.uleb128 0x1c
 1965 057b 733500   		.ascii	"s5\000"
 1966 057e 01       		.byte	0x1
 1967 057f 2F       		.byte	0x2f
 1968 0580 9C000000 		.4byte	0x9c
 1969 0584 05       		.uleb128 0x5
 1970 0585 03       		.byte	0x3
 1971 0586 00000000 		.4byte	s5
 1972 058a 1C       		.uleb128 0x1c
 1973 058b 733600   		.ascii	"s6\000"
 1974 058e 01       		.byte	0x1
 1975 058f 30       		.byte	0x30
 1976 0590 9C000000 		.4byte	0x9c
 1977 0594 05       		.uleb128 0x5
 1978 0595 03       		.byte	0x3
 1979 0596 00000000 		.4byte	s6
 1980 059a 1D       		.uleb128 0x1d
 1981 059b 2D020000 		.4byte	.LASF83
 1982 059f 01       		.byte	0x1
 1983 05a0 34       		.byte	0x34
 1984 05a1 B4000000 		.4byte	0xb4
 1985 05a5 05       		.uleb128 0x5
 1986 05a6 03       		.byte	0x3
 1987 05a7 00000000 		.4byte	totalMilliseconds
 1988 05ab 1D       		.uleb128 0x1d
 1989 05ac 51020000 		.4byte	.LASF84
 1990 05b0 01       		.byte	0x1
 1991 05b1 35       		.byte	0x35
 1992 05b2 B4000000 		.4byte	0xb4
 1993 05b6 05       		.uleb128 0x5
 1994 05b7 03       		.byte	0x3
 1995 05b8 00000000 		.4byte	totalDistance
 1996 05bc 1E       		.uleb128 0x1e
 1997 05bd 8A000000 		.4byte	0x8a
 1998 05c1 CC050000 		.4byte	0x5cc
 1999 05c5 1F       		.uleb128 0x1f
 2000 05c6 7D000000 		.4byte	0x7d
 2001 05ca 44       		.byte	0x44
 2002 05cb 00       		.byte	0
 2003 05cc 1D       		.uleb128 0x1d
 2004 05cd A2030000 		.4byte	.LASF85
 2005 05d1 01       		.byte	0x1
 2006 05d2 37       		.byte	0x37
 2007 05d3 BC050000 		.4byte	0x5bc
 2008 05d7 05       		.uleb128 0x5
 2009 05d8 03       		.byte	0x3
 2010 05d9 00000000 		.4byte	buffer
 2011 05dd 1D       		.uleb128 0x1d
 2012 05de 53030000 		.4byte	.LASF86
 2013 05e2 01       		.byte	0x1
 2014 05e3 38       		.byte	0x38
 2015 05e4 68000000 		.4byte	0x68
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 44


 2016 05e8 05       		.uleb128 0x5
 2017 05e9 03       		.byte	0x3
 2018 05ea 00000000 		.4byte	quadDec2Count
 2019 05ee 1D       		.uleb128 0x1d
 2020 05ef C1020000 		.4byte	.LASF87
 2021 05f3 01       		.byte	0x1
 2022 05f4 39       		.byte	0x39
 2023 05f5 68000000 		.4byte	0x68
 2024 05f9 05       		.uleb128 0x5
 2025 05fa 03       		.byte	0x3
 2026 05fb 00000000 		.4byte	timerInt
 2027 05ff 1D       		.uleb128 0x1d
 2028 0600 5F020000 		.4byte	.LASF88
 2029 0604 01       		.byte	0x1
 2030 0605 3A       		.byte	0x3a
 2031 0606 68000000 		.4byte	0x68
 2032 060a 05       		.uleb128 0x5
 2033 060b 03       		.byte	0x3
 2034 060c 00000000 		.4byte	keepLedOn
 2035 0610 00       		.byte	0
 2036              		.section	.debug_abbrev,"",%progbits
 2037              	.Ldebug_abbrev0:
 2038 0000 01       		.uleb128 0x1
 2039 0001 11       		.uleb128 0x11
 2040 0002 01       		.byte	0x1
 2041 0003 25       		.uleb128 0x25
 2042 0004 0E       		.uleb128 0xe
 2043 0005 13       		.uleb128 0x13
 2044 0006 0B       		.uleb128 0xb
 2045 0007 03       		.uleb128 0x3
 2046 0008 0E       		.uleb128 0xe
 2047 0009 1B       		.uleb128 0x1b
 2048 000a 0E       		.uleb128 0xe
 2049 000b 55       		.uleb128 0x55
 2050 000c 17       		.uleb128 0x17
 2051 000d 11       		.uleb128 0x11
 2052 000e 01       		.uleb128 0x1
 2053 000f 10       		.uleb128 0x10
 2054 0010 17       		.uleb128 0x17
 2055 0011 00       		.byte	0
 2056 0012 00       		.byte	0
 2057 0013 02       		.uleb128 0x2
 2058 0014 24       		.uleb128 0x24
 2059 0015 00       		.byte	0
 2060 0016 0B       		.uleb128 0xb
 2061 0017 0B       		.uleb128 0xb
 2062 0018 3E       		.uleb128 0x3e
 2063 0019 0B       		.uleb128 0xb
 2064 001a 03       		.uleb128 0x3
 2065 001b 0E       		.uleb128 0xe
 2066 001c 00       		.byte	0
 2067 001d 00       		.byte	0
 2068 001e 03       		.uleb128 0x3
 2069 001f 16       		.uleb128 0x16
 2070 0020 00       		.byte	0
 2071 0021 03       		.uleb128 0x3
 2072 0022 0E       		.uleb128 0xe
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 45


 2073 0023 3A       		.uleb128 0x3a
 2074 0024 0B       		.uleb128 0xb
 2075 0025 3B       		.uleb128 0x3b
 2076 0026 0B       		.uleb128 0xb
 2077 0027 49       		.uleb128 0x49
 2078 0028 13       		.uleb128 0x13
 2079 0029 00       		.byte	0
 2080 002a 00       		.byte	0
 2081 002b 04       		.uleb128 0x4
 2082 002c 24       		.uleb128 0x24
 2083 002d 00       		.byte	0
 2084 002e 0B       		.uleb128 0xb
 2085 002f 0B       		.uleb128 0xb
 2086 0030 3E       		.uleb128 0x3e
 2087 0031 0B       		.uleb128 0xb
 2088 0032 03       		.uleb128 0x3
 2089 0033 08       		.uleb128 0x8
 2090 0034 00       		.byte	0
 2091 0035 00       		.byte	0
 2092 0036 05       		.uleb128 0x5
 2093 0037 0F       		.uleb128 0xf
 2094 0038 00       		.byte	0
 2095 0039 0B       		.uleb128 0xb
 2096 003a 0B       		.uleb128 0xb
 2097 003b 49       		.uleb128 0x49
 2098 003c 13       		.uleb128 0x13
 2099 003d 00       		.byte	0
 2100 003e 00       		.byte	0
 2101 003f 06       		.uleb128 0x6
 2102 0040 16       		.uleb128 0x16
 2103 0041 00       		.byte	0
 2104 0042 03       		.uleb128 0x3
 2105 0043 0E       		.uleb128 0xe
 2106 0044 3A       		.uleb128 0x3a
 2107 0045 0B       		.uleb128 0xb
 2108 0046 3B       		.uleb128 0x3b
 2109 0047 05       		.uleb128 0x5
 2110 0048 49       		.uleb128 0x49
 2111 0049 13       		.uleb128 0x13
 2112 004a 00       		.byte	0
 2113 004b 00       		.byte	0
 2114 004c 07       		.uleb128 0x7
 2115 004d 13       		.uleb128 0x13
 2116 004e 01       		.byte	0x1
 2117 004f 03       		.uleb128 0x3
 2118 0050 0E       		.uleb128 0xe
 2119 0051 0B       		.uleb128 0xb
 2120 0052 0B       		.uleb128 0xb
 2121 0053 3A       		.uleb128 0x3a
 2122 0054 0B       		.uleb128 0xb
 2123 0055 3B       		.uleb128 0x3b
 2124 0056 0B       		.uleb128 0xb
 2125 0057 01       		.uleb128 0x1
 2126 0058 13       		.uleb128 0x13
 2127 0059 00       		.byte	0
 2128 005a 00       		.byte	0
 2129 005b 08       		.uleb128 0x8
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 46


 2130 005c 0D       		.uleb128 0xd
 2131 005d 00       		.byte	0
 2132 005e 03       		.uleb128 0x3
 2133 005f 0E       		.uleb128 0xe
 2134 0060 3A       		.uleb128 0x3a
 2135 0061 0B       		.uleb128 0xb
 2136 0062 3B       		.uleb128 0x3b
 2137 0063 0B       		.uleb128 0xb
 2138 0064 49       		.uleb128 0x49
 2139 0065 13       		.uleb128 0x13
 2140 0066 38       		.uleb128 0x38
 2141 0067 0B       		.uleb128 0xb
 2142 0068 00       		.byte	0
 2143 0069 00       		.byte	0
 2144 006a 09       		.uleb128 0x9
 2145 006b 04       		.uleb128 0x4
 2146 006c 01       		.byte	0x1
 2147 006d 03       		.uleb128 0x3
 2148 006e 0E       		.uleb128 0xe
 2149 006f 0B       		.uleb128 0xb
 2150 0070 0B       		.uleb128 0xb
 2151 0071 49       		.uleb128 0x49
 2152 0072 13       		.uleb128 0x13
 2153 0073 3A       		.uleb128 0x3a
 2154 0074 0B       		.uleb128 0xb
 2155 0075 3B       		.uleb128 0x3b
 2156 0076 0B       		.uleb128 0xb
 2157 0077 01       		.uleb128 0x1
 2158 0078 13       		.uleb128 0x13
 2159 0079 00       		.byte	0
 2160 007a 00       		.byte	0
 2161 007b 0A       		.uleb128 0xa
 2162 007c 28       		.uleb128 0x28
 2163 007d 00       		.byte	0
 2164 007e 03       		.uleb128 0x3
 2165 007f 0E       		.uleb128 0xe
 2166 0080 1C       		.uleb128 0x1c
 2167 0081 0B       		.uleb128 0xb
 2168 0082 00       		.byte	0
 2169 0083 00       		.byte	0
 2170 0084 0B       		.uleb128 0xb
 2171 0085 2E       		.uleb128 0x2e
 2172 0086 00       		.byte	0
 2173 0087 3F       		.uleb128 0x3f
 2174 0088 19       		.uleb128 0x19
 2175 0089 03       		.uleb128 0x3
 2176 008a 0E       		.uleb128 0xe
 2177 008b 3A       		.uleb128 0x3a
 2178 008c 0B       		.uleb128 0xb
 2179 008d 3B       		.uleb128 0x3b
 2180 008e 0B       		.uleb128 0xb
 2181 008f 27       		.uleb128 0x27
 2182 0090 19       		.uleb128 0x19
 2183 0091 11       		.uleb128 0x11
 2184 0092 01       		.uleb128 0x1
 2185 0093 12       		.uleb128 0x12
 2186 0094 06       		.uleb128 0x6
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 47


 2187 0095 40       		.uleb128 0x40
 2188 0096 18       		.uleb128 0x18
 2189 0097 9642     		.uleb128 0x2116
 2190 0099 19       		.uleb128 0x19
 2191 009a 00       		.byte	0
 2192 009b 00       		.byte	0
 2193 009c 0C       		.uleb128 0xc
 2194 009d 2E       		.uleb128 0x2e
 2195 009e 00       		.byte	0
 2196 009f 3F       		.uleb128 0x3f
 2197 00a0 19       		.uleb128 0x19
 2198 00a1 03       		.uleb128 0x3
 2199 00a2 0E       		.uleb128 0xe
 2200 00a3 3A       		.uleb128 0x3a
 2201 00a4 0B       		.uleb128 0xb
 2202 00a5 3B       		.uleb128 0x3b
 2203 00a6 0B       		.uleb128 0xb
 2204 00a7 27       		.uleb128 0x27
 2205 00a8 19       		.uleb128 0x19
 2206 00a9 11       		.uleb128 0x11
 2207 00aa 01       		.uleb128 0x1
 2208 00ab 12       		.uleb128 0x12
 2209 00ac 06       		.uleb128 0x6
 2210 00ad 40       		.uleb128 0x40
 2211 00ae 18       		.uleb128 0x18
 2212 00af 9742     		.uleb128 0x2117
 2213 00b1 19       		.uleb128 0x19
 2214 00b2 00       		.byte	0
 2215 00b3 00       		.byte	0
 2216 00b4 0D       		.uleb128 0xd
 2217 00b5 2E       		.uleb128 0x2e
 2218 00b6 00       		.byte	0
 2219 00b7 3F       		.uleb128 0x3f
 2220 00b8 19       		.uleb128 0x19
 2221 00b9 03       		.uleb128 0x3
 2222 00ba 0E       		.uleb128 0xe
 2223 00bb 3A       		.uleb128 0x3a
 2224 00bc 0B       		.uleb128 0xb
 2225 00bd 3B       		.uleb128 0x3b
 2226 00be 0B       		.uleb128 0xb
 2227 00bf 49       		.uleb128 0x49
 2228 00c0 13       		.uleb128 0x13
 2229 00c1 11       		.uleb128 0x11
 2230 00c2 01       		.uleb128 0x1
 2231 00c3 12       		.uleb128 0x12
 2232 00c4 06       		.uleb128 0x6
 2233 00c5 40       		.uleb128 0x40
 2234 00c6 18       		.uleb128 0x18
 2235 00c7 9642     		.uleb128 0x2116
 2236 00c9 19       		.uleb128 0x19
 2237 00ca 00       		.byte	0
 2238 00cb 00       		.byte	0
 2239 00cc 0E       		.uleb128 0xe
 2240 00cd 2E       		.uleb128 0x2e
 2241 00ce 01       		.byte	0x1
 2242 00cf 3F       		.uleb128 0x3f
 2243 00d0 19       		.uleb128 0x19
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 48


 2244 00d1 03       		.uleb128 0x3
 2245 00d2 0E       		.uleb128 0xe
 2246 00d3 3A       		.uleb128 0x3a
 2247 00d4 0B       		.uleb128 0xb
 2248 00d5 3B       		.uleb128 0x3b
 2249 00d6 0B       		.uleb128 0xb
 2250 00d7 27       		.uleb128 0x27
 2251 00d8 19       		.uleb128 0x19
 2252 00d9 49       		.uleb128 0x49
 2253 00da 13       		.uleb128 0x13
 2254 00db 11       		.uleb128 0x11
 2255 00dc 01       		.uleb128 0x1
 2256 00dd 12       		.uleb128 0x12
 2257 00de 06       		.uleb128 0x6
 2258 00df 40       		.uleb128 0x40
 2259 00e0 18       		.uleb128 0x18
 2260 00e1 9642     		.uleb128 0x2116
 2261 00e3 19       		.uleb128 0x19
 2262 00e4 01       		.uleb128 0x1
 2263 00e5 13       		.uleb128 0x13
 2264 00e6 00       		.byte	0
 2265 00e7 00       		.byte	0
 2266 00e8 0F       		.uleb128 0xf
 2267 00e9 05       		.uleb128 0x5
 2268 00ea 00       		.byte	0
 2269 00eb 03       		.uleb128 0x3
 2270 00ec 0E       		.uleb128 0xe
 2271 00ed 3A       		.uleb128 0x3a
 2272 00ee 0B       		.uleb128 0xb
 2273 00ef 3B       		.uleb128 0x3b
 2274 00f0 0B       		.uleb128 0xb
 2275 00f1 49       		.uleb128 0x49
 2276 00f2 13       		.uleb128 0x13
 2277 00f3 02       		.uleb128 0x2
 2278 00f4 18       		.uleb128 0x18
 2279 00f5 00       		.byte	0
 2280 00f6 00       		.byte	0
 2281 00f7 10       		.uleb128 0x10
 2282 00f8 34       		.uleb128 0x34
 2283 00f9 00       		.byte	0
 2284 00fa 03       		.uleb128 0x3
 2285 00fb 08       		.uleb128 0x8
 2286 00fc 3A       		.uleb128 0x3a
 2287 00fd 0B       		.uleb128 0xb
 2288 00fe 3B       		.uleb128 0x3b
 2289 00ff 0B       		.uleb128 0xb
 2290 0100 49       		.uleb128 0x49
 2291 0101 13       		.uleb128 0x13
 2292 0102 02       		.uleb128 0x2
 2293 0103 18       		.uleb128 0x18
 2294 0104 00       		.byte	0
 2295 0105 00       		.byte	0
 2296 0106 11       		.uleb128 0x11
 2297 0107 2E       		.uleb128 0x2e
 2298 0108 00       		.byte	0
 2299 0109 3F       		.uleb128 0x3f
 2300 010a 19       		.uleb128 0x19
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 49


 2301 010b 03       		.uleb128 0x3
 2302 010c 0E       		.uleb128 0xe
 2303 010d 3A       		.uleb128 0x3a
 2304 010e 0B       		.uleb128 0xb
 2305 010f 3B       		.uleb128 0x3b
 2306 0110 0B       		.uleb128 0xb
 2307 0111 11       		.uleb128 0x11
 2308 0112 01       		.uleb128 0x1
 2309 0113 12       		.uleb128 0x12
 2310 0114 06       		.uleb128 0x6
 2311 0115 40       		.uleb128 0x40
 2312 0116 18       		.uleb128 0x18
 2313 0117 9742     		.uleb128 0x2117
 2314 0119 19       		.uleb128 0x19
 2315 011a 00       		.byte	0
 2316 011b 00       		.byte	0
 2317 011c 12       		.uleb128 0x12
 2318 011d 2E       		.uleb128 0x2e
 2319 011e 01       		.byte	0x1
 2320 011f 3F       		.uleb128 0x3f
 2321 0120 19       		.uleb128 0x19
 2322 0121 03       		.uleb128 0x3
 2323 0122 0E       		.uleb128 0xe
 2324 0123 3A       		.uleb128 0x3a
 2325 0124 0B       		.uleb128 0xb
 2326 0125 3B       		.uleb128 0x3b
 2327 0126 0B       		.uleb128 0xb
 2328 0127 49       		.uleb128 0x49
 2329 0128 13       		.uleb128 0x13
 2330 0129 11       		.uleb128 0x11
 2331 012a 01       		.uleb128 0x1
 2332 012b 12       		.uleb128 0x12
 2333 012c 06       		.uleb128 0x6
 2334 012d 40       		.uleb128 0x40
 2335 012e 18       		.uleb128 0x18
 2336 012f 9742     		.uleb128 0x2117
 2337 0131 19       		.uleb128 0x19
 2338 0132 01       		.uleb128 0x1
 2339 0133 13       		.uleb128 0x13
 2340 0134 00       		.byte	0
 2341 0135 00       		.byte	0
 2342 0136 13       		.uleb128 0x13
 2343 0137 34       		.uleb128 0x34
 2344 0138 00       		.byte	0
 2345 0139 03       		.uleb128 0x3
 2346 013a 0E       		.uleb128 0xe
 2347 013b 3A       		.uleb128 0x3a
 2348 013c 0B       		.uleb128 0xb
 2349 013d 3B       		.uleb128 0x3b
 2350 013e 0B       		.uleb128 0xb
 2351 013f 49       		.uleb128 0x49
 2352 0140 13       		.uleb128 0x13
 2353 0141 02       		.uleb128 0x2
 2354 0142 18       		.uleb128 0x18
 2355 0143 00       		.byte	0
 2356 0144 00       		.byte	0
 2357 0145 14       		.uleb128 0x14
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 50


 2358 0146 2E       		.uleb128 0x2e
 2359 0147 00       		.byte	0
 2360 0148 3F       		.uleb128 0x3f
 2361 0149 19       		.uleb128 0x19
 2362 014a 03       		.uleb128 0x3
 2363 014b 0E       		.uleb128 0xe
 2364 014c 3A       		.uleb128 0x3a
 2365 014d 0B       		.uleb128 0xb
 2366 014e 3B       		.uleb128 0x3b
 2367 014f 05       		.uleb128 0x5
 2368 0150 11       		.uleb128 0x11
 2369 0151 01       		.uleb128 0x1
 2370 0152 12       		.uleb128 0x12
 2371 0153 06       		.uleb128 0x6
 2372 0154 40       		.uleb128 0x40
 2373 0155 18       		.uleb128 0x18
 2374 0156 9642     		.uleb128 0x2116
 2375 0158 19       		.uleb128 0x19
 2376 0159 00       		.byte	0
 2377 015a 00       		.byte	0
 2378 015b 15       		.uleb128 0x15
 2379 015c 2E       		.uleb128 0x2e
 2380 015d 01       		.byte	0x1
 2381 015e 3F       		.uleb128 0x3f
 2382 015f 19       		.uleb128 0x19
 2383 0160 03       		.uleb128 0x3
 2384 0161 0E       		.uleb128 0xe
 2385 0162 3A       		.uleb128 0x3a
 2386 0163 0B       		.uleb128 0xb
 2387 0164 3B       		.uleb128 0x3b
 2388 0165 05       		.uleb128 0x5
 2389 0166 27       		.uleb128 0x27
 2390 0167 19       		.uleb128 0x19
 2391 0168 11       		.uleb128 0x11
 2392 0169 01       		.uleb128 0x1
 2393 016a 12       		.uleb128 0x12
 2394 016b 06       		.uleb128 0x6
 2395 016c 40       		.uleb128 0x40
 2396 016d 18       		.uleb128 0x18
 2397 016e 9642     		.uleb128 0x2116
 2398 0170 19       		.uleb128 0x19
 2399 0171 01       		.uleb128 0x1
 2400 0172 13       		.uleb128 0x13
 2401 0173 00       		.byte	0
 2402 0174 00       		.byte	0
 2403 0175 16       		.uleb128 0x16
 2404 0176 05       		.uleb128 0x5
 2405 0177 00       		.byte	0
 2406 0178 03       		.uleb128 0x3
 2407 0179 08       		.uleb128 0x8
 2408 017a 3A       		.uleb128 0x3a
 2409 017b 0B       		.uleb128 0xb
 2410 017c 3B       		.uleb128 0x3b
 2411 017d 05       		.uleb128 0x5
 2412 017e 49       		.uleb128 0x49
 2413 017f 13       		.uleb128 0x13
 2414 0180 02       		.uleb128 0x2
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 51


 2415 0181 18       		.uleb128 0x18
 2416 0182 00       		.byte	0
 2417 0183 00       		.byte	0
 2418 0184 17       		.uleb128 0x17
 2419 0185 2E       		.uleb128 0x2e
 2420 0186 01       		.byte	0x1
 2421 0187 3F       		.uleb128 0x3f
 2422 0188 19       		.uleb128 0x19
 2423 0189 03       		.uleb128 0x3
 2424 018a 0E       		.uleb128 0xe
 2425 018b 3A       		.uleb128 0x3a
 2426 018c 0B       		.uleb128 0xb
 2427 018d 3B       		.uleb128 0x3b
 2428 018e 05       		.uleb128 0x5
 2429 018f 11       		.uleb128 0x11
 2430 0190 01       		.uleb128 0x1
 2431 0191 12       		.uleb128 0x12
 2432 0192 06       		.uleb128 0x6
 2433 0193 40       		.uleb128 0x40
 2434 0194 18       		.uleb128 0x18
 2435 0195 9642     		.uleb128 0x2116
 2436 0197 19       		.uleb128 0x19
 2437 0198 01       		.uleb128 0x1
 2438 0199 13       		.uleb128 0x13
 2439 019a 00       		.byte	0
 2440 019b 00       		.byte	0
 2441 019c 18       		.uleb128 0x18
 2442 019d 34       		.uleb128 0x34
 2443 019e 00       		.byte	0
 2444 019f 03       		.uleb128 0x3
 2445 01a0 0E       		.uleb128 0xe
 2446 01a1 3A       		.uleb128 0x3a
 2447 01a2 0B       		.uleb128 0xb
 2448 01a3 3B       		.uleb128 0x3b
 2449 01a4 05       		.uleb128 0x5
 2450 01a5 49       		.uleb128 0x49
 2451 01a6 13       		.uleb128 0x13
 2452 01a7 02       		.uleb128 0x2
 2453 01a8 18       		.uleb128 0x18
 2454 01a9 00       		.byte	0
 2455 01aa 00       		.byte	0
 2456 01ab 19       		.uleb128 0x19
 2457 01ac 34       		.uleb128 0x34
 2458 01ad 00       		.byte	0
 2459 01ae 03       		.uleb128 0x3
 2460 01af 08       		.uleb128 0x8
 2461 01b0 3A       		.uleb128 0x3a
 2462 01b1 0B       		.uleb128 0xb
 2463 01b2 3B       		.uleb128 0x3b
 2464 01b3 05       		.uleb128 0x5
 2465 01b4 49       		.uleb128 0x49
 2466 01b5 13       		.uleb128 0x13
 2467 01b6 02       		.uleb128 0x2
 2468 01b7 18       		.uleb128 0x18
 2469 01b8 00       		.byte	0
 2470 01b9 00       		.byte	0
 2471 01ba 1A       		.uleb128 0x1a
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 52


 2472 01bb 34       		.uleb128 0x34
 2473 01bc 00       		.byte	0
 2474 01bd 03       		.uleb128 0x3
 2475 01be 0E       		.uleb128 0xe
 2476 01bf 3A       		.uleb128 0x3a
 2477 01c0 0B       		.uleb128 0xb
 2478 01c1 3B       		.uleb128 0x3b
 2479 01c2 05       		.uleb128 0x5
 2480 01c3 49       		.uleb128 0x49
 2481 01c4 13       		.uleb128 0x13
 2482 01c5 3F       		.uleb128 0x3f
 2483 01c6 19       		.uleb128 0x19
 2484 01c7 3C       		.uleb128 0x3c
 2485 01c8 19       		.uleb128 0x19
 2486 01c9 00       		.byte	0
 2487 01ca 00       		.byte	0
 2488 01cb 1B       		.uleb128 0x1b
 2489 01cc 35       		.uleb128 0x35
 2490 01cd 00       		.byte	0
 2491 01ce 49       		.uleb128 0x49
 2492 01cf 13       		.uleb128 0x13
 2493 01d0 00       		.byte	0
 2494 01d1 00       		.byte	0
 2495 01d2 1C       		.uleb128 0x1c
 2496 01d3 34       		.uleb128 0x34
 2497 01d4 00       		.byte	0
 2498 01d5 03       		.uleb128 0x3
 2499 01d6 08       		.uleb128 0x8
 2500 01d7 3A       		.uleb128 0x3a
 2501 01d8 0B       		.uleb128 0xb
 2502 01d9 3B       		.uleb128 0x3b
 2503 01da 0B       		.uleb128 0xb
 2504 01db 49       		.uleb128 0x49
 2505 01dc 13       		.uleb128 0x13
 2506 01dd 3F       		.uleb128 0x3f
 2507 01de 19       		.uleb128 0x19
 2508 01df 02       		.uleb128 0x2
 2509 01e0 18       		.uleb128 0x18
 2510 01e1 00       		.byte	0
 2511 01e2 00       		.byte	0
 2512 01e3 1D       		.uleb128 0x1d
 2513 01e4 34       		.uleb128 0x34
 2514 01e5 00       		.byte	0
 2515 01e6 03       		.uleb128 0x3
 2516 01e7 0E       		.uleb128 0xe
 2517 01e8 3A       		.uleb128 0x3a
 2518 01e9 0B       		.uleb128 0xb
 2519 01ea 3B       		.uleb128 0x3b
 2520 01eb 0B       		.uleb128 0xb
 2521 01ec 49       		.uleb128 0x49
 2522 01ed 13       		.uleb128 0x13
 2523 01ee 3F       		.uleb128 0x3f
 2524 01ef 19       		.uleb128 0x19
 2525 01f0 02       		.uleb128 0x2
 2526 01f1 18       		.uleb128 0x18
 2527 01f2 00       		.byte	0
 2528 01f3 00       		.byte	0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 53


 2529 01f4 1E       		.uleb128 0x1e
 2530 01f5 01       		.uleb128 0x1
 2531 01f6 01       		.byte	0x1
 2532 01f7 49       		.uleb128 0x49
 2533 01f8 13       		.uleb128 0x13
 2534 01f9 01       		.uleb128 0x1
 2535 01fa 13       		.uleb128 0x13
 2536 01fb 00       		.byte	0
 2537 01fc 00       		.byte	0
 2538 01fd 1F       		.uleb128 0x1f
 2539 01fe 21       		.uleb128 0x21
 2540 01ff 00       		.byte	0
 2541 0200 49       		.uleb128 0x49
 2542 0201 13       		.uleb128 0x13
 2543 0202 2F       		.uleb128 0x2f
 2544 0203 0B       		.uleb128 0xb
 2545 0204 00       		.byte	0
 2546 0205 00       		.byte	0
 2547 0206 00       		.byte	0
 2548              		.section	.debug_aranges,"",%progbits
 2549 0000 94000000 		.4byte	0x94
 2550 0004 0200     		.2byte	0x2
 2551 0006 00000000 		.4byte	.Ldebug_info0
 2552 000a 04       		.byte	0x4
 2553 000b 00       		.byte	0
 2554 000c 0000     		.2byte	0
 2555 000e 0000     		.2byte	0
 2556 0010 00000000 		.4byte	.LFB64
 2557 0014 C8000000 		.4byte	.LFE64-.LFB64
 2558 0018 00000000 		.4byte	.LFB65
 2559 001c 18000000 		.4byte	.LFE65-.LFB65
 2560 0020 00000000 		.4byte	.LFB66
 2561 0024 18000000 		.4byte	.LFE66-.LFB66
 2562 0028 00000000 		.4byte	.LFB67
 2563 002c 18000000 		.4byte	.LFE67-.LFB67
 2564 0030 00000000 		.4byte	.LFB68
 2565 0034 18000000 		.4byte	.LFE68-.LFB68
 2566 0038 00000000 		.4byte	.LFB69
 2567 003c 18000000 		.4byte	.LFE69-.LFB69
 2568 0040 00000000 		.4byte	.LFB70
 2569 0044 18000000 		.4byte	.LFE70-.LFB70
 2570 0048 00000000 		.4byte	.LFB71
 2571 004c 58000000 		.4byte	.LFE71-.LFB71
 2572 0050 00000000 		.4byte	.LFB72
 2573 0054 E0000000 		.4byte	.LFE72-.LFB72
 2574 0058 00000000 		.4byte	.LFB73
 2575 005c 6C000000 		.4byte	.LFE73-.LFB73
 2576 0060 00000000 		.4byte	.LFB74
 2577 0064 48000000 		.4byte	.LFE74-.LFB74
 2578 0068 00000000 		.4byte	.LFB75
 2579 006c 54000000 		.4byte	.LFE75-.LFB75
 2580 0070 00000000 		.4byte	.LFB76
 2581 0074 6C000000 		.4byte	.LFE76-.LFB76
 2582 0078 00000000 		.4byte	.LFB77
 2583 007c 3E000000 		.4byte	.LFE77-.LFB77
 2584 0080 00000000 		.4byte	.LFB78
 2585 0084 26000000 		.4byte	.LFE78-.LFB78
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 54


 2586 0088 00000000 		.4byte	.LFB79
 2587 008c C8000000 		.4byte	.LFE79-.LFB79
 2588 0090 00000000 		.4byte	0
 2589 0094 00000000 		.4byte	0
 2590              		.section	.debug_ranges,"",%progbits
 2591              	.Ldebug_ranges0:
 2592 0000 00000000 		.4byte	.LFB64
 2593 0004 C8000000 		.4byte	.LFE64
 2594 0008 00000000 		.4byte	.LFB65
 2595 000c 18000000 		.4byte	.LFE65
 2596 0010 00000000 		.4byte	.LFB66
 2597 0014 18000000 		.4byte	.LFE66
 2598 0018 00000000 		.4byte	.LFB67
 2599 001c 18000000 		.4byte	.LFE67
 2600 0020 00000000 		.4byte	.LFB68
 2601 0024 18000000 		.4byte	.LFE68
 2602 0028 00000000 		.4byte	.LFB69
 2603 002c 18000000 		.4byte	.LFE69
 2604 0030 00000000 		.4byte	.LFB70
 2605 0034 18000000 		.4byte	.LFE70
 2606 0038 00000000 		.4byte	.LFB71
 2607 003c 58000000 		.4byte	.LFE71
 2608 0040 00000000 		.4byte	.LFB72
 2609 0044 E0000000 		.4byte	.LFE72
 2610 0048 00000000 		.4byte	.LFB73
 2611 004c 6C000000 		.4byte	.LFE73
 2612 0050 00000000 		.4byte	.LFB74
 2613 0054 48000000 		.4byte	.LFE74
 2614 0058 00000000 		.4byte	.LFB75
 2615 005c 54000000 		.4byte	.LFE75
 2616 0060 00000000 		.4byte	.LFB76
 2617 0064 6C000000 		.4byte	.LFE76
 2618 0068 00000000 		.4byte	.LFB77
 2619 006c 3E000000 		.4byte	.LFE77
 2620 0070 00000000 		.4byte	.LFB78
 2621 0074 26000000 		.4byte	.LFE78
 2622 0078 00000000 		.4byte	.LFB79
 2623 007c C8000000 		.4byte	.LFE79
 2624 0080 00000000 		.4byte	0
 2625 0084 00000000 		.4byte	0
 2626              		.section	.debug_line,"",%progbits
 2627              	.Ldebug_line0:
 2628 0000 23030000 		.section	.debug_str,"MS",%progbits,1
 2628      02005601 
 2628      00000201 
 2628      FB0E0D00 
 2628      01010101 
 2629              	.LASF51:
 2630 0000 53365F44 		.ascii	"S6_DETECTED\000"
 2630      45544543 
 2630      54454400 
 2631              	.LASF60:
 2632 000c 75736250 		.ascii	"usbPutChar\000"
 2632      75744368 
 2632      617200
 2633              	.LASF40:
 2634 0017 5475726E 		.ascii	"TurnLeft\000"
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 55


 2634      4C656674 
 2634      00
 2635              	.LASF46:
 2636 0020 53315F44 		.ascii	"S1_DETECTED\000"
 2636      45544543 
 2636      54454400 
 2637              	.LASF64:
 2638 002c 74735F65 		.ascii	"ts_enc\000"
 2638      6E6300
 2639              	.LASF20:
 2640 0033 646F7562 		.ascii	"double\000"
 2640      6C6500
 2641              	.LASF73:
 2642 003a 666C6167 		.ascii	"flag_packet\000"
 2642      5F706163 
 2642      6B657400 
 2643              	.LASF41:
 2644 0046 53746F70 		.ascii	"StopToTurnRight\000"
 2644      546F5475 
 2644      726E5269 
 2644      67687400 
 2645              	.LASF70:
 2646 0056 666C6167 		.ascii	"flag_ts_speed\000"
 2646      5F74735F 
 2646      73706565 
 2646      6400
 2647              	.LASF34:
 2648 0064 67325F78 		.ascii	"g2_xpos\000"
 2648      706F7300 
 2649              	.LASF2:
 2650 006c 73686F72 		.ascii	"short int\000"
 2650      7420696E 
 2650      7400
 2651              	.LASF81:
 2652 0076 73797374 		.ascii	"system_state\000"
 2652      656D5F73 
 2652      74617465 
 2652      00
 2653              	.LASF10:
 2654 0083 73697A65 		.ascii	"sizetype\000"
 2654      74797065 
 2654      00
 2655              	.LASF93:
 2656 008c 44697265 		.ascii	"DirectionState\000"
 2656      6374696F 
 2656      6E537461 
 2656      746500
 2657              	.LASF80:
 2658 009b 75736242 		.ascii	"usbBuffer\000"
 2658      75666665 
 2658      7200
 2659              	.LASF89:
 2660 00a5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2660      43313120 
 2660      352E342E 
 2660      31203230 
 2660      31363036 
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 56


 2661 00d8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2661      20726576 
 2661      6973696F 
 2661      6E203233 
 2661      37373135 
 2662 010b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2662      66756E63 
 2662      74696F6E 
 2662      2D736563 
 2662      74696F6E 
 2663              	.LASF53:
 2664 0133 6D61696E 		.ascii	"main\000"
 2664      00
 2665              	.LASF49:
 2666 0138 53345F44 		.ascii	"S4_DETECTED\000"
 2666      45544543 
 2666      54454400 
 2667              	.LASF15:
 2668 0144 75696E74 		.ascii	"uint16\000"
 2668      313600
 2669              	.LASF22:
 2670 014b 696E6465 		.ascii	"index\000"
 2670      7800
 2671              	.LASF45:
 2672 0151 73706565 		.ascii	"speedTimer\000"
 2672      6454696D 
 2672      657200
 2673              	.LASF18:
 2674 015c 696E7431 		.ascii	"int16\000"
 2674      3600
 2675              	.LASF14:
 2676 0162 75696E74 		.ascii	"uint8\000"
 2676      3800
 2677              	.LASF33:
 2678 0168 67315F64 		.ascii	"g1_direction\000"
 2678      69726563 
 2678      74696F6E 
 2678      00
 2679              	.LASF78:
 2680 0175 6C696E65 		.ascii	"line\000"
 2680      00
 2681              	.LASF19:
 2682 017a 666C6F61 		.ascii	"float\000"
 2682      7400
 2683              	.LASF6:
 2684 0180 6C6F6E67 		.ascii	"long long int\000"
 2684      206C6F6E 
 2684      6720696E 
 2684      7400
 2685              	.LASF58:
 2686 018e 75736250 		.ascii	"usbPutString\000"
 2686      75745374 
 2686      72696E67 
 2686      00
 2687              	.LASF17:
 2688 019b 696E7438 		.ascii	"int8\000"
 2688      00
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 57


 2689              	.LASF69:
 2690 01a0 666C6167 		.ascii	"flag_ts_update\000"
 2690      5F74735F 
 2690      75706461 
 2690      746500
 2691              	.LASF35:
 2692 01af 67325F79 		.ascii	"g2_ypos\000"
 2692      706F7300 
 2693              	.LASF29:
 2694 01b7 67305F64 		.ascii	"g0_direction\000"
 2694      69726563 
 2694      74696F6E 
 2694      00
 2695              	.LASF26:
 2696 01c4 67305F78 		.ascii	"g0_xpos\000"
 2696      706F7300 
 2697              	.LASF4:
 2698 01cc 6C6F6E67 		.ascii	"long int\000"
 2698      20696E74 
 2698      00
 2699              	.LASF57:
 2700 01d5 43686563 		.ascii	"CheckSensorDirection\000"
 2700      6B53656E 
 2700      736F7244 
 2700      69726563 
 2700      74696F6E 
 2701              	.LASF47:
 2702 01ea 53325F44 		.ascii	"S2_DETECTED\000"
 2702      45544543 
 2702      54454400 
 2703              	.LASF82:
 2704 01f6 63757272 		.ascii	"currentDirection\000"
 2704      656E7444 
 2704      69726563 
 2704      74696F6E 
 2704      00
 2705              	.LASF71:
 2706 0207 666C6167 		.ascii	"flag_ts_display\000"
 2706      5F74735F 
 2706      64697370 
 2706      6C617900 
 2707              	.LASF72:
 2708 0217 666C6167 		.ascii	"flag_rx\000"
 2708      5F727800 
 2709              	.LASF1:
 2710 021f 756E7369 		.ascii	"unsigned char\000"
 2710      676E6564 
 2710      20636861 
 2710      7200
 2711              	.LASF83:
 2712 022d 746F7461 		.ascii	"totalMilliseconds\000"
 2712      6C4D696C 
 2712      6C697365 
 2712      636F6E64 
 2712      7300
 2713              	.LASF79:
 2714 023f 656E7472 		.ascii	"entry\000"
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 58


 2714      7900
 2715              	.LASF9:
 2716 0245 6C6F6E67 		.ascii	"long double\000"
 2716      20646F75 
 2716      626C6500 
 2717              	.LASF84:
 2718 0251 746F7461 		.ascii	"totalDistance\000"
 2718      6C446973 
 2718      74616E63 
 2718      6500
 2719              	.LASF88:
 2720 025f 6B656570 		.ascii	"keepLedOn\000"
 2720      4C65644F 
 2720      6E00
 2721              	.LASF28:
 2722 0269 67305F73 		.ascii	"g0_speed\000"
 2722      70656564 
 2722      00
 2723              	.LASF75:
 2724 0272 64617461 		.ascii	"dataready_flag\000"
 2724      72656164 
 2724      795F666C 
 2724      616700
 2725              	.LASF30:
 2726 0281 67315F78 		.ascii	"g1_xpos\000"
 2726      706F7300 
 2727              	.LASF0:
 2728 0289 7369676E 		.ascii	"signed char\000"
 2728      65642063 
 2728      68617200 
 2729              	.LASF13:
 2730 0295 696E7433 		.ascii	"int32_t\000"
 2730      325F7400 
 2731              	.LASF7:
 2732 029d 6C6F6E67 		.ascii	"long long unsigned int\000"
 2732      206C6F6E 
 2732      6720756E 
 2732      7369676E 
 2732      65642069 
 2733              	.LASF8:
 2734 02b4 756E7369 		.ascii	"unsigned int\000"
 2734      676E6564 
 2734      20696E74 
 2734      00
 2735              	.LASF87:
 2736 02c1 74696D65 		.ascii	"timerInt\000"
 2736      72496E74 
 2736      00
 2737              	.LASF74:
 2738 02ca 666C6167 		.ascii	"flag_KB_string\000"
 2738      5F4B425F 
 2738      73747269 
 2738      6E6700
 2739              	.LASF62:
 2740 02d9 75736242 		.ascii	"usbBufCount\000"
 2740      7566436F 
 2740      756E7400 
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 59


 2741              	.LASF56:
 2742 02e5 53657452 		.ascii	"SetRobotMovement\000"
 2742      6F626F74 
 2742      4D6F7665 
 2742      6D656E74 
 2742      00
 2743              	.LASF52:
 2744 02f6 54494D45 		.ascii	"TIMER_FINISH\000"
 2744      525F4649 
 2744      4E495348 
 2744      00
 2745              	.LASF36:
 2746 0303 67325F73 		.ascii	"g2_speed\000"
 2746      70656564 
 2746      00
 2747              	.LASF50:
 2748 030c 53355F44 		.ascii	"S5_DETECTED\000"
 2748      45544543 
 2748      54454400 
 2749              	.LASF3:
 2750 0318 73686F72 		.ascii	"short unsigned int\000"
 2750      7420756E 
 2750      7369676E 
 2750      65642069 
 2750      6E7400
 2751              	.LASF92:
 2752 032b 64617461 		.ascii	"data_main\000"
 2752      5F6D6169 
 2752      6E00
 2753              	.LASF55:
 2754 0335 52657365 		.ascii	"ResetSensorFlags\000"
 2754      7453656E 
 2754      736F7246 
 2754      6C616773 
 2754      00
 2755              	.LASF11:
 2756 0346 63686172 		.ascii	"char\000"
 2756      00
 2757              	.LASF38:
 2758 034b 466F7277 		.ascii	"Forward\000"
 2758      61726400 
 2759              	.LASF86:
 2760 0353 71756164 		.ascii	"quadDec2Count\000"
 2760      44656332 
 2760      436F756E 
 2760      7400
 2761              	.LASF31:
 2762 0361 67315F79 		.ascii	"g1_ypos\000"
 2762      706F7300 
 2763              	.LASF37:
 2764 0369 67325F64 		.ascii	"g2_direction\000"
 2764      69726563 
 2764      74696F6E 
 2764      00
 2765              	.LASF32:
 2766 0376 67315F73 		.ascii	"g1_speed\000"
 2766      70656564 
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 60


 2766      00
 2767              	.LASF77:
 2768 037f 64697370 		.ascii	"displaystring\000"
 2768      6C617973 
 2768      7472696E 
 2768      6700
 2769              	.LASF23:
 2770 038d 726F626F 		.ascii	"robot_xpos\000"
 2770      745F7870 
 2770      6F7300
 2771              	.LASF39:
 2772 0398 5475726E 		.ascii	"TurnRight\000"
 2772      52696768 
 2772      7400
 2773              	.LASF85:
 2774 03a2 62756666 		.ascii	"buffer\000"
 2774      657200
 2775              	.LASF16:
 2776 03a9 75696E74 		.ascii	"uint32\000"
 2776      333200
 2777              	.LASF90:
 2778 03b0 6D61696E 		.ascii	"main.c\000"
 2778      2E6300
 2779              	.LASF5:
 2780 03b7 6C6F6E67 		.ascii	"long unsigned int\000"
 2780      20756E73 
 2780      69676E65 
 2780      6420696E 
 2780      7400
 2781              	.LASF61:
 2782 03c9 75736253 		.ascii	"usbStarted\000"
 2782      74617274 
 2782      656400
 2783              	.LASF44:
 2784 03d4 556E6B6E 		.ascii	"Unknown\000"
 2784      6F776E00 
 2785              	.LASF48:
 2786 03dc 53335F44 		.ascii	"S3_DETECTED\000"
 2786      45544543 
 2786      54454400 
 2787              	.LASF66:
 2788 03e8 74735F73 		.ascii	"ts_speed\000"
 2788      70656564 
 2788      00
 2789              	.LASF59:
 2790 03f1 636F756E 		.ascii	"count\000"
 2790      7400
 2791              	.LASF68:
 2792 03f7 666C6167 		.ascii	"flag_ts_enc\000"
 2792      5F74735F 
 2792      656E6300 
 2793              	.LASF12:
 2794 0403 5F5F696E 		.ascii	"__int32_t\000"
 2794      7433325F 
 2794      7400
 2795              	.LASF43:
 2796 040d 53746F70 		.ascii	"Stop\000"
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 61


 2796      00
 2797              	.LASF27:
 2798 0412 67305F79 		.ascii	"g0_ypos\000"
 2798      706F7300 
 2799              	.LASF67:
 2800 041a 74735F64 		.ascii	"ts_display\000"
 2800      6973706C 
 2800      617900
 2801              	.LASF65:
 2802 0425 74735F75 		.ascii	"ts_update\000"
 2802      70646174 
 2802      6500
 2803              	.LASF95:
 2804 042f 68616E64 		.ascii	"handle_usb\000"
 2804      6C655F75 
 2804      736200
 2805              	.LASF94:
 2806 043a 71756164 		.ascii	"quadCountToRPM\000"
 2806      436F756E 
 2806      74546F52 
 2806      504D00
 2807              	.LASF76:
 2808 0449 666C6167 		.ascii	"flag_rf_transmission_active\000"
 2808      5F72665F 
 2808      7472616E 
 2808      736D6973 
 2808      73696F6E 
 2809              	.LASF24:
 2810 0465 726F626F 		.ascii	"robot_ypos\000"
 2810      745F7970 
 2810      6F7300
 2811              	.LASF63:
 2812 0470 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2812      52784275 
 2812      66666572 
 2812      00
 2813              	.LASF91:
 2814 047d 433A5C50 		.ascii	"C:\\Projects\\University\\301-Robot\\psoc student p"
 2814      726F6A65 
 2814      6374735C 
 2814      556E6976 
 2814      65727369 
 2815 04ac 61636B5C 		.ascii	"ack\\psoc_code_base\\CS301_Class.cydsn\000"
 2815      70736F63 
 2815      5F636F64 
 2815      655F6261 
 2815      73655C43 
 2816              	.LASF54:
 2817 04d1 64697265 		.ascii	"directionState\000"
 2817      6374696F 
 2817      6E537461 
 2817      746500
 2818              	.LASF21:
 2819 04e0 72737369 		.ascii	"rssi\000"
 2819      00
 2820              	.LASF25:
 2821 04e5 726F626F 		.ascii	"robot_orientation\000"
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\cckrAc6s.s 			page 62


 2821      745F6F72 
 2821      69656E74 
 2821      6174696F 
 2821      6E00
 2822              	.LASF42:
 2823 04f7 53746F70 		.ascii	"StopToTurnLeft\000"
 2823      546F5475 
 2823      726E4C65 
 2823      667400
 2824              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
