ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxgEsXI.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"movement.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	turnCount
  20              		.bss
  21              		.align	1
  22              		.type	turnCount, %object
  23              		.size	turnCount, 2
  24              	turnCount:
  25 0000 0000     		.space	2
  26              		.global	maxTurnCount
  27              		.data
  28              		.align	1
  29              		.type	maxTurnCount, %object
  30              		.size	maxTurnCount, 2
  31              	maxTurnCount:
  32 0000 1900     		.short	25
  33              		.section	.text.stopMoving,"ax",%progbits
  34              		.align	2
  35              		.global	stopMoving
  36              		.thumb
  37              		.thumb_func
  38              		.type	stopMoving, %function
  39              	stopMoving:
  40              	.LFB64:
  41              		.file 1 "movement.c"
   1:movement.c    **** /* ========================================
   2:movement.c    ****  *
   3:movement.c    ****  * Copyright YOUR COMPANY, THE YEAR
   4:movement.c    ****  * All Rights Reserved
   5:movement.c    ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:movement.c    ****  *
   7:movement.c    ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:movement.c    ****  * WHICH IS THE PROPERTY OF your company.
   9:movement.c    ****  *
  10:movement.c    ****  * ========================================
  11:movement.c    **** */
  12:movement.c    **** #include "project.h"
  13:movement.c    **** 
  14:movement.c    **** #include <stdio.h>
  15:movement.c    **** #include <string.h>
  16:movement.c    **** #include <stdlib.h>
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxgEsXI.s 			page 2


  17:movement.c    **** 
  18:movement.c    **** uint16 turnCount = 0;
  19:movement.c    **** uint16 maxTurnCount = 25; // clock counts for one complete 90 deg turn
  20:movement.c    **** 
  21:movement.c    **** // Direction/ Movement macros
  22:movement.c    **** //* ========================================
  23:movement.c    **** // stop moving
  24:movement.c    **** void stopMoving() {
  42              		.loc 1 24 0
  43              		.cfi_startproc
  44              		@ args = 0, pretend = 0, frame = 0
  45              		@ frame_needed = 1, uses_anonymous_args = 0
  46 0000 80B5     		push	{r7, lr}
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 00AF     		add	r7, sp, #0
  51              		.cfi_def_cfa_register 7
  25:movement.c    ****     PWM_1_WriteCompare(32768); // 50%
  52              		.loc 1 25 0
  53 0004 4FF40040 		mov	r0, #32768
  54 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
  26:movement.c    ****     PWM_2_WriteCompare(32768); // 50%
  55              		.loc 1 26 0
  56 000c 4FF40040 		mov	r0, #32768
  57 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
  27:movement.c    **** }
  58              		.loc 1 27 0
  59 0014 00BF     		nop
  60 0016 80BD     		pop	{r7, pc}
  61              		.cfi_endproc
  62              	.LFE64:
  63              		.size	stopMoving, .-stopMoving
  64              		.section	.text.rotationClockwise,"ax",%progbits
  65              		.align	2
  66              		.global	rotationClockwise
  67              		.thumb
  68              		.thumb_func
  69              		.type	rotationClockwise, %function
  70              	rotationClockwise:
  71              	.LFB65:
  28:movement.c    **** 
  29:movement.c    **** // rotate clockwise 90deg
  30:movement.c    **** void rotationClockwise() {
  72              		.loc 1 30 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 8
  75              		@ frame_needed = 1, uses_anonymous_args = 0
  76 0000 80B5     		push	{r7, lr}
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 82B0     		sub	sp, sp, #8
  81              		.cfi_def_cfa_offset 16
  82 0004 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  31:movement.c    ****     PWM_1_WriteCompare(42598); // 65%
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxgEsXI.s 			page 3


  84              		.loc 1 31 0
  85 0006 4AF26660 		movw	r0, #42598
  86 000a FFF7FEFF 		bl	PWM_1_WriteCompare
  32:movement.c    ****     PWM_2_WriteCompare(42598); // 65%
  87              		.loc 1 32 0
  88 000e 4AF26660 		movw	r0, #42598
  89 0012 FFF7FEFF 		bl	PWM_2_WriteCompare
  33:movement.c    ****     
  34:movement.c    ****     int quadPulseCount = 0;
  90              		.loc 1 34 0
  91 0016 0023     		movs	r3, #0
  92 0018 7B60     		str	r3, [r7, #4]
  35:movement.c    ****     QuadDec_M1_SetCounter(0);
  93              		.loc 1 35 0
  94 001a 0020     		movs	r0, #0
  95 001c FFF7FEFF 		bl	QuadDec_M1_SetCounter
  36:movement.c    ****     while(quadPulseCount < 110) {
  96              		.loc 1 36 0
  97 0020 03E0     		b	.L3
  98              	.L4:
  37:movement.c    ****         quadPulseCount = QuadDec_M1_GetCounter();
  99              		.loc 1 37 0
 100 0022 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 101 0026 0346     		mov	r3, r0
 102 0028 7B60     		str	r3, [r7, #4]
 103              	.L3:
  36:movement.c    ****     while(quadPulseCount < 110) {
 104              		.loc 1 36 0
 105 002a 7B68     		ldr	r3, [r7, #4]
 106 002c 6D2B     		cmp	r3, #109
 107 002e F8DD     		ble	.L4
  38:movement.c    ****     }
  39:movement.c    ****     QuadDec_M1_SetCounter(0);
 108              		.loc 1 39 0
 109 0030 0020     		movs	r0, #0
 110 0032 FFF7FEFF 		bl	QuadDec_M1_SetCounter
  40:movement.c    ****     //CyDelay(500); // change to quadrature encoder pulses, rather than time delay
  41:movement.c    ****     //stopMoving(); // stop movement, ready for next instruction
  42:movement.c    **** }
 111              		.loc 1 42 0
 112 0036 00BF     		nop
 113 0038 0837     		adds	r7, r7, #8
 114              		.cfi_def_cfa_offset 8
 115 003a BD46     		mov	sp, r7
 116              		.cfi_def_cfa_register 13
 117              		@ sp needed
 118 003c 80BD     		pop	{r7, pc}
 119              		.cfi_endproc
 120              	.LFE65:
 121              		.size	rotationClockwise, .-rotationClockwise
 122 003e 00BF     		.section	.text.rotationAntiClockwise,"ax",%progbits
 123              		.align	2
 124              		.global	rotationAntiClockwise
 125              		.thumb
 126              		.thumb_func
 127              		.type	rotationAntiClockwise, %function
 128              	rotationAntiClockwise:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxgEsXI.s 			page 4


 129              	.LFB66:
  43:movement.c    **** 
  44:movement.c    **** // rotate anticlockwise 90deg
  45:movement.c    **** void rotationAntiClockwise() {
 130              		.loc 1 45 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 8
 133              		@ frame_needed = 1, uses_anonymous_args = 0
 134 0000 80B5     		push	{r7, lr}
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 7, -8
 137              		.cfi_offset 14, -4
 138 0002 82B0     		sub	sp, sp, #8
 139              		.cfi_def_cfa_offset 16
 140 0004 00AF     		add	r7, sp, #0
 141              		.cfi_def_cfa_register 7
  46:movement.c    ****     PWM_1_WriteCompare(22937); // 35%
 142              		.loc 1 46 0
 143 0006 45F69910 		movw	r0, #22937
 144 000a FFF7FEFF 		bl	PWM_1_WriteCompare
  47:movement.c    ****     PWM_2_WriteCompare(22937); // 35%
 145              		.loc 1 47 0
 146 000e 45F69910 		movw	r0, #22937
 147 0012 FFF7FEFF 		bl	PWM_2_WriteCompare
  48:movement.c    ****     
  49:movement.c    ****     int quadPulseCount = 0;
 148              		.loc 1 49 0
 149 0016 0023     		movs	r3, #0
 150 0018 7B60     		str	r3, [r7, #4]
  50:movement.c    ****     QuadDec_M1_SetCounter(0);
 151              		.loc 1 50 0
 152 001a 0020     		movs	r0, #0
 153 001c FFF7FEFF 		bl	QuadDec_M1_SetCounter
  51:movement.c    ****     while(quadPulseCount > -105) {
 154              		.loc 1 51 0
 155 0020 03E0     		b	.L6
 156              	.L7:
  52:movement.c    ****         quadPulseCount = QuadDec_M1_GetCounter();  
 157              		.loc 1 52 0
 158 0022 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 159 0026 0346     		mov	r3, r0
 160 0028 7B60     		str	r3, [r7, #4]
 161              	.L6:
  51:movement.c    ****     while(quadPulseCount > -105) {
 162              		.loc 1 51 0
 163 002a 7B68     		ldr	r3, [r7, #4]
 164 002c 13F1680F 		cmn	r3, #104
 165 0030 F7DA     		bge	.L7
  53:movement.c    ****     }
  54:movement.c    ****     QuadDec_M1_SetCounter(0);
 166              		.loc 1 54 0
 167 0032 0020     		movs	r0, #0
 168 0034 FFF7FEFF 		bl	QuadDec_M1_SetCounter
  55:movement.c    ****     //CyDelay(500);
  56:movement.c    ****     //stopMoving(); // stop movement, ready for next instruction
  57:movement.c    **** }
 169              		.loc 1 57 0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxgEsXI.s 			page 5


 170 0038 00BF     		nop
 171 003a 0837     		adds	r7, r7, #8
 172              		.cfi_def_cfa_offset 8
 173 003c BD46     		mov	sp, r7
 174              		.cfi_def_cfa_register 13
 175              		@ sp needed
 176 003e 80BD     		pop	{r7, pc}
 177              		.cfi_endproc
 178              	.LFE66:
 179              		.size	rotationAntiClockwise, .-rotationAntiClockwise
 180              		.section	.text.keepRotatingClockwise,"ax",%progbits
 181              		.align	2
 182              		.global	keepRotatingClockwise
 183              		.thumb
 184              		.thumb_func
 185              		.type	keepRotatingClockwise, %function
 186              	keepRotatingClockwise:
 187              	.LFB67:
  58:movement.c    **** 
  59:movement.c    **** // keep rotating clockwise
  60:movement.c    **** // used for adjusting deviations
  61:movement.c    **** void keepRotatingClockwise() {
 188              		.loc 1 61 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 1, uses_anonymous_args = 0
 192 0000 80B5     		push	{r7, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 7, -8
 195              		.cfi_offset 14, -4
 196 0002 00AF     		add	r7, sp, #0
 197              		.cfi_def_cfa_register 7
  62:movement.c    ****     PWM_1_WriteCompare(36044); // 55%
 198              		.loc 1 62 0
 199 0004 48F6CC40 		movw	r0, #36044
 200 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
  63:movement.c    ****     PWM_2_WriteCompare(36044); // 55%
 201              		.loc 1 63 0
 202 000c 48F6CC40 		movw	r0, #36044
 203 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
  64:movement.c    ****     
  65:movement.c    **** }
 204              		.loc 1 65 0
 205 0014 00BF     		nop
 206 0016 80BD     		pop	{r7, pc}
 207              		.cfi_endproc
 208              	.LFE67:
 209              		.size	keepRotatingClockwise, .-keepRotatingClockwise
 210              		.section	.text.keepRotatingAntiClockwise,"ax",%progbits
 211              		.align	2
 212              		.global	keepRotatingAntiClockwise
 213              		.thumb
 214              		.thumb_func
 215              		.type	keepRotatingAntiClockwise, %function
 216              	keepRotatingAntiClockwise:
 217              	.LFB68:
  66:movement.c    **** 
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxgEsXI.s 			page 6


  67:movement.c    **** // keep rotating anticlockwise
  68:movement.c    **** // used for adjusting deviations
  69:movement.c    **** void keepRotatingAntiClockwise() {
 218              		.loc 1 69 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 1, uses_anonymous_args = 0
 222 0000 80B5     		push	{r7, lr}
 223              		.cfi_def_cfa_offset 8
 224              		.cfi_offset 7, -8
 225              		.cfi_offset 14, -4
 226 0002 00AF     		add	r7, sp, #0
 227              		.cfi_def_cfa_register 7
  70:movement.c    ****     PWM_1_WriteCompare(29491); // 45%
 228              		.loc 1 70 0
 229 0004 47F23330 		movw	r0, #29491
 230 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
  71:movement.c    ****     PWM_2_WriteCompare(29491); // 45%
 231              		.loc 1 71 0
 232 000c 47F23330 		movw	r0, #29491
 233 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
  72:movement.c    **** }
 234              		.loc 1 72 0
 235 0014 00BF     		nop
 236 0016 80BD     		pop	{r7, pc}
 237              		.cfi_endproc
 238              	.LFE68:
 239              		.size	keepRotatingAntiClockwise, .-keepRotatingAntiClockwise
 240              		.section	.text.moveForward,"ax",%progbits
 241              		.align	2
 242              		.global	moveForward
 243              		.thumb
 244              		.thumb_func
 245              		.type	moveForward, %function
 246              	moveForward:
 247              	.LFB69:
  73:movement.c    **** 
  74:movement.c    **** void moveForward() {
 248              		.loc 1 74 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 1, uses_anonymous_args = 0
 252 0000 80B5     		push	{r7, lr}
 253              		.cfi_def_cfa_offset 8
 254              		.cfi_offset 7, -8
 255              		.cfi_offset 14, -4
 256 0002 00AF     		add	r7, sp, #0
 257              		.cfi_def_cfa_register 7
  75:movement.c    ****     PWM_1_WriteCompare(42598); // 65%
 258              		.loc 1 75 0
 259 0004 4AF26660 		movw	r0, #42598
 260 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
  76:movement.c    ****     PWM_2_WriteCompare(22937); // 35%
 261              		.loc 1 76 0
 262 000c 45F69910 		movw	r0, #22937
 263 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
  77:movement.c    **** }
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxgEsXI.s 			page 7


 264              		.loc 1 77 0
 265 0014 00BF     		nop
 266 0016 80BD     		pop	{r7, pc}
 267              		.cfi_endproc
 268              	.LFE69:
 269              		.size	moveForward, .-moveForward
 270              		.section	.text.traverseLine,"ax",%progbits
 271              		.align	2
 272              		.global	traverseLine
 273              		.thumb
 274              		.thumb_func
 275              		.type	traverseLine, %function
 276              	traverseLine:
 277              	.LFB70:
  78:movement.c    **** 
  79:movement.c    **** void traverseLine() {
 278              		.loc 1 79 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 1, uses_anonymous_args = 0
 282              		@ link register save eliminated.
 283 0000 80B4     		push	{r7}
 284              		.cfi_def_cfa_offset 4
 285              		.cfi_offset 7, -4
 286 0002 00AF     		add	r7, sp, #0
 287              		.cfi_def_cfa_register 7
  80:movement.c    ****     // robot will run this code on a loop based on truth table 
  81:movement.c    ****     
  82:movement.c    ****     
  83:movement.c    **** }
 288              		.loc 1 83 0
 289 0004 00BF     		nop
 290 0006 BD46     		mov	sp, r7
 291              		.cfi_def_cfa_register 13
 292              		@ sp needed
 293 0008 80BC     		pop	{r7}
 294              		.cfi_restore 7
 295              		.cfi_def_cfa_offset 0
 296 000a 7047     		bx	lr
 297              		.cfi_endproc
 298              	.LFE70:
 299              		.size	traverseLine, .-traverseLine
 300              		.text
 301              	.Letext0:
 302              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 303              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 304              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 305              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 306              		.section	.debug_info,"",%progbits
 307              	.Ldebug_info0:
 308 0000 7D010000 		.4byte	0x17d
 309 0004 0400     		.2byte	0x4
 310 0006 00000000 		.4byte	.Ldebug_abbrev0
 311 000a 04       		.byte	0x4
 312 000b 01       		.uleb128 0x1
 313 000c 0B000000 		.4byte	.LASF28
 314 0010 0C       		.byte	0xc
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxgEsXI.s 			page 8


 315 0011 71010000 		.4byte	.LASF29
 316 0015 F3010000 		.4byte	.LASF30
 317 0019 00000000 		.4byte	.Ldebug_ranges0+0
 318 001d 00000000 		.4byte	0
 319 0021 00000000 		.4byte	.Ldebug_line0
 320 0025 02       		.uleb128 0x2
 321 0026 01       		.byte	0x1
 322 0027 06       		.byte	0x6
 323 0028 47020000 		.4byte	.LASF0
 324 002c 02       		.uleb128 0x2
 325 002d 01       		.byte	0x1
 326 002e 08       		.byte	0x8
 327 002f C3000000 		.4byte	.LASF1
 328 0033 02       		.uleb128 0x2
 329 0034 02       		.byte	0x2
 330 0035 05       		.byte	0x5
 331 0036 BE010000 		.4byte	.LASF2
 332 003a 02       		.uleb128 0x2
 333 003b 02       		.byte	0x2
 334 003c 07       		.byte	0x7
 335 003d E3000000 		.4byte	.LASF3
 336 0041 03       		.uleb128 0x3
 337 0042 99000000 		.4byte	.LASF9
 338 0046 02       		.byte	0x2
 339 0047 3F       		.byte	0x3f
 340 0048 4C000000 		.4byte	0x4c
 341 004c 02       		.uleb128 0x2
 342 004d 04       		.byte	0x4
 343 004e 05       		.byte	0x5
 344 004f DE010000 		.4byte	.LASF4
 345 0053 02       		.uleb128 0x2
 346 0054 04       		.byte	0x4
 347 0055 07       		.byte	0x7
 348 0056 D1000000 		.4byte	.LASF5
 349 005a 02       		.uleb128 0x2
 350 005b 08       		.byte	0x8
 351 005c 05       		.byte	0x5
 352 005d 8D010000 		.4byte	.LASF6
 353 0061 02       		.uleb128 0x2
 354 0062 08       		.byte	0x8
 355 0063 07       		.byte	0x7
 356 0064 4D010000 		.4byte	.LASF7
 357 0068 04       		.uleb128 0x4
 358 0069 04       		.byte	0x4
 359 006a 05       		.byte	0x5
 360 006b 696E7400 		.ascii	"int\000"
 361 006f 02       		.uleb128 0x2
 362 0070 04       		.byte	0x4
 363 0071 07       		.byte	0x7
 364 0072 36010000 		.4byte	.LASF8
 365 0076 03       		.uleb128 0x3
 366 0077 7C010000 		.4byte	.LASF10
 367 007b 03       		.byte	0x3
 368 007c 2C       		.byte	0x2c
 369 007d 41000000 		.4byte	0x41
 370 0081 05       		.uleb128 0x5
 371 0082 22010000 		.4byte	.LASF11
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxgEsXI.s 			page 9


 372 0086 04       		.byte	0x4
 373 0087 EA01     		.2byte	0x1ea
 374 0089 3A000000 		.4byte	0x3a
 375 008d 02       		.uleb128 0x2
 376 008e 04       		.byte	0x4
 377 008f 04       		.byte	0x4
 378 0090 BD000000 		.4byte	.LASF12
 379 0094 02       		.uleb128 0x2
 380 0095 08       		.byte	0x8
 381 0096 04       		.byte	0x4
 382 0097 1B010000 		.4byte	.LASF13
 383 009b 02       		.uleb128 0x2
 384 009c 01       		.byte	0x1
 385 009d 08       		.byte	0x8
 386 009e 9B010000 		.4byte	.LASF14
 387 00a2 02       		.uleb128 0x2
 388 00a3 08       		.byte	0x8
 389 00a4 04       		.byte	0x4
 390 00a5 E7010000 		.4byte	.LASF15
 391 00a9 02       		.uleb128 0x2
 392 00aa 04       		.byte	0x4
 393 00ab 07       		.byte	0x7
 394 00ac 84010000 		.4byte	.LASF16
 395 00b0 06       		.uleb128 0x6
 396 00b1 00000000 		.4byte	.LASF20
 397 00b5 01       		.byte	0x1
 398 00b6 18       		.byte	0x18
 399 00b7 00000000 		.4byte	.LFB64
 400 00bb 18000000 		.4byte	.LFE64-.LFB64
 401 00bf 01       		.uleb128 0x1
 402 00c0 9C       		.byte	0x9c
 403 00c1 07       		.uleb128 0x7
 404 00c2 AC010000 		.4byte	.LASF17
 405 00c6 01       		.byte	0x1
 406 00c7 1E       		.byte	0x1e
 407 00c8 00000000 		.4byte	.LFB65
 408 00cc 3E000000 		.4byte	.LFE65-.LFB65
 409 00d0 01       		.uleb128 0x1
 410 00d1 9C       		.byte	0x9c
 411 00d2 E5000000 		.4byte	0xe5
 412 00d6 08       		.uleb128 0x8
 413 00d7 0C010000 		.4byte	.LASF19
 414 00db 01       		.byte	0x1
 415 00dc 22       		.byte	0x22
 416 00dd 68000000 		.4byte	0x68
 417 00e1 02       		.uleb128 0x2
 418 00e2 91       		.byte	0x91
 419 00e3 74       		.sleb128 -12
 420 00e4 00       		.byte	0
 421 00e5 07       		.uleb128 0x7
 422 00e6 F6000000 		.4byte	.LASF18
 423 00ea 01       		.byte	0x1
 424 00eb 2D       		.byte	0x2d
 425 00ec 00000000 		.4byte	.LFB66
 426 00f0 40000000 		.4byte	.LFE66-.LFB66
 427 00f4 01       		.uleb128 0x1
 428 00f5 9C       		.byte	0x9c
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxgEsXI.s 			page 10


 429 00f6 09010000 		.4byte	0x109
 430 00fa 08       		.uleb128 0x8
 431 00fb 0C010000 		.4byte	.LASF19
 432 00ff 01       		.byte	0x1
 433 0100 31       		.byte	0x31
 434 0101 68000000 		.4byte	0x68
 435 0105 02       		.uleb128 0x2
 436 0106 91       		.byte	0x91
 437 0107 74       		.sleb128 -12
 438 0108 00       		.byte	0
 439 0109 06       		.uleb128 0x6
 440 010a C8010000 		.4byte	.LASF21
 441 010e 01       		.byte	0x1
 442 010f 3D       		.byte	0x3d
 443 0110 00000000 		.4byte	.LFB67
 444 0114 18000000 		.4byte	.LFE67-.LFB67
 445 0118 01       		.uleb128 0x1
 446 0119 9C       		.byte	0x9c
 447 011a 06       		.uleb128 0x6
 448 011b A3000000 		.4byte	.LASF22
 449 011f 01       		.byte	0x1
 450 0120 45       		.byte	0x45
 451 0121 00000000 		.4byte	.LFB68
 452 0125 18000000 		.4byte	.LFE68-.LFB68
 453 0129 01       		.uleb128 0x1
 454 012a 9C       		.byte	0x9c
 455 012b 06       		.uleb128 0x6
 456 012c A0010000 		.4byte	.LASF23
 457 0130 01       		.byte	0x1
 458 0131 4A       		.byte	0x4a
 459 0132 00000000 		.4byte	.LFB69
 460 0136 18000000 		.4byte	.LFE69-.LFB69
 461 013a 01       		.uleb128 0x1
 462 013b 9C       		.byte	0x9c
 463 013c 09       		.uleb128 0x9
 464 013d 53020000 		.4byte	.LASF24
 465 0141 01       		.byte	0x1
 466 0142 4F       		.byte	0x4f
 467 0143 00000000 		.4byte	.LFB70
 468 0147 0C000000 		.4byte	.LFE70-.LFB70
 469 014b 01       		.uleb128 0x1
 470 014c 9C       		.byte	0x9c
 471 014d 0A       		.uleb128 0xa
 472 014e 29010000 		.4byte	.LASF25
 473 0152 05       		.byte	0x5
 474 0153 1207     		.2byte	0x712
 475 0155 59010000 		.4byte	0x159
 476 0159 0B       		.uleb128 0xb
 477 015a 76000000 		.4byte	0x76
 478 015e 0C       		.uleb128 0xc
 479 015f 43010000 		.4byte	.LASF26
 480 0163 01       		.byte	0x1
 481 0164 12       		.byte	0x12
 482 0165 81000000 		.4byte	0x81
 483 0169 05       		.uleb128 0x5
 484 016a 03       		.byte	0x3
 485 016b 00000000 		.4byte	turnCount
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxgEsXI.s 			page 11


 486 016f 0C       		.uleb128 0xc
 487 0170 64010000 		.4byte	.LASF27
 488 0174 01       		.byte	0x1
 489 0175 13       		.byte	0x13
 490 0176 81000000 		.4byte	0x81
 491 017a 05       		.uleb128 0x5
 492 017b 03       		.byte	0x3
 493 017c 00000000 		.4byte	maxTurnCount
 494 0180 00       		.byte	0
 495              		.section	.debug_abbrev,"",%progbits
 496              	.Ldebug_abbrev0:
 497 0000 01       		.uleb128 0x1
 498 0001 11       		.uleb128 0x11
 499 0002 01       		.byte	0x1
 500 0003 25       		.uleb128 0x25
 501 0004 0E       		.uleb128 0xe
 502 0005 13       		.uleb128 0x13
 503 0006 0B       		.uleb128 0xb
 504 0007 03       		.uleb128 0x3
 505 0008 0E       		.uleb128 0xe
 506 0009 1B       		.uleb128 0x1b
 507 000a 0E       		.uleb128 0xe
 508 000b 55       		.uleb128 0x55
 509 000c 17       		.uleb128 0x17
 510 000d 11       		.uleb128 0x11
 511 000e 01       		.uleb128 0x1
 512 000f 10       		.uleb128 0x10
 513 0010 17       		.uleb128 0x17
 514 0011 00       		.byte	0
 515 0012 00       		.byte	0
 516 0013 02       		.uleb128 0x2
 517 0014 24       		.uleb128 0x24
 518 0015 00       		.byte	0
 519 0016 0B       		.uleb128 0xb
 520 0017 0B       		.uleb128 0xb
 521 0018 3E       		.uleb128 0x3e
 522 0019 0B       		.uleb128 0xb
 523 001a 03       		.uleb128 0x3
 524 001b 0E       		.uleb128 0xe
 525 001c 00       		.byte	0
 526 001d 00       		.byte	0
 527 001e 03       		.uleb128 0x3
 528 001f 16       		.uleb128 0x16
 529 0020 00       		.byte	0
 530 0021 03       		.uleb128 0x3
 531 0022 0E       		.uleb128 0xe
 532 0023 3A       		.uleb128 0x3a
 533 0024 0B       		.uleb128 0xb
 534 0025 3B       		.uleb128 0x3b
 535 0026 0B       		.uleb128 0xb
 536 0027 49       		.uleb128 0x49
 537 0028 13       		.uleb128 0x13
 538 0029 00       		.byte	0
 539 002a 00       		.byte	0
 540 002b 04       		.uleb128 0x4
 541 002c 24       		.uleb128 0x24
 542 002d 00       		.byte	0
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxgEsXI.s 			page 12


 543 002e 0B       		.uleb128 0xb
 544 002f 0B       		.uleb128 0xb
 545 0030 3E       		.uleb128 0x3e
 546 0031 0B       		.uleb128 0xb
 547 0032 03       		.uleb128 0x3
 548 0033 08       		.uleb128 0x8
 549 0034 00       		.byte	0
 550 0035 00       		.byte	0
 551 0036 05       		.uleb128 0x5
 552 0037 16       		.uleb128 0x16
 553 0038 00       		.byte	0
 554 0039 03       		.uleb128 0x3
 555 003a 0E       		.uleb128 0xe
 556 003b 3A       		.uleb128 0x3a
 557 003c 0B       		.uleb128 0xb
 558 003d 3B       		.uleb128 0x3b
 559 003e 05       		.uleb128 0x5
 560 003f 49       		.uleb128 0x49
 561 0040 13       		.uleb128 0x13
 562 0041 00       		.byte	0
 563 0042 00       		.byte	0
 564 0043 06       		.uleb128 0x6
 565 0044 2E       		.uleb128 0x2e
 566 0045 00       		.byte	0
 567 0046 3F       		.uleb128 0x3f
 568 0047 19       		.uleb128 0x19
 569 0048 03       		.uleb128 0x3
 570 0049 0E       		.uleb128 0xe
 571 004a 3A       		.uleb128 0x3a
 572 004b 0B       		.uleb128 0xb
 573 004c 3B       		.uleb128 0x3b
 574 004d 0B       		.uleb128 0xb
 575 004e 11       		.uleb128 0x11
 576 004f 01       		.uleb128 0x1
 577 0050 12       		.uleb128 0x12
 578 0051 06       		.uleb128 0x6
 579 0052 40       		.uleb128 0x40
 580 0053 18       		.uleb128 0x18
 581 0054 9642     		.uleb128 0x2116
 582 0056 19       		.uleb128 0x19
 583 0057 00       		.byte	0
 584 0058 00       		.byte	0
 585 0059 07       		.uleb128 0x7
 586 005a 2E       		.uleb128 0x2e
 587 005b 01       		.byte	0x1
 588 005c 3F       		.uleb128 0x3f
 589 005d 19       		.uleb128 0x19
 590 005e 03       		.uleb128 0x3
 591 005f 0E       		.uleb128 0xe
 592 0060 3A       		.uleb128 0x3a
 593 0061 0B       		.uleb128 0xb
 594 0062 3B       		.uleb128 0x3b
 595 0063 0B       		.uleb128 0xb
 596 0064 11       		.uleb128 0x11
 597 0065 01       		.uleb128 0x1
 598 0066 12       		.uleb128 0x12
 599 0067 06       		.uleb128 0x6
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxgEsXI.s 			page 13


 600 0068 40       		.uleb128 0x40
 601 0069 18       		.uleb128 0x18
 602 006a 9642     		.uleb128 0x2116
 603 006c 19       		.uleb128 0x19
 604 006d 01       		.uleb128 0x1
 605 006e 13       		.uleb128 0x13
 606 006f 00       		.byte	0
 607 0070 00       		.byte	0
 608 0071 08       		.uleb128 0x8
 609 0072 34       		.uleb128 0x34
 610 0073 00       		.byte	0
 611 0074 03       		.uleb128 0x3
 612 0075 0E       		.uleb128 0xe
 613 0076 3A       		.uleb128 0x3a
 614 0077 0B       		.uleb128 0xb
 615 0078 3B       		.uleb128 0x3b
 616 0079 0B       		.uleb128 0xb
 617 007a 49       		.uleb128 0x49
 618 007b 13       		.uleb128 0x13
 619 007c 02       		.uleb128 0x2
 620 007d 18       		.uleb128 0x18
 621 007e 00       		.byte	0
 622 007f 00       		.byte	0
 623 0080 09       		.uleb128 0x9
 624 0081 2E       		.uleb128 0x2e
 625 0082 00       		.byte	0
 626 0083 3F       		.uleb128 0x3f
 627 0084 19       		.uleb128 0x19
 628 0085 03       		.uleb128 0x3
 629 0086 0E       		.uleb128 0xe
 630 0087 3A       		.uleb128 0x3a
 631 0088 0B       		.uleb128 0xb
 632 0089 3B       		.uleb128 0x3b
 633 008a 0B       		.uleb128 0xb
 634 008b 11       		.uleb128 0x11
 635 008c 01       		.uleb128 0x1
 636 008d 12       		.uleb128 0x12
 637 008e 06       		.uleb128 0x6
 638 008f 40       		.uleb128 0x40
 639 0090 18       		.uleb128 0x18
 640 0091 9742     		.uleb128 0x2117
 641 0093 19       		.uleb128 0x19
 642 0094 00       		.byte	0
 643 0095 00       		.byte	0
 644 0096 0A       		.uleb128 0xa
 645 0097 34       		.uleb128 0x34
 646 0098 00       		.byte	0
 647 0099 03       		.uleb128 0x3
 648 009a 0E       		.uleb128 0xe
 649 009b 3A       		.uleb128 0x3a
 650 009c 0B       		.uleb128 0xb
 651 009d 3B       		.uleb128 0x3b
 652 009e 05       		.uleb128 0x5
 653 009f 49       		.uleb128 0x49
 654 00a0 13       		.uleb128 0x13
 655 00a1 3F       		.uleb128 0x3f
 656 00a2 19       		.uleb128 0x19
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxgEsXI.s 			page 14


 657 00a3 3C       		.uleb128 0x3c
 658 00a4 19       		.uleb128 0x19
 659 00a5 00       		.byte	0
 660 00a6 00       		.byte	0
 661 00a7 0B       		.uleb128 0xb
 662 00a8 35       		.uleb128 0x35
 663 00a9 00       		.byte	0
 664 00aa 49       		.uleb128 0x49
 665 00ab 13       		.uleb128 0x13
 666 00ac 00       		.byte	0
 667 00ad 00       		.byte	0
 668 00ae 0C       		.uleb128 0xc
 669 00af 34       		.uleb128 0x34
 670 00b0 00       		.byte	0
 671 00b1 03       		.uleb128 0x3
 672 00b2 0E       		.uleb128 0xe
 673 00b3 3A       		.uleb128 0x3a
 674 00b4 0B       		.uleb128 0xb
 675 00b5 3B       		.uleb128 0x3b
 676 00b6 0B       		.uleb128 0xb
 677 00b7 49       		.uleb128 0x49
 678 00b8 13       		.uleb128 0x13
 679 00b9 3F       		.uleb128 0x3f
 680 00ba 19       		.uleb128 0x19
 681 00bb 02       		.uleb128 0x2
 682 00bc 18       		.uleb128 0x18
 683 00bd 00       		.byte	0
 684 00be 00       		.byte	0
 685 00bf 00       		.byte	0
 686              		.section	.debug_aranges,"",%progbits
 687 0000 4C000000 		.4byte	0x4c
 688 0004 0200     		.2byte	0x2
 689 0006 00000000 		.4byte	.Ldebug_info0
 690 000a 04       		.byte	0x4
 691 000b 00       		.byte	0
 692 000c 0000     		.2byte	0
 693 000e 0000     		.2byte	0
 694 0010 00000000 		.4byte	.LFB64
 695 0014 18000000 		.4byte	.LFE64-.LFB64
 696 0018 00000000 		.4byte	.LFB65
 697 001c 3E000000 		.4byte	.LFE65-.LFB65
 698 0020 00000000 		.4byte	.LFB66
 699 0024 40000000 		.4byte	.LFE66-.LFB66
 700 0028 00000000 		.4byte	.LFB67
 701 002c 18000000 		.4byte	.LFE67-.LFB67
 702 0030 00000000 		.4byte	.LFB68
 703 0034 18000000 		.4byte	.LFE68-.LFB68
 704 0038 00000000 		.4byte	.LFB69
 705 003c 18000000 		.4byte	.LFE69-.LFB69
 706 0040 00000000 		.4byte	.LFB70
 707 0044 0C000000 		.4byte	.LFE70-.LFB70
 708 0048 00000000 		.4byte	0
 709 004c 00000000 		.4byte	0
 710              		.section	.debug_ranges,"",%progbits
 711              	.Ldebug_ranges0:
 712 0000 00000000 		.4byte	.LFB64
 713 0004 18000000 		.4byte	.LFE64
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxgEsXI.s 			page 15


 714 0008 00000000 		.4byte	.LFB65
 715 000c 3E000000 		.4byte	.LFE65
 716 0010 00000000 		.4byte	.LFB66
 717 0014 40000000 		.4byte	.LFE66
 718 0018 00000000 		.4byte	.LFB67
 719 001c 18000000 		.4byte	.LFE67
 720 0020 00000000 		.4byte	.LFB68
 721 0024 18000000 		.4byte	.LFE68
 722 0028 00000000 		.4byte	.LFB69
 723 002c 18000000 		.4byte	.LFE69
 724 0030 00000000 		.4byte	.LFB70
 725 0034 0C000000 		.4byte	.LFE70
 726 0038 00000000 		.4byte	0
 727 003c 00000000 		.4byte	0
 728              		.section	.debug_line,"",%progbits
 729              	.Ldebug_line0:
 730 0000 E1010000 		.section	.debug_str,"MS",%progbits,1
 730      02005001 
 730      00000201 
 730      FB0E0D00 
 730      01010101 
 731              	.LASF20:
 732 0000 73746F70 		.ascii	"stopMoving\000"
 732      4D6F7669 
 732      6E6700
 733              	.LASF28:
 734 000b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 734      43313120 
 734      352E342E 
 734      31203230 
 734      31363036 
 735 003e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 735      20726576 
 735      6973696F 
 735      6E203233 
 735      37373135 
 736 0071 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 736      66756E63 
 736      74696F6E 
 736      2D736563 
 736      74696F6E 
 737              	.LASF9:
 738 0099 5F5F696E 		.ascii	"__int32_t\000"
 738      7433325F 
 738      7400
 739              	.LASF22:
 740 00a3 6B656570 		.ascii	"keepRotatingAntiClockwise\000"
 740      526F7461 
 740      74696E67 
 740      416E7469 
 740      436C6F63 
 741              	.LASF12:
 742 00bd 666C6F61 		.ascii	"float\000"
 742      7400
 743              	.LASF1:
 744 00c3 756E7369 		.ascii	"unsigned char\000"
 744      676E6564 
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxgEsXI.s 			page 16


 744      20636861 
 744      7200
 745              	.LASF5:
 746 00d1 6C6F6E67 		.ascii	"long unsigned int\000"
 746      20756E73 
 746      69676E65 
 746      6420696E 
 746      7400
 747              	.LASF3:
 748 00e3 73686F72 		.ascii	"short unsigned int\000"
 748      7420756E 
 748      7369676E 
 748      65642069 
 748      6E7400
 749              	.LASF18:
 750 00f6 726F7461 		.ascii	"rotationAntiClockwise\000"
 750      74696F6E 
 750      416E7469 
 750      436C6F63 
 750      6B776973 
 751              	.LASF19:
 752 010c 71756164 		.ascii	"quadPulseCount\000"
 752      50756C73 
 752      65436F75 
 752      6E7400
 753              	.LASF13:
 754 011b 646F7562 		.ascii	"double\000"
 754      6C6500
 755              	.LASF11:
 756 0122 75696E74 		.ascii	"uint16\000"
 756      313600
 757              	.LASF25:
 758 0129 49544D5F 		.ascii	"ITM_RxBuffer\000"
 758      52784275 
 758      66666572 
 758      00
 759              	.LASF8:
 760 0136 756E7369 		.ascii	"unsigned int\000"
 760      676E6564 
 760      20696E74 
 760      00
 761              	.LASF26:
 762 0143 7475726E 		.ascii	"turnCount\000"
 762      436F756E 
 762      7400
 763              	.LASF7:
 764 014d 6C6F6E67 		.ascii	"long long unsigned int\000"
 764      206C6F6E 
 764      6720756E 
 764      7369676E 
 764      65642069 
 765              	.LASF27:
 766 0164 6D617854 		.ascii	"maxTurnCount\000"
 766      75726E43 
 766      6F756E74 
 766      00
 767              	.LASF29:
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxgEsXI.s 			page 17


 768 0171 6D6F7665 		.ascii	"movement.c\000"
 768      6D656E74 
 768      2E6300
 769              	.LASF10:
 770 017c 696E7433 		.ascii	"int32_t\000"
 770      325F7400 
 771              	.LASF16:
 772 0184 73697A65 		.ascii	"sizetype\000"
 772      74797065 
 772      00
 773              	.LASF6:
 774 018d 6C6F6E67 		.ascii	"long long int\000"
 774      206C6F6E 
 774      6720696E 
 774      7400
 775              	.LASF14:
 776 019b 63686172 		.ascii	"char\000"
 776      00
 777              	.LASF23:
 778 01a0 6D6F7665 		.ascii	"moveForward\000"
 778      466F7277 
 778      61726400 
 779              	.LASF17:
 780 01ac 726F7461 		.ascii	"rotationClockwise\000"
 780      74696F6E 
 780      436C6F63 
 780      6B776973 
 780      6500
 781              	.LASF2:
 782 01be 73686F72 		.ascii	"short int\000"
 782      7420696E 
 782      7400
 783              	.LASF21:
 784 01c8 6B656570 		.ascii	"keepRotatingClockwise\000"
 784      526F7461 
 784      74696E67 
 784      436C6F63 
 784      6B776973 
 785              	.LASF4:
 786 01de 6C6F6E67 		.ascii	"long int\000"
 786      20696E74 
 786      00
 787              	.LASF15:
 788 01e7 6C6F6E67 		.ascii	"long double\000"
 788      20646F75 
 788      626C6500 
 789              	.LASF30:
 790 01f3 433A5C50 		.ascii	"C:\\Projects\\University\\301-Robot\\psoc student p"
 790      726F6A65 
 790      6374735C 
 790      556E6976 
 790      65727369 
 791 0222 61636B5C 		.ascii	"ack\\psoc_code_base\\CS301_Class.cydsn\000"
 791      70736F63 
 791      5F636F64 
 791      655F6261 
 791      73655C43 
ARM GAS  C:\Users\Jobsa\AppData\Local\Temp\ccxgEsXI.s 			page 18


 792              	.LASF0:
 793 0247 7369676E 		.ascii	"signed char\000"
 793      65642063 
 793      68617200 
 794              	.LASF24:
 795 0253 74726176 		.ascii	"traverseLine\000"
 795      65727365 
 795      4C696E65 
 795      00
 796              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
