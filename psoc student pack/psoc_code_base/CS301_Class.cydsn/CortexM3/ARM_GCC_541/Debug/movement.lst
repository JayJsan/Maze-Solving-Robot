ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjnEHTb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"movement.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	turnCount
  20              		.bss
  21              		.align	1
  22              		.type	turnCount, %object
  23              		.size	turnCount, 2
  24              	turnCount:
  25 0000 0000     		.space	2
  26              		.global	maxTurnCount
  27              		.data
  28              		.align	1
  29              		.type	maxTurnCount, %object
  30              		.size	maxTurnCount, 2
  31              	maxTurnCount:
  32 0000 1900     		.short	25
  33              		.section	.text.stopMoving,"ax",%progbits
  34              		.align	2
  35              		.global	stopMoving
  36              		.thumb
  37              		.thumb_func
  38              		.type	stopMoving, %function
  39              	stopMoving:
  40              	.LFB64:
  41              		.file 1 "movement.c"
   1:movement.c    **** /* ========================================
   2:movement.c    ****  *
   3:movement.c    ****  * Copyright YOUR COMPANY, THE YEAR
   4:movement.c    ****  * All Rights Reserved
   5:movement.c    ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:movement.c    ****  *
   7:movement.c    ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:movement.c    ****  * WHICH IS THE PROPERTY OF your company.
   9:movement.c    ****  *
  10:movement.c    ****  * ========================================
  11:movement.c    **** */
  12:movement.c    **** #include "project.h"
  13:movement.c    **** 
  14:movement.c    **** #include <stdio.h>
  15:movement.c    **** #include <string.h>
  16:movement.c    **** #include <stdlib.h>
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjnEHTb.s 			page 2


  17:movement.c    **** 
  18:movement.c    **** uint16 turnCount = 0;
  19:movement.c    **** uint16 maxTurnCount = 25; // clock counts for one complete 90 deg turn
  20:movement.c    **** 
  21:movement.c    **** // Direction/ Movement macros
  22:movement.c    **** //* ========================================
  23:movement.c    **** // stop moving
  24:movement.c    **** void stopMoving() {
  42              		.loc 1 24 0
  43              		.cfi_startproc
  44              		@ args = 0, pretend = 0, frame = 0
  45              		@ frame_needed = 1, uses_anonymous_args = 0
  46 0000 80B5     		push	{r7, lr}
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 00AF     		add	r7, sp, #0
  51              		.cfi_def_cfa_register 7
  25:movement.c    ****     PWM_1_WriteCompare(32768); // 50%
  52              		.loc 1 25 0
  53 0004 4FF40040 		mov	r0, #32768
  54 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
  26:movement.c    ****     PWM_2_WriteCompare(32768); // 50%
  55              		.loc 1 26 0
  56 000c 4FF40040 		mov	r0, #32768
  57 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
  27:movement.c    **** }
  58              		.loc 1 27 0
  59 0014 00BF     		nop
  60 0016 80BD     		pop	{r7, pc}
  61              		.cfi_endproc
  62              	.LFE64:
  63              		.size	stopMoving, .-stopMoving
  64              		.section	.text.moveForwardForSpecifiedCount,"ax",%progbits
  65              		.align	2
  66              		.global	moveForwardForSpecifiedCount
  67              		.thumb
  68              		.thumb_func
  69              		.type	moveForwardForSpecifiedCount, %function
  70              	moveForwardForSpecifiedCount:
  71              	.LFB65:
  28:movement.c    **** 
  29:movement.c    **** void moveForwardForSpecifiedCount() {
  72              		.loc 1 29 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 8
  75              		@ frame_needed = 1, uses_anonymous_args = 0
  76 0000 80B5     		push	{r7, lr}
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 82B0     		sub	sp, sp, #8
  81              		.cfi_def_cfa_offset 16
  82 0004 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  30:movement.c    ****     PWM_1_WriteCompare(42598); // 65%
  84              		.loc 1 30 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjnEHTb.s 			page 3


  85 0006 4AF26660 		movw	r0, #42598
  86 000a FFF7FEFF 		bl	PWM_1_WriteCompare
  31:movement.c    ****     PWM_2_WriteCompare(22937); // 35%
  87              		.loc 1 31 0
  88 000e 45F69910 		movw	r0, #22937
  89 0012 FFF7FEFF 		bl	PWM_2_WriteCompare
  32:movement.c    ****     
  33:movement.c    ****     int quadPulseCount = 0;
  90              		.loc 1 33 0
  91 0016 0023     		movs	r3, #0
  92 0018 7B60     		str	r3, [r7, #4]
  34:movement.c    ****     QuadDec_M1_SetCounter(0);
  93              		.loc 1 34 0
  94 001a 0020     		movs	r0, #0
  95 001c FFF7FEFF 		bl	QuadDec_M1_SetCounter
  35:movement.c    ****     while(quadPulseCount < 110) {
  96              		.loc 1 35 0
  97 0020 03E0     		b	.L3
  98              	.L4:
  36:movement.c    ****         quadPulseCount = QuadDec_M1_GetCounter();
  99              		.loc 1 36 0
 100 0022 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 101 0026 0346     		mov	r3, r0
 102 0028 7B60     		str	r3, [r7, #4]
 103              	.L3:
  35:movement.c    ****     while(quadPulseCount < 110) {
 104              		.loc 1 35 0
 105 002a 7B68     		ldr	r3, [r7, #4]
 106 002c 6D2B     		cmp	r3, #109
 107 002e F8DD     		ble	.L4
  37:movement.c    ****     }
  38:movement.c    ****     QuadDec_M1_SetCounter(0);
 108              		.loc 1 38 0
 109 0030 0020     		movs	r0, #0
 110 0032 FFF7FEFF 		bl	QuadDec_M1_SetCounter
  39:movement.c    **** }
 111              		.loc 1 39 0
 112 0036 00BF     		nop
 113 0038 0837     		adds	r7, r7, #8
 114              		.cfi_def_cfa_offset 8
 115 003a BD46     		mov	sp, r7
 116              		.cfi_def_cfa_register 13
 117              		@ sp needed
 118 003c 80BD     		pop	{r7, pc}
 119              		.cfi_endproc
 120              	.LFE65:
 121              		.size	moveForwardForSpecifiedCount, .-moveForwardForSpecifiedCount
 122 003e 00BF     		.section	.text.rotationClockwise,"ax",%progbits
 123              		.align	2
 124              		.global	rotationClockwise
 125              		.thumb
 126              		.thumb_func
 127              		.type	rotationClockwise, %function
 128              	rotationClockwise:
 129              	.LFB66:
  40:movement.c    **** 
  41:movement.c    **** // rotate clockwise 90deg
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjnEHTb.s 			page 4


  42:movement.c    **** void rotationClockwise() {
 130              		.loc 1 42 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 8
 133              		@ frame_needed = 1, uses_anonymous_args = 0
 134 0000 80B5     		push	{r7, lr}
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 7, -8
 137              		.cfi_offset 14, -4
 138 0002 82B0     		sub	sp, sp, #8
 139              		.cfi_def_cfa_offset 16
 140 0004 00AF     		add	r7, sp, #0
 141              		.cfi_def_cfa_register 7
  43:movement.c    ****     PWM_1_WriteCompare(42598); // 65%
 142              		.loc 1 43 0
 143 0006 4AF26660 		movw	r0, #42598
 144 000a FFF7FEFF 		bl	PWM_1_WriteCompare
  44:movement.c    ****     PWM_2_WriteCompare(42598); // 65%
 145              		.loc 1 44 0
 146 000e 4AF26660 		movw	r0, #42598
 147 0012 FFF7FEFF 		bl	PWM_2_WriteCompare
  45:movement.c    ****     
  46:movement.c    ****     int quadPulseCount = 0;
 148              		.loc 1 46 0
 149 0016 0023     		movs	r3, #0
 150 0018 7B60     		str	r3, [r7, #4]
  47:movement.c    ****     QuadDec_M1_SetCounter(0);
 151              		.loc 1 47 0
 152 001a 0020     		movs	r0, #0
 153 001c FFF7FEFF 		bl	QuadDec_M1_SetCounter
  48:movement.c    ****     while(quadPulseCount < 110) {
 154              		.loc 1 48 0
 155 0020 03E0     		b	.L6
 156              	.L7:
  49:movement.c    ****         quadPulseCount = QuadDec_M1_GetCounter();
 157              		.loc 1 49 0
 158 0022 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 159 0026 0346     		mov	r3, r0
 160 0028 7B60     		str	r3, [r7, #4]
 161              	.L6:
  48:movement.c    ****     while(quadPulseCount < 110) {
 162              		.loc 1 48 0
 163 002a 7B68     		ldr	r3, [r7, #4]
 164 002c 6D2B     		cmp	r3, #109
 165 002e F8DD     		ble	.L7
  50:movement.c    ****     }
  51:movement.c    ****     QuadDec_M1_SetCounter(0);
 166              		.loc 1 51 0
 167 0030 0020     		movs	r0, #0
 168 0032 FFF7FEFF 		bl	QuadDec_M1_SetCounter
  52:movement.c    ****     //CyDelay(500); // change to quadrature encoder pulses, rather than time delay
  53:movement.c    ****     //stopMoving(); // stop movement, ready for next instruction
  54:movement.c    **** }
 169              		.loc 1 54 0
 170 0036 00BF     		nop
 171 0038 0837     		adds	r7, r7, #8
 172              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjnEHTb.s 			page 5


 173 003a BD46     		mov	sp, r7
 174              		.cfi_def_cfa_register 13
 175              		@ sp needed
 176 003c 80BD     		pop	{r7, pc}
 177              		.cfi_endproc
 178              	.LFE66:
 179              		.size	rotationClockwise, .-rotationClockwise
 180 003e 00BF     		.section	.text.rotationAntiClockwise,"ax",%progbits
 181              		.align	2
 182              		.global	rotationAntiClockwise
 183              		.thumb
 184              		.thumb_func
 185              		.type	rotationAntiClockwise, %function
 186              	rotationAntiClockwise:
 187              	.LFB67:
  55:movement.c    **** 
  56:movement.c    **** // rotate anticlockwise 90deg- CHANGE TO NOT USE TIMER BUT SIMPLY CHECK FOR NEW CONDITIONS????
  57:movement.c    **** void rotationAntiClockwise() {
 188              		.loc 1 57 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 8
 191              		@ frame_needed = 1, uses_anonymous_args = 0
 192 0000 80B5     		push	{r7, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 7, -8
 195              		.cfi_offset 14, -4
 196 0002 82B0     		sub	sp, sp, #8
 197              		.cfi_def_cfa_offset 16
 198 0004 00AF     		add	r7, sp, #0
 199              		.cfi_def_cfa_register 7
  58:movement.c    ****     PWM_1_WriteCompare(22937); // 35%
 200              		.loc 1 58 0
 201 0006 45F69910 		movw	r0, #22937
 202 000a FFF7FEFF 		bl	PWM_1_WriteCompare
  59:movement.c    ****     PWM_2_WriteCompare(22937); // 35%
 203              		.loc 1 59 0
 204 000e 45F69910 		movw	r0, #22937
 205 0012 FFF7FEFF 		bl	PWM_2_WriteCompare
  60:movement.c    ****     
  61:movement.c    ****     int quadPulseCount = 0;
 206              		.loc 1 61 0
 207 0016 0023     		movs	r3, #0
 208 0018 7B60     		str	r3, [r7, #4]
  62:movement.c    ****     QuadDec_M1_SetCounter(0);
 209              		.loc 1 62 0
 210 001a 0020     		movs	r0, #0
 211 001c FFF7FEFF 		bl	QuadDec_M1_SetCounter
  63:movement.c    ****     while(quadPulseCount > -105) {
 212              		.loc 1 63 0
 213 0020 03E0     		b	.L9
 214              	.L10:
  64:movement.c    ****         quadPulseCount = QuadDec_M1_GetCounter();  
 215              		.loc 1 64 0
 216 0022 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 217 0026 0346     		mov	r3, r0
 218 0028 7B60     		str	r3, [r7, #4]
 219              	.L9:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjnEHTb.s 			page 6


  63:movement.c    ****     while(quadPulseCount > -105) {
 220              		.loc 1 63 0
 221 002a 7B68     		ldr	r3, [r7, #4]
 222 002c 13F1680F 		cmn	r3, #104
 223 0030 F7DA     		bge	.L10
  65:movement.c    ****     }
  66:movement.c    ****     QuadDec_M1_SetCounter(0);
 224              		.loc 1 66 0
 225 0032 0020     		movs	r0, #0
 226 0034 FFF7FEFF 		bl	QuadDec_M1_SetCounter
  67:movement.c    ****     //CyDelay(500);
  68:movement.c    ****     //stopMoving(); // stop movement, ready for next instruction
  69:movement.c    **** }
 227              		.loc 1 69 0
 228 0038 00BF     		nop
 229 003a 0837     		adds	r7, r7, #8
 230              		.cfi_def_cfa_offset 8
 231 003c BD46     		mov	sp, r7
 232              		.cfi_def_cfa_register 13
 233              		@ sp needed
 234 003e 80BD     		pop	{r7, pc}
 235              		.cfi_endproc
 236              	.LFE67:
 237              		.size	rotationAntiClockwise, .-rotationAntiClockwise
 238              		.section	.text.keepRotatingClockwise,"ax",%progbits
 239              		.align	2
 240              		.global	keepRotatingClockwise
 241              		.thumb
 242              		.thumb_func
 243              		.type	keepRotatingClockwise, %function
 244              	keepRotatingClockwise:
 245              	.LFB68:
  70:movement.c    **** 
  71:movement.c    **** // keep rotating clockwise
  72:movement.c    **** // used for adjusting deviations
  73:movement.c    **** void keepRotatingClockwise() {
 246              		.loc 1 73 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 1, uses_anonymous_args = 0
 250 0000 80B5     		push	{r7, lr}
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 7, -8
 253              		.cfi_offset 14, -4
 254 0002 00AF     		add	r7, sp, #0
 255              		.cfi_def_cfa_register 7
  74:movement.c    ****     PWM_1_WriteCompare(39321); // 60% -- Left wheel spins clockwise
 256              		.loc 1 74 0
 257 0004 49F69910 		movw	r0, #39321
 258 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
  75:movement.c    ****     PWM_2_WriteCompare(39321); // 40%
 259              		.loc 1 75 0
 260 000c 49F69910 		movw	r0, #39321
 261 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
  76:movement.c    ****     
  77:movement.c    **** }
 262              		.loc 1 77 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjnEHTb.s 			page 7


 263 0014 00BF     		nop
 264 0016 80BD     		pop	{r7, pc}
 265              		.cfi_endproc
 266              	.LFE68:
 267              		.size	keepRotatingClockwise, .-keepRotatingClockwise
 268              		.section	.text.keepRotatingAntiClockwise,"ax",%progbits
 269              		.align	2
 270              		.global	keepRotatingAntiClockwise
 271              		.thumb
 272              		.thumb_func
 273              		.type	keepRotatingAntiClockwise, %function
 274              	keepRotatingAntiClockwise:
 275              	.LFB69:
  78:movement.c    **** 
  79:movement.c    **** // keep rotating anticlockwise
  80:movement.c    **** // used for adjusting deviations
  81:movement.c    **** void keepRotatingAntiClockwise() {
 276              		.loc 1 81 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 1, uses_anonymous_args = 0
 280 0000 80B5     		push	{r7, lr}
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 7, -8
 283              		.cfi_offset 14, -4
 284 0002 00AF     		add	r7, sp, #0
 285              		.cfi_def_cfa_register 7
  82:movement.c    ****     LED_Write(~(LED_Read()));
 286              		.loc 1 82 0
 287 0004 FFF7FEFF 		bl	LED_Read
 288 0008 0346     		mov	r3, r0
 289 000a DB43     		mvns	r3, r3
 290 000c DBB2     		uxtb	r3, r3
 291 000e 1846     		mov	r0, r3
 292 0010 FFF7FEFF 		bl	LED_Write
  83:movement.c    ****     PWM_1_WriteCompare(26214); // 40% -- Left Wheel spins Clockwise
 293              		.loc 1 83 0
 294 0014 46F26660 		movw	r0, #26214
 295 0018 FFF7FEFF 		bl	PWM_1_WriteCompare
  84:movement.c    ****     PWM_2_WriteCompare(26214); // 40% -- Right wheel spins clockwise
 296              		.loc 1 84 0
 297 001c 46F26660 		movw	r0, #26214
 298 0020 FFF7FEFF 		bl	PWM_2_WriteCompare
  85:movement.c    ****     //PWM_1_WriteCompare(36044); // 55% -- Left Wheel spins Clockwise
  86:movement.c    ****     //PWM_2_WriteCompare(26214); // 40% -- Right wheel spins clockwise
  87:movement.c    **** }
 299              		.loc 1 87 0
 300 0024 00BF     		nop
 301 0026 80BD     		pop	{r7, pc}
 302              		.cfi_endproc
 303              	.LFE69:
 304              		.size	keepRotatingAntiClockwise, .-keepRotatingAntiClockwise
 305              		.section	.text.moveForward,"ax",%progbits
 306              		.align	2
 307              		.global	moveForward
 308              		.thumb
 309              		.thumb_func
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjnEHTb.s 			page 8


 310              		.type	moveForward, %function
 311              	moveForward:
 312              	.LFB70:
  88:movement.c    **** 
  89:movement.c    **** void moveForward() {
 313              		.loc 1 89 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 1, uses_anonymous_args = 0
 317 0000 80B5     		push	{r7, lr}
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 7, -8
 320              		.cfi_offset 14, -4
 321 0002 00AF     		add	r7, sp, #0
 322              		.cfi_def_cfa_register 7
  90:movement.c    ****     PWM_1_WriteCompare(42598); // 65% - Left Wheel Clockwise
 323              		.loc 1 90 0
 324 0004 4AF26660 		movw	r0, #42598
 325 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
  91:movement.c    ****     PWM_2_WriteCompare(22937); // 35% - Right Wheel Clockwise
 326              		.loc 1 91 0
 327 000c 45F69910 		movw	r0, #22937
 328 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
  92:movement.c    **** }
 329              		.loc 1 92 0
 330 0014 00BF     		nop
 331 0016 80BD     		pop	{r7, pc}
 332              		.cfi_endproc
 333              	.LFE70:
 334              		.size	moveForward, .-moveForward
 335              		.text
 336              	.Letext0:
 337              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 338              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 339              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 340              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 341              		.section	.debug_info,"",%progbits
 342              	.Ldebug_info0:
 343 0000 90010000 		.4byte	0x190
 344 0004 0400     		.2byte	0x4
 345 0006 00000000 		.4byte	.Ldebug_abbrev0
 346 000a 04       		.byte	0x4
 347 000b 01       		.uleb128 0x1
 348 000c 0B000000 		.4byte	.LASF28
 349 0010 0C       		.byte	0xc
 350 0011 F6010000 		.4byte	.LASF29
 351 0015 1B010000 		.4byte	.LASF30
 352 0019 00000000 		.4byte	.Ldebug_ranges0+0
 353 001d 00000000 		.4byte	0
 354 0021 00000000 		.4byte	.Ldebug_line0
 355 0025 02       		.uleb128 0x2
 356 0026 01       		.byte	0x1
 357 0027 06       		.byte	0x6
 358 0028 78020000 		.4byte	.LASF0
 359 002c 02       		.uleb128 0x2
 360 002d 01       		.byte	0x1
 361 002e 08       		.byte	0x8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjnEHTb.s 			page 9


 362 002f C3000000 		.4byte	.LASF1
 363 0033 02       		.uleb128 0x2
 364 0034 02       		.byte	0x2
 365 0035 05       		.byte	0x5
 366 0036 43020000 		.4byte	.LASF2
 367 003a 02       		.uleb128 0x2
 368 003b 02       		.byte	0x2
 369 003c 07       		.byte	0x7
 370 003d E3000000 		.4byte	.LASF3
 371 0041 03       		.uleb128 0x3
 372 0042 99000000 		.4byte	.LASF9
 373 0046 02       		.byte	0x2
 374 0047 3F       		.byte	0x3f
 375 0048 4C000000 		.4byte	0x4c
 376 004c 02       		.uleb128 0x2
 377 004d 04       		.byte	0x4
 378 004e 05       		.byte	0x5
 379 004f 63020000 		.4byte	.LASF4
 380 0053 02       		.uleb128 0x2
 381 0054 04       		.byte	0x4
 382 0055 07       		.byte	0x7
 383 0056 D1000000 		.4byte	.LASF5
 384 005a 02       		.uleb128 0x2
 385 005b 08       		.byte	0x8
 386 005c 05       		.byte	0x5
 387 005d 12020000 		.4byte	.LASF6
 388 0061 02       		.uleb128 0x2
 389 0062 08       		.byte	0x8
 390 0063 07       		.byte	0x7
 391 0064 D2010000 		.4byte	.LASF7
 392 0068 04       		.uleb128 0x4
 393 0069 04       		.byte	0x4
 394 006a 05       		.byte	0x5
 395 006b 696E7400 		.ascii	"int\000"
 396 006f 02       		.uleb128 0x2
 397 0070 04       		.byte	0x4
 398 0071 07       		.byte	0x7
 399 0072 BB010000 		.4byte	.LASF8
 400 0076 03       		.uleb128 0x3
 401 0077 01020000 		.4byte	.LASF10
 402 007b 03       		.byte	0x3
 403 007c 2C       		.byte	0x2c
 404 007d 41000000 		.4byte	0x41
 405 0081 05       		.uleb128 0x5
 406 0082 A7010000 		.4byte	.LASF11
 407 0086 04       		.byte	0x4
 408 0087 E801     		.2byte	0x1e8
 409 0089 3A000000 		.4byte	0x3a
 410 008d 02       		.uleb128 0x2
 411 008e 04       		.byte	0x4
 412 008f 04       		.byte	0x4
 413 0090 BD000000 		.4byte	.LASF12
 414 0094 02       		.uleb128 0x2
 415 0095 08       		.byte	0x8
 416 0096 04       		.byte	0x4
 417 0097 A0010000 		.4byte	.LASF13
 418 009b 02       		.uleb128 0x2
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjnEHTb.s 			page 10


 419 009c 01       		.byte	0x1
 420 009d 08       		.byte	0x8
 421 009e 20020000 		.4byte	.LASF14
 422 00a2 02       		.uleb128 0x2
 423 00a3 08       		.byte	0x8
 424 00a4 04       		.byte	0x4
 425 00a5 6C020000 		.4byte	.LASF15
 426 00a9 02       		.uleb128 0x2
 427 00aa 04       		.byte	0x4
 428 00ab 07       		.byte	0x7
 429 00ac 09020000 		.4byte	.LASF16
 430 00b0 06       		.uleb128 0x6
 431 00b1 00000000 		.4byte	.LASF21
 432 00b5 01       		.byte	0x1
 433 00b6 18       		.byte	0x18
 434 00b7 00000000 		.4byte	.LFB64
 435 00bb 18000000 		.4byte	.LFE64-.LFB64
 436 00bf 01       		.uleb128 0x1
 437 00c0 9C       		.byte	0x9c
 438 00c1 07       		.uleb128 0x7
 439 00c2 84020000 		.4byte	.LASF17
 440 00c6 01       		.byte	0x1
 441 00c7 1D       		.byte	0x1d
 442 00c8 00000000 		.4byte	.LFB65
 443 00cc 3E000000 		.4byte	.LFE65-.LFB65
 444 00d0 01       		.uleb128 0x1
 445 00d1 9C       		.byte	0x9c
 446 00d2 E5000000 		.4byte	0xe5
 447 00d6 08       		.uleb128 0x8
 448 00d7 0C010000 		.4byte	.LASF19
 449 00db 01       		.byte	0x1
 450 00dc 21       		.byte	0x21
 451 00dd 68000000 		.4byte	0x68
 452 00e1 02       		.uleb128 0x2
 453 00e2 91       		.byte	0x91
 454 00e3 74       		.sleb128 -12
 455 00e4 00       		.byte	0
 456 00e5 07       		.uleb128 0x7
 457 00e6 31020000 		.4byte	.LASF18
 458 00ea 01       		.byte	0x1
 459 00eb 2A       		.byte	0x2a
 460 00ec 00000000 		.4byte	.LFB66
 461 00f0 3E000000 		.4byte	.LFE66-.LFB66
 462 00f4 01       		.uleb128 0x1
 463 00f5 9C       		.byte	0x9c
 464 00f6 09010000 		.4byte	0x109
 465 00fa 08       		.uleb128 0x8
 466 00fb 0C010000 		.4byte	.LASF19
 467 00ff 01       		.byte	0x1
 468 0100 2E       		.byte	0x2e
 469 0101 68000000 		.4byte	0x68
 470 0105 02       		.uleb128 0x2
 471 0106 91       		.byte	0x91
 472 0107 74       		.sleb128 -12
 473 0108 00       		.byte	0
 474 0109 07       		.uleb128 0x7
 475 010a F6000000 		.4byte	.LASF20
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjnEHTb.s 			page 11


 476 010e 01       		.byte	0x1
 477 010f 39       		.byte	0x39
 478 0110 00000000 		.4byte	.LFB67
 479 0114 40000000 		.4byte	.LFE67-.LFB67
 480 0118 01       		.uleb128 0x1
 481 0119 9C       		.byte	0x9c
 482 011a 2D010000 		.4byte	0x12d
 483 011e 08       		.uleb128 0x8
 484 011f 0C010000 		.4byte	.LASF19
 485 0123 01       		.byte	0x1
 486 0124 3D       		.byte	0x3d
 487 0125 68000000 		.4byte	0x68
 488 0129 02       		.uleb128 0x2
 489 012a 91       		.byte	0x91
 490 012b 74       		.sleb128 -12
 491 012c 00       		.byte	0
 492 012d 06       		.uleb128 0x6
 493 012e 4D020000 		.4byte	.LASF22
 494 0132 01       		.byte	0x1
 495 0133 49       		.byte	0x49
 496 0134 00000000 		.4byte	.LFB68
 497 0138 18000000 		.4byte	.LFE68-.LFB68
 498 013c 01       		.uleb128 0x1
 499 013d 9C       		.byte	0x9c
 500 013e 06       		.uleb128 0x6
 501 013f A3000000 		.4byte	.LASF23
 502 0143 01       		.byte	0x1
 503 0144 51       		.byte	0x51
 504 0145 00000000 		.4byte	.LFB69
 505 0149 28000000 		.4byte	.LFE69-.LFB69
 506 014d 01       		.uleb128 0x1
 507 014e 9C       		.byte	0x9c
 508 014f 06       		.uleb128 0x6
 509 0150 25020000 		.4byte	.LASF24
 510 0154 01       		.byte	0x1
 511 0155 59       		.byte	0x59
 512 0156 00000000 		.4byte	.LFB70
 513 015a 18000000 		.4byte	.LFE70-.LFB70
 514 015e 01       		.uleb128 0x1
 515 015f 9C       		.byte	0x9c
 516 0160 09       		.uleb128 0x9
 517 0161 AE010000 		.4byte	.LASF25
 518 0165 05       		.byte	0x5
 519 0166 1207     		.2byte	0x712
 520 0168 6C010000 		.4byte	0x16c
 521 016c 0A       		.uleb128 0xa
 522 016d 76000000 		.4byte	0x76
 523 0171 0B       		.uleb128 0xb
 524 0172 C8010000 		.4byte	.LASF26
 525 0176 01       		.byte	0x1
 526 0177 12       		.byte	0x12
 527 0178 81000000 		.4byte	0x81
 528 017c 05       		.uleb128 0x5
 529 017d 03       		.byte	0x3
 530 017e 00000000 		.4byte	turnCount
 531 0182 0B       		.uleb128 0xb
 532 0183 E9010000 		.4byte	.LASF27
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjnEHTb.s 			page 12


 533 0187 01       		.byte	0x1
 534 0188 13       		.byte	0x13
 535 0189 81000000 		.4byte	0x81
 536 018d 05       		.uleb128 0x5
 537 018e 03       		.byte	0x3
 538 018f 00000000 		.4byte	maxTurnCount
 539 0193 00       		.byte	0
 540              		.section	.debug_abbrev,"",%progbits
 541              	.Ldebug_abbrev0:
 542 0000 01       		.uleb128 0x1
 543 0001 11       		.uleb128 0x11
 544 0002 01       		.byte	0x1
 545 0003 25       		.uleb128 0x25
 546 0004 0E       		.uleb128 0xe
 547 0005 13       		.uleb128 0x13
 548 0006 0B       		.uleb128 0xb
 549 0007 03       		.uleb128 0x3
 550 0008 0E       		.uleb128 0xe
 551 0009 1B       		.uleb128 0x1b
 552 000a 0E       		.uleb128 0xe
 553 000b 55       		.uleb128 0x55
 554 000c 17       		.uleb128 0x17
 555 000d 11       		.uleb128 0x11
 556 000e 01       		.uleb128 0x1
 557 000f 10       		.uleb128 0x10
 558 0010 17       		.uleb128 0x17
 559 0011 00       		.byte	0
 560 0012 00       		.byte	0
 561 0013 02       		.uleb128 0x2
 562 0014 24       		.uleb128 0x24
 563 0015 00       		.byte	0
 564 0016 0B       		.uleb128 0xb
 565 0017 0B       		.uleb128 0xb
 566 0018 3E       		.uleb128 0x3e
 567 0019 0B       		.uleb128 0xb
 568 001a 03       		.uleb128 0x3
 569 001b 0E       		.uleb128 0xe
 570 001c 00       		.byte	0
 571 001d 00       		.byte	0
 572 001e 03       		.uleb128 0x3
 573 001f 16       		.uleb128 0x16
 574 0020 00       		.byte	0
 575 0021 03       		.uleb128 0x3
 576 0022 0E       		.uleb128 0xe
 577 0023 3A       		.uleb128 0x3a
 578 0024 0B       		.uleb128 0xb
 579 0025 3B       		.uleb128 0x3b
 580 0026 0B       		.uleb128 0xb
 581 0027 49       		.uleb128 0x49
 582 0028 13       		.uleb128 0x13
 583 0029 00       		.byte	0
 584 002a 00       		.byte	0
 585 002b 04       		.uleb128 0x4
 586 002c 24       		.uleb128 0x24
 587 002d 00       		.byte	0
 588 002e 0B       		.uleb128 0xb
 589 002f 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjnEHTb.s 			page 13


 590 0030 3E       		.uleb128 0x3e
 591 0031 0B       		.uleb128 0xb
 592 0032 03       		.uleb128 0x3
 593 0033 08       		.uleb128 0x8
 594 0034 00       		.byte	0
 595 0035 00       		.byte	0
 596 0036 05       		.uleb128 0x5
 597 0037 16       		.uleb128 0x16
 598 0038 00       		.byte	0
 599 0039 03       		.uleb128 0x3
 600 003a 0E       		.uleb128 0xe
 601 003b 3A       		.uleb128 0x3a
 602 003c 0B       		.uleb128 0xb
 603 003d 3B       		.uleb128 0x3b
 604 003e 05       		.uleb128 0x5
 605 003f 49       		.uleb128 0x49
 606 0040 13       		.uleb128 0x13
 607 0041 00       		.byte	0
 608 0042 00       		.byte	0
 609 0043 06       		.uleb128 0x6
 610 0044 2E       		.uleb128 0x2e
 611 0045 00       		.byte	0
 612 0046 3F       		.uleb128 0x3f
 613 0047 19       		.uleb128 0x19
 614 0048 03       		.uleb128 0x3
 615 0049 0E       		.uleb128 0xe
 616 004a 3A       		.uleb128 0x3a
 617 004b 0B       		.uleb128 0xb
 618 004c 3B       		.uleb128 0x3b
 619 004d 0B       		.uleb128 0xb
 620 004e 11       		.uleb128 0x11
 621 004f 01       		.uleb128 0x1
 622 0050 12       		.uleb128 0x12
 623 0051 06       		.uleb128 0x6
 624 0052 40       		.uleb128 0x40
 625 0053 18       		.uleb128 0x18
 626 0054 9642     		.uleb128 0x2116
 627 0056 19       		.uleb128 0x19
 628 0057 00       		.byte	0
 629 0058 00       		.byte	0
 630 0059 07       		.uleb128 0x7
 631 005a 2E       		.uleb128 0x2e
 632 005b 01       		.byte	0x1
 633 005c 3F       		.uleb128 0x3f
 634 005d 19       		.uleb128 0x19
 635 005e 03       		.uleb128 0x3
 636 005f 0E       		.uleb128 0xe
 637 0060 3A       		.uleb128 0x3a
 638 0061 0B       		.uleb128 0xb
 639 0062 3B       		.uleb128 0x3b
 640 0063 0B       		.uleb128 0xb
 641 0064 11       		.uleb128 0x11
 642 0065 01       		.uleb128 0x1
 643 0066 12       		.uleb128 0x12
 644 0067 06       		.uleb128 0x6
 645 0068 40       		.uleb128 0x40
 646 0069 18       		.uleb128 0x18
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjnEHTb.s 			page 14


 647 006a 9642     		.uleb128 0x2116
 648 006c 19       		.uleb128 0x19
 649 006d 01       		.uleb128 0x1
 650 006e 13       		.uleb128 0x13
 651 006f 00       		.byte	0
 652 0070 00       		.byte	0
 653 0071 08       		.uleb128 0x8
 654 0072 34       		.uleb128 0x34
 655 0073 00       		.byte	0
 656 0074 03       		.uleb128 0x3
 657 0075 0E       		.uleb128 0xe
 658 0076 3A       		.uleb128 0x3a
 659 0077 0B       		.uleb128 0xb
 660 0078 3B       		.uleb128 0x3b
 661 0079 0B       		.uleb128 0xb
 662 007a 49       		.uleb128 0x49
 663 007b 13       		.uleb128 0x13
 664 007c 02       		.uleb128 0x2
 665 007d 18       		.uleb128 0x18
 666 007e 00       		.byte	0
 667 007f 00       		.byte	0
 668 0080 09       		.uleb128 0x9
 669 0081 34       		.uleb128 0x34
 670 0082 00       		.byte	0
 671 0083 03       		.uleb128 0x3
 672 0084 0E       		.uleb128 0xe
 673 0085 3A       		.uleb128 0x3a
 674 0086 0B       		.uleb128 0xb
 675 0087 3B       		.uleb128 0x3b
 676 0088 05       		.uleb128 0x5
 677 0089 49       		.uleb128 0x49
 678 008a 13       		.uleb128 0x13
 679 008b 3F       		.uleb128 0x3f
 680 008c 19       		.uleb128 0x19
 681 008d 3C       		.uleb128 0x3c
 682 008e 19       		.uleb128 0x19
 683 008f 00       		.byte	0
 684 0090 00       		.byte	0
 685 0091 0A       		.uleb128 0xa
 686 0092 35       		.uleb128 0x35
 687 0093 00       		.byte	0
 688 0094 49       		.uleb128 0x49
 689 0095 13       		.uleb128 0x13
 690 0096 00       		.byte	0
 691 0097 00       		.byte	0
 692 0098 0B       		.uleb128 0xb
 693 0099 34       		.uleb128 0x34
 694 009a 00       		.byte	0
 695 009b 03       		.uleb128 0x3
 696 009c 0E       		.uleb128 0xe
 697 009d 3A       		.uleb128 0x3a
 698 009e 0B       		.uleb128 0xb
 699 009f 3B       		.uleb128 0x3b
 700 00a0 0B       		.uleb128 0xb
 701 00a1 49       		.uleb128 0x49
 702 00a2 13       		.uleb128 0x13
 703 00a3 3F       		.uleb128 0x3f
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjnEHTb.s 			page 15


 704 00a4 19       		.uleb128 0x19
 705 00a5 02       		.uleb128 0x2
 706 00a6 18       		.uleb128 0x18
 707 00a7 00       		.byte	0
 708 00a8 00       		.byte	0
 709 00a9 00       		.byte	0
 710              		.section	.debug_aranges,"",%progbits
 711 0000 4C000000 		.4byte	0x4c
 712 0004 0200     		.2byte	0x2
 713 0006 00000000 		.4byte	.Ldebug_info0
 714 000a 04       		.byte	0x4
 715 000b 00       		.byte	0
 716 000c 0000     		.2byte	0
 717 000e 0000     		.2byte	0
 718 0010 00000000 		.4byte	.LFB64
 719 0014 18000000 		.4byte	.LFE64-.LFB64
 720 0018 00000000 		.4byte	.LFB65
 721 001c 3E000000 		.4byte	.LFE65-.LFB65
 722 0020 00000000 		.4byte	.LFB66
 723 0024 3E000000 		.4byte	.LFE66-.LFB66
 724 0028 00000000 		.4byte	.LFB67
 725 002c 40000000 		.4byte	.LFE67-.LFB67
 726 0030 00000000 		.4byte	.LFB68
 727 0034 18000000 		.4byte	.LFE68-.LFB68
 728 0038 00000000 		.4byte	.LFB69
 729 003c 28000000 		.4byte	.LFE69-.LFB69
 730 0040 00000000 		.4byte	.LFB70
 731 0044 18000000 		.4byte	.LFE70-.LFB70
 732 0048 00000000 		.4byte	0
 733 004c 00000000 		.4byte	0
 734              		.section	.debug_ranges,"",%progbits
 735              	.Ldebug_ranges0:
 736 0000 00000000 		.4byte	.LFB64
 737 0004 18000000 		.4byte	.LFE64
 738 0008 00000000 		.4byte	.LFB65
 739 000c 3E000000 		.4byte	.LFE65
 740 0010 00000000 		.4byte	.LFB66
 741 0014 3E000000 		.4byte	.LFE66
 742 0018 00000000 		.4byte	.LFB67
 743 001c 40000000 		.4byte	.LFE67
 744 0020 00000000 		.4byte	.LFB68
 745 0024 18000000 		.4byte	.LFE68
 746 0028 00000000 		.4byte	.LFB69
 747 002c 28000000 		.4byte	.LFE69
 748 0030 00000000 		.4byte	.LFB70
 749 0034 18000000 		.4byte	.LFE70
 750 0038 00000000 		.4byte	0
 751 003c 00000000 		.4byte	0
 752              		.section	.debug_line,"",%progbits
 753              	.Ldebug_line0:
 754 0000 EA010000 		.section	.debug_str,"MS",%progbits,1
 754      02005001 
 754      00000201 
 754      FB0E0D00 
 754      01010101 
 755              	.LASF21:
 756 0000 73746F70 		.ascii	"stopMoving\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjnEHTb.s 			page 16


 756      4D6F7669 
 756      6E6700
 757              	.LASF28:
 758 000b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 758      43313120 
 758      352E342E 
 758      31203230 
 758      31363036 
 759 003e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 759      20726576 
 759      6973696F 
 759      6E203233 
 759      37373135 
 760 0071 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 760      66756E63 
 760      74696F6E 
 760      2D736563 
 760      74696F6E 
 761              	.LASF9:
 762 0099 5F5F696E 		.ascii	"__int32_t\000"
 762      7433325F 
 762      7400
 763              	.LASF23:
 764 00a3 6B656570 		.ascii	"keepRotatingAntiClockwise\000"
 764      526F7461 
 764      74696E67 
 764      416E7469 
 764      436C6F63 
 765              	.LASF12:
 766 00bd 666C6F61 		.ascii	"float\000"
 766      7400
 767              	.LASF1:
 768 00c3 756E7369 		.ascii	"unsigned char\000"
 768      676E6564 
 768      20636861 
 768      7200
 769              	.LASF5:
 770 00d1 6C6F6E67 		.ascii	"long unsigned int\000"
 770      20756E73 
 770      69676E65 
 770      6420696E 
 770      7400
 771              	.LASF3:
 772 00e3 73686F72 		.ascii	"short unsigned int\000"
 772      7420756E 
 772      7369676E 
 772      65642069 
 772      6E7400
 773              	.LASF20:
 774 00f6 726F7461 		.ascii	"rotationAntiClockwise\000"
 774      74696F6E 
 774      416E7469 
 774      436C6F63 
 774      6B776973 
 775              	.LASF19:
 776 010c 71756164 		.ascii	"quadPulseCount\000"
 776      50756C73 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjnEHTb.s 			page 17


 776      65436F75 
 776      6E7400
 777              	.LASF30:
 778 011b 433A5C55 		.ascii	"C:\\Users\\ikui753\\OneDrive - The University of Au"
 778      73657273 
 778      5C696B75 
 778      69373533 
 778      5C4F6E65 
 779 014b 636B6C61 		.ascii	"ckland\\Documents\\GitHub\\301-Robot\\psoc student "
 779      6E645C44 
 779      6F63756D 
 779      656E7473 
 779      5C476974 
 780 017a 7061636B 		.ascii	"pack\\psoc_code_base\\CS301_Class.cydsn\000"
 780      5C70736F 
 780      635F636F 
 780      64655F62 
 780      6173655C 
 781              	.LASF13:
 782 01a0 646F7562 		.ascii	"double\000"
 782      6C6500
 783              	.LASF11:
 784 01a7 75696E74 		.ascii	"uint16\000"
 784      313600
 785              	.LASF25:
 786 01ae 49544D5F 		.ascii	"ITM_RxBuffer\000"
 786      52784275 
 786      66666572 
 786      00
 787              	.LASF8:
 788 01bb 756E7369 		.ascii	"unsigned int\000"
 788      676E6564 
 788      20696E74 
 788      00
 789              	.LASF26:
 790 01c8 7475726E 		.ascii	"turnCount\000"
 790      436F756E 
 790      7400
 791              	.LASF7:
 792 01d2 6C6F6E67 		.ascii	"long long unsigned int\000"
 792      206C6F6E 
 792      6720756E 
 792      7369676E 
 792      65642069 
 793              	.LASF27:
 794 01e9 6D617854 		.ascii	"maxTurnCount\000"
 794      75726E43 
 794      6F756E74 
 794      00
 795              	.LASF29:
 796 01f6 6D6F7665 		.ascii	"movement.c\000"
 796      6D656E74 
 796      2E6300
 797              	.LASF10:
 798 0201 696E7433 		.ascii	"int32_t\000"
 798      325F7400 
 799              	.LASF16:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccjnEHTb.s 			page 18


 800 0209 73697A65 		.ascii	"sizetype\000"
 800      74797065 
 800      00
 801              	.LASF6:
 802 0212 6C6F6E67 		.ascii	"long long int\000"
 802      206C6F6E 
 802      6720696E 
 802      7400
 803              	.LASF14:
 804 0220 63686172 		.ascii	"char\000"
 804      00
 805              	.LASF24:
 806 0225 6D6F7665 		.ascii	"moveForward\000"
 806      466F7277 
 806      61726400 
 807              	.LASF18:
 808 0231 726F7461 		.ascii	"rotationClockwise\000"
 808      74696F6E 
 808      436C6F63 
 808      6B776973 
 808      6500
 809              	.LASF2:
 810 0243 73686F72 		.ascii	"short int\000"
 810      7420696E 
 810      7400
 811              	.LASF22:
 812 024d 6B656570 		.ascii	"keepRotatingClockwise\000"
 812      526F7461 
 812      74696E67 
 812      436C6F63 
 812      6B776973 
 813              	.LASF4:
 814 0263 6C6F6E67 		.ascii	"long int\000"
 814      20696E74 
 814      00
 815              	.LASF15:
 816 026c 6C6F6E67 		.ascii	"long double\000"
 816      20646F75 
 816      626C6500 
 817              	.LASF0:
 818 0278 7369676E 		.ascii	"signed char\000"
 818      65642063 
 818      68617200 
 819              	.LASF17:
 820 0284 6D6F7665 		.ascii	"moveForwardForSpecifiedCount\000"
 820      466F7277 
 820      61726446 
 820      6F725370 
 820      65636966 
 821              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
