ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccURCBma.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"movement.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	turnCount
  20              		.bss
  21              		.align	1
  22              		.type	turnCount, %object
  23              		.size	turnCount, 2
  24              	turnCount:
  25 0000 0000     		.space	2
  26              		.global	maxTurnCount
  27              		.data
  28              		.align	1
  29              		.type	maxTurnCount, %object
  30              		.size	maxTurnCount, 2
  31              	maxTurnCount:
  32 0000 1900     		.short	25
  33              		.section	.text.stopMoving,"ax",%progbits
  34              		.align	2
  35              		.global	stopMoving
  36              		.thumb
  37              		.thumb_func
  38              		.type	stopMoving, %function
  39              	stopMoving:
  40              	.LFB64:
  41              		.file 1 "movement.c"
   1:movement.c    **** /* ========================================
   2:movement.c    ****  *
   3:movement.c    ****  * Copyright YOUR COMPANY, THE YEAR
   4:movement.c    ****  * All Rights Reserved
   5:movement.c    ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:movement.c    ****  *
   7:movement.c    ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:movement.c    ****  * WHICH IS THE PROPERTY OF your company.
   9:movement.c    ****  *
  10:movement.c    ****  * ========================================
  11:movement.c    **** */
  12:movement.c    **** #include "project.h"
  13:movement.c    **** 
  14:movement.c    **** #include <stdio.h>
  15:movement.c    **** #include <string.h>
  16:movement.c    **** #include <stdlib.h>
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccURCBma.s 			page 2


  17:movement.c    **** 
  18:movement.c    **** uint16 turnCount = 0;
  19:movement.c    **** uint16 maxTurnCount = 25; // clock counts for one complete 90 deg turn
  20:movement.c    **** 
  21:movement.c    **** // Direction/ Movement macros
  22:movement.c    **** //* ========================================
  23:movement.c    **** // stop moving
  24:movement.c    **** void stopMoving() {
  42              		.loc 1 24 0
  43              		.cfi_startproc
  44              		@ args = 0, pretend = 0, frame = 0
  45              		@ frame_needed = 1, uses_anonymous_args = 0
  46 0000 80B5     		push	{r7, lr}
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 00AF     		add	r7, sp, #0
  51              		.cfi_def_cfa_register 7
  25:movement.c    ****     PWM_1_WriteCompare(32768); // 50%
  52              		.loc 1 25 0
  53 0004 4FF40040 		mov	r0, #32768
  54 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
  26:movement.c    ****     PWM_2_WriteCompare(32768); // 50%
  55              		.loc 1 26 0
  56 000c 4FF40040 		mov	r0, #32768
  57 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
  27:movement.c    **** }
  58              		.loc 1 27 0
  59 0014 00BF     		nop
  60 0016 80BD     		pop	{r7, pc}
  61              		.cfi_endproc
  62              	.LFE64:
  63              		.size	stopMoving, .-stopMoving
  64              		.section	.text.moveForwardForSpecifiedCount,"ax",%progbits
  65              		.align	2
  66              		.global	moveForwardForSpecifiedCount
  67              		.thumb
  68              		.thumb_func
  69              		.type	moveForwardForSpecifiedCount, %function
  70              	moveForwardForSpecifiedCount:
  71              	.LFB65:
  28:movement.c    **** 
  29:movement.c    **** void moveForwardForSpecifiedCount() {
  72              		.loc 1 29 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 8
  75              		@ frame_needed = 1, uses_anonymous_args = 0
  76 0000 80B5     		push	{r7, lr}
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 82B0     		sub	sp, sp, #8
  81              		.cfi_def_cfa_offset 16
  82 0004 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  30:movement.c    ****     PWM_1_WriteCompare(42598); // 65%
  84              		.loc 1 30 0
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccURCBma.s 			page 3


  85 0006 4AF26660 		movw	r0, #42598
  86 000a FFF7FEFF 		bl	PWM_1_WriteCompare
  31:movement.c    ****     PWM_2_WriteCompare(22937); // 35%
  87              		.loc 1 31 0
  88 000e 45F69910 		movw	r0, #22937
  89 0012 FFF7FEFF 		bl	PWM_2_WriteCompare
  32:movement.c    ****     
  33:movement.c    ****     int quadPulseCount = 0;
  90              		.loc 1 33 0
  91 0016 0023     		movs	r3, #0
  92 0018 7B60     		str	r3, [r7, #4]
  34:movement.c    ****     QuadDec_M1_SetCounter(0);
  93              		.loc 1 34 0
  94 001a 0020     		movs	r0, #0
  95 001c FFF7FEFF 		bl	QuadDec_M1_SetCounter
  35:movement.c    ****     while(quadPulseCount < 15) {
  96              		.loc 1 35 0
  97 0020 03E0     		b	.L3
  98              	.L4:
  36:movement.c    ****         quadPulseCount = QuadDec_M1_GetCounter();
  99              		.loc 1 36 0
 100 0022 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 101 0026 0346     		mov	r3, r0
 102 0028 7B60     		str	r3, [r7, #4]
 103              	.L3:
  35:movement.c    ****     while(quadPulseCount < 15) {
 104              		.loc 1 35 0
 105 002a 7B68     		ldr	r3, [r7, #4]
 106 002c 0E2B     		cmp	r3, #14
 107 002e F8DD     		ble	.L4
  37:movement.c    ****     }
  38:movement.c    ****     QuadDec_M1_SetCounter(0);
 108              		.loc 1 38 0
 109 0030 0020     		movs	r0, #0
 110 0032 FFF7FEFF 		bl	QuadDec_M1_SetCounter
  39:movement.c    **** }
 111              		.loc 1 39 0
 112 0036 00BF     		nop
 113 0038 0837     		adds	r7, r7, #8
 114              		.cfi_def_cfa_offset 8
 115 003a BD46     		mov	sp, r7
 116              		.cfi_def_cfa_register 13
 117              		@ sp needed
 118 003c 80BD     		pop	{r7, pc}
 119              		.cfi_endproc
 120              	.LFE65:
 121              		.size	moveForwardForSpecifiedCount, .-moveForwardForSpecifiedCount
 122 003e 00BF     		.section	.text.rotationClockwise,"ax",%progbits
 123              		.align	2
 124              		.global	rotationClockwise
 125              		.thumb
 126              		.thumb_func
 127              		.type	rotationClockwise, %function
 128              	rotationClockwise:
 129              	.LFB66:
  40:movement.c    **** 
  41:movement.c    **** // rotate clockwise 90deg
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccURCBma.s 			page 4


  42:movement.c    **** void rotationClockwise() {
 130              		.loc 1 42 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 8
 133              		@ frame_needed = 1, uses_anonymous_args = 0
 134 0000 80B5     		push	{r7, lr}
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 7, -8
 137              		.cfi_offset 14, -4
 138 0002 82B0     		sub	sp, sp, #8
 139              		.cfi_def_cfa_offset 16
 140 0004 00AF     		add	r7, sp, #0
 141              		.cfi_def_cfa_register 7
  43:movement.c    ****     PWM_1_WriteCompare(42598); // 65%
 142              		.loc 1 43 0
 143 0006 4AF26660 		movw	r0, #42598
 144 000a FFF7FEFF 		bl	PWM_1_WriteCompare
  44:movement.c    ****     PWM_2_WriteCompare(42598); // 65%
 145              		.loc 1 44 0
 146 000e 4AF26660 		movw	r0, #42598
 147 0012 FFF7FEFF 		bl	PWM_2_WriteCompare
  45:movement.c    ****     
  46:movement.c    ****     int quadPulseCount = 0;
 148              		.loc 1 46 0
 149 0016 0023     		movs	r3, #0
 150 0018 7B60     		str	r3, [r7, #4]
  47:movement.c    ****     QuadDec_M1_SetCounter(0);
 151              		.loc 1 47 0
 152 001a 0020     		movs	r0, #0
 153 001c FFF7FEFF 		bl	QuadDec_M1_SetCounter
  48:movement.c    ****     while(quadPulseCount < 110) {
 154              		.loc 1 48 0
 155 0020 03E0     		b	.L6
 156              	.L7:
  49:movement.c    ****         quadPulseCount = QuadDec_M1_GetCounter();
 157              		.loc 1 49 0
 158 0022 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 159 0026 0346     		mov	r3, r0
 160 0028 7B60     		str	r3, [r7, #4]
 161              	.L6:
  48:movement.c    ****     while(quadPulseCount < 110) {
 162              		.loc 1 48 0
 163 002a 7B68     		ldr	r3, [r7, #4]
 164 002c 6D2B     		cmp	r3, #109
 165 002e F8DD     		ble	.L7
  50:movement.c    ****     }
  51:movement.c    ****     QuadDec_M1_SetCounter(0);
 166              		.loc 1 51 0
 167 0030 0020     		movs	r0, #0
 168 0032 FFF7FEFF 		bl	QuadDec_M1_SetCounter
  52:movement.c    ****     //CyDelay(500); // change to quadrature encoder pulses, rather than time delay
  53:movement.c    ****     //stopMoving(); // stop movement, ready for next instruction
  54:movement.c    **** }
 169              		.loc 1 54 0
 170 0036 00BF     		nop
 171 0038 0837     		adds	r7, r7, #8
 172              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccURCBma.s 			page 5


 173 003a BD46     		mov	sp, r7
 174              		.cfi_def_cfa_register 13
 175              		@ sp needed
 176 003c 80BD     		pop	{r7, pc}
 177              		.cfi_endproc
 178              	.LFE66:
 179              		.size	rotationClockwise, .-rotationClockwise
 180 003e 00BF     		.section	.text.rotationAntiClockwise,"ax",%progbits
 181              		.align	2
 182              		.global	rotationAntiClockwise
 183              		.thumb
 184              		.thumb_func
 185              		.type	rotationAntiClockwise, %function
 186              	rotationAntiClockwise:
 187              	.LFB67:
  55:movement.c    **** 
  56:movement.c    **** // rotate anticlockwise 90deg- CHANGE TO NOT USE TIMER BUT SIMPLY CHECK FOR NEW CONDITIONS????
  57:movement.c    **** void rotationAntiClockwise() {
 188              		.loc 1 57 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 8
 191              		@ frame_needed = 1, uses_anonymous_args = 0
 192 0000 80B5     		push	{r7, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 7, -8
 195              		.cfi_offset 14, -4
 196 0002 82B0     		sub	sp, sp, #8
 197              		.cfi_def_cfa_offset 16
 198 0004 00AF     		add	r7, sp, #0
 199              		.cfi_def_cfa_register 7
  58:movement.c    ****     PWM_1_WriteCompare(22937); // 35%
 200              		.loc 1 58 0
 201 0006 45F69910 		movw	r0, #22937
 202 000a FFF7FEFF 		bl	PWM_1_WriteCompare
  59:movement.c    ****     PWM_2_WriteCompare(22937); // 35%
 203              		.loc 1 59 0
 204 000e 45F69910 		movw	r0, #22937
 205 0012 FFF7FEFF 		bl	PWM_2_WriteCompare
  60:movement.c    ****     
  61:movement.c    ****     int quadPulseCount = 0;
 206              		.loc 1 61 0
 207 0016 0023     		movs	r3, #0
 208 0018 7B60     		str	r3, [r7, #4]
  62:movement.c    ****     QuadDec_M1_SetCounter(0);
 209              		.loc 1 62 0
 210 001a 0020     		movs	r0, #0
 211 001c FFF7FEFF 		bl	QuadDec_M1_SetCounter
  63:movement.c    ****     while(quadPulseCount > -105) {
 212              		.loc 1 63 0
 213 0020 03E0     		b	.L9
 214              	.L10:
  64:movement.c    ****         quadPulseCount = QuadDec_M1_GetCounter();  
 215              		.loc 1 64 0
 216 0022 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 217 0026 0346     		mov	r3, r0
 218 0028 7B60     		str	r3, [r7, #4]
 219              	.L9:
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccURCBma.s 			page 6


  63:movement.c    ****     while(quadPulseCount > -105) {
 220              		.loc 1 63 0
 221 002a 7B68     		ldr	r3, [r7, #4]
 222 002c 13F1680F 		cmn	r3, #104
 223 0030 F7DA     		bge	.L10
  65:movement.c    ****     }
  66:movement.c    ****     QuadDec_M1_SetCounter(0);
 224              		.loc 1 66 0
 225 0032 0020     		movs	r0, #0
 226 0034 FFF7FEFF 		bl	QuadDec_M1_SetCounter
  67:movement.c    ****     //CyDelay(500);
  68:movement.c    ****     //stopMoving(); // stop movement, ready for next instruction
  69:movement.c    **** }
 227              		.loc 1 69 0
 228 0038 00BF     		nop
 229 003a 0837     		adds	r7, r7, #8
 230              		.cfi_def_cfa_offset 8
 231 003c BD46     		mov	sp, r7
 232              		.cfi_def_cfa_register 13
 233              		@ sp needed
 234 003e 80BD     		pop	{r7, pc}
 235              		.cfi_endproc
 236              	.LFE67:
 237              		.size	rotationAntiClockwise, .-rotationAntiClockwise
 238              		.section	.text.adjustRight,"ax",%progbits
 239              		.align	2
 240              		.global	adjustRight
 241              		.thumb
 242              		.thumb_func
 243              		.type	adjustRight, %function
 244              	adjustRight:
 245              	.LFB68:
  70:movement.c    **** 
  71:movement.c    **** // keep rotating clockwise
  72:movement.c    **** // used for adjusting deviations
  73:movement.c    **** void adjustRight() {
 246              		.loc 1 73 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 1, uses_anonymous_args = 0
 250 0000 80B5     		push	{r7, lr}
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 7, -8
 253              		.cfi_offset 14, -4
 254 0002 00AF     		add	r7, sp, #0
 255              		.cfi_def_cfa_register 7
  74:movement.c    ****     PWM_1_WriteCompare(42598); // 65% - Left Wheel Clockwise
 256              		.loc 1 74 0
 257 0004 4AF26660 		movw	r0, #42598
 258 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
  75:movement.c    ****     PWM_2_WriteCompare(26214); // 40% - Right Wheel Clockwise
 259              		.loc 1 75 0
 260 000c 46F26660 		movw	r0, #26214
 261 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
  76:movement.c    **** }
 262              		.loc 1 76 0
 263 0014 00BF     		nop
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccURCBma.s 			page 7


 264 0016 80BD     		pop	{r7, pc}
 265              		.cfi_endproc
 266              	.LFE68:
 267              		.size	adjustRight, .-adjustRight
 268              		.section	.text.adjustLeft,"ax",%progbits
 269              		.align	2
 270              		.global	adjustLeft
 271              		.thumb
 272              		.thumb_func
 273              		.type	adjustLeft, %function
 274              	adjustLeft:
 275              	.LFB69:
  77:movement.c    **** 
  78:movement.c    **** // keep rotating anticlockwise
  79:movement.c    **** // used for adjusting deviations
  80:movement.c    **** void adjustLeft() {
 276              		.loc 1 80 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 1, uses_anonymous_args = 0
 280 0000 80B5     		push	{r7, lr}
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 7, -8
 283              		.cfi_offset 14, -4
 284 0002 00AF     		add	r7, sp, #0
 285              		.cfi_def_cfa_register 7
  81:movement.c    **** 
  82:movement.c    ****     PWM_1_WriteCompare(39321); // 60% - Left Wheel Clockwise
 286              		.loc 1 82 0
 287 0004 49F69910 		movw	r0, #39321
 288 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
  83:movement.c    ****     PWM_2_WriteCompare(22937); // 35% - Right Wheel Clockwise
 289              		.loc 1 83 0
 290 000c 45F69910 		movw	r0, #22937
 291 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
  84:movement.c    **** }
 292              		.loc 1 84 0
 293 0014 00BF     		nop
 294 0016 80BD     		pop	{r7, pc}
 295              		.cfi_endproc
 296              	.LFE69:
 297              		.size	adjustLeft, .-adjustLeft
 298              		.section	.text.turnLeft,"ax",%progbits
 299              		.align	2
 300              		.global	turnLeft
 301              		.thumb
 302              		.thumb_func
 303              		.type	turnLeft, %function
 304              	turnLeft:
 305              	.LFB70:
  85:movement.c    **** 
  86:movement.c    **** // Anti-clockwise
  87:movement.c    **** void turnLeft() {
 306              		.loc 1 87 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccURCBma.s 			page 8


 310 0000 80B5     		push	{r7, lr}
 311              		.cfi_def_cfa_offset 8
 312              		.cfi_offset 7, -8
 313              		.cfi_offset 14, -4
 314 0002 00AF     		add	r7, sp, #0
 315              		.cfi_def_cfa_register 7
  88:movement.c    ****     PWM_1_WriteCompare(26214); // 40% -- Left Wheel spins Clockwise
 316              		.loc 1 88 0
 317 0004 46F26660 		movw	r0, #26214
 318 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
  89:movement.c    ****     PWM_2_WriteCompare(26214); // 40% -- Right wheel spins clockwise
 319              		.loc 1 89 0
 320 000c 46F26660 		movw	r0, #26214
 321 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
  90:movement.c    **** }
 322              		.loc 1 90 0
 323 0014 00BF     		nop
 324 0016 80BD     		pop	{r7, pc}
 325              		.cfi_endproc
 326              	.LFE70:
 327              		.size	turnLeft, .-turnLeft
 328              		.section	.text.turnRight,"ax",%progbits
 329              		.align	2
 330              		.global	turnRight
 331              		.thumb
 332              		.thumb_func
 333              		.type	turnRight, %function
 334              	turnRight:
 335              	.LFB71:
  91:movement.c    **** 
  92:movement.c    **** // Clockwise
  93:movement.c    **** void turnRight() {
 336              		.loc 1 93 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 1, uses_anonymous_args = 0
 340 0000 80B5     		push	{r7, lr}
 341              		.cfi_def_cfa_offset 8
 342              		.cfi_offset 7, -8
 343              		.cfi_offset 14, -4
 344 0002 00AF     		add	r7, sp, #0
 345              		.cfi_def_cfa_register 7
  94:movement.c    ****     PWM_1_WriteCompare(39321); // 60% -- Left wheel spins clockwise
 346              		.loc 1 94 0
 347 0004 49F69910 		movw	r0, #39321
 348 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
  95:movement.c    ****     PWM_2_WriteCompare(39321); // 60% - Right wheel spins Anti Clockwise
 349              		.loc 1 95 0
 350 000c 49F69910 		movw	r0, #39321
 351 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
  96:movement.c    **** }
 352              		.loc 1 96 0
 353 0014 00BF     		nop
 354 0016 80BD     		pop	{r7, pc}
 355              		.cfi_endproc
 356              	.LFE71:
 357              		.size	turnRight, .-turnRight
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccURCBma.s 			page 9


 358              		.section	.text.moveForward,"ax",%progbits
 359              		.align	2
 360              		.global	moveForward
 361              		.thumb
 362              		.thumb_func
 363              		.type	moveForward, %function
 364              	moveForward:
 365              	.LFB72:
  97:movement.c    **** 
  98:movement.c    **** void moveForward() {
 366              		.loc 1 98 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 1, uses_anonymous_args = 0
 370 0000 80B5     		push	{r7, lr}
 371              		.cfi_def_cfa_offset 8
 372              		.cfi_offset 7, -8
 373              		.cfi_offset 14, -4
 374 0002 00AF     		add	r7, sp, #0
 375              		.cfi_def_cfa_register 7
  99:movement.c    ****     PWM_1_WriteCompare(42598); // 65% - Left Wheel Clockwise
 376              		.loc 1 99 0
 377 0004 4AF26660 		movw	r0, #42598
 378 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
 100:movement.c    ****     PWM_2_WriteCompare(22937); // 35% - Right Wheel Clockwise
 379              		.loc 1 100 0
 380 000c 45F69910 		movw	r0, #22937
 381 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
 101:movement.c    **** }
 382              		.loc 1 101 0
 383 0014 00BF     		nop
 384 0016 80BD     		pop	{r7, pc}
 385              		.cfi_endproc
 386              	.LFE72:
 387              		.size	moveForward, .-moveForward
 388              		.section	.text.moveBackward,"ax",%progbits
 389              		.align	2
 390              		.global	moveBackward
 391              		.thumb
 392              		.thumb_func
 393              		.type	moveBackward, %function
 394              	moveBackward:
 395              	.LFB73:
 102:movement.c    **** 
 103:movement.c    **** void moveBackward() {
 396              		.loc 1 103 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 1, uses_anonymous_args = 0
 400 0000 80B5     		push	{r7, lr}
 401              		.cfi_def_cfa_offset 8
 402              		.cfi_offset 7, -8
 403              		.cfi_offset 14, -4
 404 0002 00AF     		add	r7, sp, #0
 405              		.cfi_def_cfa_register 7
 104:movement.c    ****     PWM_1_WriteCompare(22937); // 35% - Left Wheel Anti Clockwise
 406              		.loc 1 104 0
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccURCBma.s 			page 10


 407 0004 45F69910 		movw	r0, #22937
 408 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
 105:movement.c    ****     PWM_2_WriteCompare(42598); // 65% - Right Wheel Anti Clockwise
 409              		.loc 1 105 0
 410 000c 4AF26660 		movw	r0, #42598
 411 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
 106:movement.c    **** }
 412              		.loc 1 106 0
 413 0014 00BF     		nop
 414 0016 80BD     		pop	{r7, pc}
 415              		.cfi_endproc
 416              	.LFE73:
 417              		.size	moveBackward, .-moveBackward
 418              		.text
 419              	.Letext0:
 420              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 421              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 422              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 423              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 424              		.section	.debug_info,"",%progbits
 425              	.Ldebug_info0:
 426 0000 C3010000 		.4byte	0x1c3
 427 0004 0400     		.2byte	0x4
 428 0006 00000000 		.4byte	.Ldebug_abbrev0
 429 000a 04       		.byte	0x4
 430 000b 01       		.uleb128 0x1
 431 000c 0B000000 		.4byte	.LASF31
 432 0010 0C       		.byte	0xc
 433 0011 C2010000 		.4byte	.LASF32
 434 0015 AD000000 		.4byte	.LASF33
 435 0019 00000000 		.4byte	.Ldebug_ranges0+0
 436 001d 00000000 		.4byte	0
 437 0021 00000000 		.4byte	.Ldebug_line0
 438 0025 02       		.uleb128 0x2
 439 0026 01       		.byte	0x1
 440 0027 06       		.byte	0x6
 441 0028 7F020000 		.4byte	.LASF0
 442 002c 02       		.uleb128 0x2
 443 002d 01       		.byte	0x1
 444 002e 08       		.byte	0x8
 445 002f 38010000 		.4byte	.LASF1
 446 0033 02       		.uleb128 0x2
 447 0034 02       		.byte	0x2
 448 0035 05       		.byte	0x5
 449 0036 60020000 		.4byte	.LASF2
 450 003a 02       		.uleb128 0x2
 451 003b 02       		.byte	0x2
 452 003c 07       		.byte	0x7
 453 003d 65010000 		.4byte	.LASF3
 454 0041 03       		.uleb128 0x3
 455 0042 99000000 		.4byte	.LASF9
 456 0046 02       		.byte	0x2
 457 0047 3F       		.byte	0x3f
 458 0048 4C000000 		.4byte	0x4c
 459 004c 02       		.uleb128 0x2
 460 004d 04       		.byte	0x4
 461 004e 05       		.byte	0x5
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccURCBma.s 			page 11


 462 004f 6A020000 		.4byte	.LASF4
 463 0053 02       		.uleb128 0x2
 464 0054 04       		.byte	0x4
 465 0055 07       		.byte	0x7
 466 0056 46010000 		.4byte	.LASF5
 467 005a 02       		.uleb128 0x2
 468 005b 08       		.byte	0x8
 469 005c 05       		.byte	0x5
 470 005d 2F020000 		.4byte	.LASF6
 471 0061 02       		.uleb128 0x2
 472 0062 08       		.byte	0x8
 473 0063 07       		.byte	0x7
 474 0064 F1010000 		.4byte	.LASF7
 475 0068 04       		.uleb128 0x4
 476 0069 04       		.byte	0x4
 477 006a 05       		.byte	0x5
 478 006b 696E7400 		.ascii	"int\000"
 479 006f 02       		.uleb128 0x2
 480 0070 04       		.byte	0x4
 481 0071 07       		.byte	0x7
 482 0072 DA010000 		.4byte	.LASF8
 483 0076 03       		.uleb128 0x3
 484 0077 1E020000 		.4byte	.LASF10
 485 007b 03       		.byte	0x3
 486 007c 2C       		.byte	0x2c
 487 007d 41000000 		.4byte	0x41
 488 0081 05       		.uleb128 0x5
 489 0082 BB010000 		.4byte	.LASF11
 490 0086 04       		.byte	0x4
 491 0087 E801     		.2byte	0x1e8
 492 0089 3A000000 		.4byte	0x3a
 493 008d 02       		.uleb128 0x2
 494 008e 04       		.byte	0x4
 495 008f 04       		.byte	0x4
 496 0090 32010000 		.4byte	.LASF12
 497 0094 02       		.uleb128 0x2
 498 0095 08       		.byte	0x8
 499 0096 04       		.byte	0x4
 500 0097 A9010000 		.4byte	.LASF13
 501 009b 02       		.uleb128 0x2
 502 009c 01       		.byte	0x1
 503 009d 08       		.byte	0x8
 504 009e 3D020000 		.4byte	.LASF14
 505 00a2 02       		.uleb128 0x2
 506 00a3 08       		.byte	0x8
 507 00a4 04       		.byte	0x4
 508 00a5 73020000 		.4byte	.LASF15
 509 00a9 02       		.uleb128 0x2
 510 00aa 04       		.byte	0x4
 511 00ab 07       		.byte	0x7
 512 00ac 26020000 		.4byte	.LASF16
 513 00b0 06       		.uleb128 0x6
 514 00b1 00000000 		.4byte	.LASF21
 515 00b5 01       		.byte	0x1
 516 00b6 18       		.byte	0x18
 517 00b7 00000000 		.4byte	.LFB64
 518 00bb 18000000 		.4byte	.LFE64-.LFB64
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccURCBma.s 			page 12


 519 00bf 01       		.uleb128 0x1
 520 00c0 9C       		.byte	0x9c
 521 00c1 07       		.uleb128 0x7
 522 00c2 8B020000 		.4byte	.LASF17
 523 00c6 01       		.byte	0x1
 524 00c7 1D       		.byte	0x1d
 525 00c8 00000000 		.4byte	.LFB65
 526 00cc 3E000000 		.4byte	.LFE65-.LFB65
 527 00d0 01       		.uleb128 0x1
 528 00d1 9C       		.byte	0x9c
 529 00d2 E5000000 		.4byte	0xe5
 530 00d6 08       		.uleb128 0x8
 531 00d7 8E010000 		.4byte	.LASF19
 532 00db 01       		.byte	0x1
 533 00dc 21       		.byte	0x21
 534 00dd 68000000 		.4byte	0x68
 535 00e1 02       		.uleb128 0x2
 536 00e2 91       		.byte	0x91
 537 00e3 74       		.sleb128 -12
 538 00e4 00       		.byte	0
 539 00e5 07       		.uleb128 0x7
 540 00e6 4E020000 		.4byte	.LASF18
 541 00ea 01       		.byte	0x1
 542 00eb 2A       		.byte	0x2a
 543 00ec 00000000 		.4byte	.LFB66
 544 00f0 3E000000 		.4byte	.LFE66-.LFB66
 545 00f4 01       		.uleb128 0x1
 546 00f5 9C       		.byte	0x9c
 547 00f6 09010000 		.4byte	0x109
 548 00fa 08       		.uleb128 0x8
 549 00fb 8E010000 		.4byte	.LASF19
 550 00ff 01       		.byte	0x1
 551 0100 2E       		.byte	0x2e
 552 0101 68000000 		.4byte	0x68
 553 0105 02       		.uleb128 0x2
 554 0106 91       		.byte	0x91
 555 0107 74       		.sleb128 -12
 556 0108 00       		.byte	0
 557 0109 07       		.uleb128 0x7
 558 010a 78010000 		.4byte	.LASF20
 559 010e 01       		.byte	0x1
 560 010f 39       		.byte	0x39
 561 0110 00000000 		.4byte	.LFB67
 562 0114 40000000 		.4byte	.LFE67-.LFB67
 563 0118 01       		.uleb128 0x1
 564 0119 9C       		.byte	0x9c
 565 011a 2D010000 		.4byte	0x12d
 566 011e 08       		.uleb128 0x8
 567 011f 8E010000 		.4byte	.LASF19
 568 0123 01       		.byte	0x1
 569 0124 3D       		.byte	0x3d
 570 0125 68000000 		.4byte	0x68
 571 0129 02       		.uleb128 0x2
 572 012a 91       		.byte	0x91
 573 012b 74       		.sleb128 -12
 574 012c 00       		.byte	0
 575 012d 06       		.uleb128 0x6
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccURCBma.s 			page 13


 576 012e 9D010000 		.4byte	.LASF22
 577 0132 01       		.byte	0x1
 578 0133 49       		.byte	0x49
 579 0134 00000000 		.4byte	.LFB68
 580 0138 18000000 		.4byte	.LFE68-.LFB68
 581 013c 01       		.uleb128 0x1
 582 013d 9C       		.byte	0x9c
 583 013e 06       		.uleb128 0x6
 584 013f B0010000 		.4byte	.LASF23
 585 0143 01       		.byte	0x1
 586 0144 50       		.byte	0x50
 587 0145 00000000 		.4byte	.LFB69
 588 0149 18000000 		.4byte	.LFE69-.LFB69
 589 014d 01       		.uleb128 0x1
 590 014e 9C       		.byte	0x9c
 591 014f 06       		.uleb128 0x6
 592 0150 15020000 		.4byte	.LASF24
 593 0154 01       		.byte	0x1
 594 0155 57       		.byte	0x57
 595 0156 00000000 		.4byte	.LFB70
 596 015a 18000000 		.4byte	.LFE70-.LFB70
 597 015e 01       		.uleb128 0x1
 598 015f 9C       		.byte	0x9c
 599 0160 06       		.uleb128 0x6
 600 0161 A3000000 		.4byte	.LASF25
 601 0165 01       		.byte	0x1
 602 0166 5D       		.byte	0x5d
 603 0167 00000000 		.4byte	.LFB71
 604 016b 18000000 		.4byte	.LFE71-.LFB71
 605 016f 01       		.uleb128 0x1
 606 0170 9C       		.byte	0x9c
 607 0171 06       		.uleb128 0x6
 608 0172 42020000 		.4byte	.LASF26
 609 0176 01       		.byte	0x1
 610 0177 62       		.byte	0x62
 611 0178 00000000 		.4byte	.LFB72
 612 017c 18000000 		.4byte	.LFE72-.LFB72
 613 0180 01       		.uleb128 0x1
 614 0181 9C       		.byte	0x9c
 615 0182 06       		.uleb128 0x6
 616 0183 58010000 		.4byte	.LASF27
 617 0187 01       		.byte	0x1
 618 0188 67       		.byte	0x67
 619 0189 00000000 		.4byte	.LFB73
 620 018d 18000000 		.4byte	.LFE73-.LFB73
 621 0191 01       		.uleb128 0x1
 622 0192 9C       		.byte	0x9c
 623 0193 09       		.uleb128 0x9
 624 0194 CD010000 		.4byte	.LASF28
 625 0198 05       		.byte	0x5
 626 0199 1207     		.2byte	0x712
 627 019b 9F010000 		.4byte	0x19f
 628 019f 0A       		.uleb128 0xa
 629 01a0 76000000 		.4byte	0x76
 630 01a4 0B       		.uleb128 0xb
 631 01a5 E7010000 		.4byte	.LASF29
 632 01a9 01       		.byte	0x1
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccURCBma.s 			page 14


 633 01aa 12       		.byte	0x12
 634 01ab 81000000 		.4byte	0x81
 635 01af 05       		.uleb128 0x5
 636 01b0 03       		.byte	0x3
 637 01b1 00000000 		.4byte	turnCount
 638 01b5 0B       		.uleb128 0xb
 639 01b6 08020000 		.4byte	.LASF30
 640 01ba 01       		.byte	0x1
 641 01bb 13       		.byte	0x13
 642 01bc 81000000 		.4byte	0x81
 643 01c0 05       		.uleb128 0x5
 644 01c1 03       		.byte	0x3
 645 01c2 00000000 		.4byte	maxTurnCount
 646 01c6 00       		.byte	0
 647              		.section	.debug_abbrev,"",%progbits
 648              	.Ldebug_abbrev0:
 649 0000 01       		.uleb128 0x1
 650 0001 11       		.uleb128 0x11
 651 0002 01       		.byte	0x1
 652 0003 25       		.uleb128 0x25
 653 0004 0E       		.uleb128 0xe
 654 0005 13       		.uleb128 0x13
 655 0006 0B       		.uleb128 0xb
 656 0007 03       		.uleb128 0x3
 657 0008 0E       		.uleb128 0xe
 658 0009 1B       		.uleb128 0x1b
 659 000a 0E       		.uleb128 0xe
 660 000b 55       		.uleb128 0x55
 661 000c 17       		.uleb128 0x17
 662 000d 11       		.uleb128 0x11
 663 000e 01       		.uleb128 0x1
 664 000f 10       		.uleb128 0x10
 665 0010 17       		.uleb128 0x17
 666 0011 00       		.byte	0
 667 0012 00       		.byte	0
 668 0013 02       		.uleb128 0x2
 669 0014 24       		.uleb128 0x24
 670 0015 00       		.byte	0
 671 0016 0B       		.uleb128 0xb
 672 0017 0B       		.uleb128 0xb
 673 0018 3E       		.uleb128 0x3e
 674 0019 0B       		.uleb128 0xb
 675 001a 03       		.uleb128 0x3
 676 001b 0E       		.uleb128 0xe
 677 001c 00       		.byte	0
 678 001d 00       		.byte	0
 679 001e 03       		.uleb128 0x3
 680 001f 16       		.uleb128 0x16
 681 0020 00       		.byte	0
 682 0021 03       		.uleb128 0x3
 683 0022 0E       		.uleb128 0xe
 684 0023 3A       		.uleb128 0x3a
 685 0024 0B       		.uleb128 0xb
 686 0025 3B       		.uleb128 0x3b
 687 0026 0B       		.uleb128 0xb
 688 0027 49       		.uleb128 0x49
 689 0028 13       		.uleb128 0x13
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccURCBma.s 			page 15


 690 0029 00       		.byte	0
 691 002a 00       		.byte	0
 692 002b 04       		.uleb128 0x4
 693 002c 24       		.uleb128 0x24
 694 002d 00       		.byte	0
 695 002e 0B       		.uleb128 0xb
 696 002f 0B       		.uleb128 0xb
 697 0030 3E       		.uleb128 0x3e
 698 0031 0B       		.uleb128 0xb
 699 0032 03       		.uleb128 0x3
 700 0033 08       		.uleb128 0x8
 701 0034 00       		.byte	0
 702 0035 00       		.byte	0
 703 0036 05       		.uleb128 0x5
 704 0037 16       		.uleb128 0x16
 705 0038 00       		.byte	0
 706 0039 03       		.uleb128 0x3
 707 003a 0E       		.uleb128 0xe
 708 003b 3A       		.uleb128 0x3a
 709 003c 0B       		.uleb128 0xb
 710 003d 3B       		.uleb128 0x3b
 711 003e 05       		.uleb128 0x5
 712 003f 49       		.uleb128 0x49
 713 0040 13       		.uleb128 0x13
 714 0041 00       		.byte	0
 715 0042 00       		.byte	0
 716 0043 06       		.uleb128 0x6
 717 0044 2E       		.uleb128 0x2e
 718 0045 00       		.byte	0
 719 0046 3F       		.uleb128 0x3f
 720 0047 19       		.uleb128 0x19
 721 0048 03       		.uleb128 0x3
 722 0049 0E       		.uleb128 0xe
 723 004a 3A       		.uleb128 0x3a
 724 004b 0B       		.uleb128 0xb
 725 004c 3B       		.uleb128 0x3b
 726 004d 0B       		.uleb128 0xb
 727 004e 11       		.uleb128 0x11
 728 004f 01       		.uleb128 0x1
 729 0050 12       		.uleb128 0x12
 730 0051 06       		.uleb128 0x6
 731 0052 40       		.uleb128 0x40
 732 0053 18       		.uleb128 0x18
 733 0054 9642     		.uleb128 0x2116
 734 0056 19       		.uleb128 0x19
 735 0057 00       		.byte	0
 736 0058 00       		.byte	0
 737 0059 07       		.uleb128 0x7
 738 005a 2E       		.uleb128 0x2e
 739 005b 01       		.byte	0x1
 740 005c 3F       		.uleb128 0x3f
 741 005d 19       		.uleb128 0x19
 742 005e 03       		.uleb128 0x3
 743 005f 0E       		.uleb128 0xe
 744 0060 3A       		.uleb128 0x3a
 745 0061 0B       		.uleb128 0xb
 746 0062 3B       		.uleb128 0x3b
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccURCBma.s 			page 16


 747 0063 0B       		.uleb128 0xb
 748 0064 11       		.uleb128 0x11
 749 0065 01       		.uleb128 0x1
 750 0066 12       		.uleb128 0x12
 751 0067 06       		.uleb128 0x6
 752 0068 40       		.uleb128 0x40
 753 0069 18       		.uleb128 0x18
 754 006a 9642     		.uleb128 0x2116
 755 006c 19       		.uleb128 0x19
 756 006d 01       		.uleb128 0x1
 757 006e 13       		.uleb128 0x13
 758 006f 00       		.byte	0
 759 0070 00       		.byte	0
 760 0071 08       		.uleb128 0x8
 761 0072 34       		.uleb128 0x34
 762 0073 00       		.byte	0
 763 0074 03       		.uleb128 0x3
 764 0075 0E       		.uleb128 0xe
 765 0076 3A       		.uleb128 0x3a
 766 0077 0B       		.uleb128 0xb
 767 0078 3B       		.uleb128 0x3b
 768 0079 0B       		.uleb128 0xb
 769 007a 49       		.uleb128 0x49
 770 007b 13       		.uleb128 0x13
 771 007c 02       		.uleb128 0x2
 772 007d 18       		.uleb128 0x18
 773 007e 00       		.byte	0
 774 007f 00       		.byte	0
 775 0080 09       		.uleb128 0x9
 776 0081 34       		.uleb128 0x34
 777 0082 00       		.byte	0
 778 0083 03       		.uleb128 0x3
 779 0084 0E       		.uleb128 0xe
 780 0085 3A       		.uleb128 0x3a
 781 0086 0B       		.uleb128 0xb
 782 0087 3B       		.uleb128 0x3b
 783 0088 05       		.uleb128 0x5
 784 0089 49       		.uleb128 0x49
 785 008a 13       		.uleb128 0x13
 786 008b 3F       		.uleb128 0x3f
 787 008c 19       		.uleb128 0x19
 788 008d 3C       		.uleb128 0x3c
 789 008e 19       		.uleb128 0x19
 790 008f 00       		.byte	0
 791 0090 00       		.byte	0
 792 0091 0A       		.uleb128 0xa
 793 0092 35       		.uleb128 0x35
 794 0093 00       		.byte	0
 795 0094 49       		.uleb128 0x49
 796 0095 13       		.uleb128 0x13
 797 0096 00       		.byte	0
 798 0097 00       		.byte	0
 799 0098 0B       		.uleb128 0xb
 800 0099 34       		.uleb128 0x34
 801 009a 00       		.byte	0
 802 009b 03       		.uleb128 0x3
 803 009c 0E       		.uleb128 0xe
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccURCBma.s 			page 17


 804 009d 3A       		.uleb128 0x3a
 805 009e 0B       		.uleb128 0xb
 806 009f 3B       		.uleb128 0x3b
 807 00a0 0B       		.uleb128 0xb
 808 00a1 49       		.uleb128 0x49
 809 00a2 13       		.uleb128 0x13
 810 00a3 3F       		.uleb128 0x3f
 811 00a4 19       		.uleb128 0x19
 812 00a5 02       		.uleb128 0x2
 813 00a6 18       		.uleb128 0x18
 814 00a7 00       		.byte	0
 815 00a8 00       		.byte	0
 816 00a9 00       		.byte	0
 817              		.section	.debug_aranges,"",%progbits
 818 0000 64000000 		.4byte	0x64
 819 0004 0200     		.2byte	0x2
 820 0006 00000000 		.4byte	.Ldebug_info0
 821 000a 04       		.byte	0x4
 822 000b 00       		.byte	0
 823 000c 0000     		.2byte	0
 824 000e 0000     		.2byte	0
 825 0010 00000000 		.4byte	.LFB64
 826 0014 18000000 		.4byte	.LFE64-.LFB64
 827 0018 00000000 		.4byte	.LFB65
 828 001c 3E000000 		.4byte	.LFE65-.LFB65
 829 0020 00000000 		.4byte	.LFB66
 830 0024 3E000000 		.4byte	.LFE66-.LFB66
 831 0028 00000000 		.4byte	.LFB67
 832 002c 40000000 		.4byte	.LFE67-.LFB67
 833 0030 00000000 		.4byte	.LFB68
 834 0034 18000000 		.4byte	.LFE68-.LFB68
 835 0038 00000000 		.4byte	.LFB69
 836 003c 18000000 		.4byte	.LFE69-.LFB69
 837 0040 00000000 		.4byte	.LFB70
 838 0044 18000000 		.4byte	.LFE70-.LFB70
 839 0048 00000000 		.4byte	.LFB71
 840 004c 18000000 		.4byte	.LFE71-.LFB71
 841 0050 00000000 		.4byte	.LFB72
 842 0054 18000000 		.4byte	.LFE72-.LFB72
 843 0058 00000000 		.4byte	.LFB73
 844 005c 18000000 		.4byte	.LFE73-.LFB73
 845 0060 00000000 		.4byte	0
 846 0064 00000000 		.4byte	0
 847              		.section	.debug_ranges,"",%progbits
 848              	.Ldebug_ranges0:
 849 0000 00000000 		.4byte	.LFB64
 850 0004 18000000 		.4byte	.LFE64
 851 0008 00000000 		.4byte	.LFB65
 852 000c 3E000000 		.4byte	.LFE65
 853 0010 00000000 		.4byte	.LFB66
 854 0014 3E000000 		.4byte	.LFE66
 855 0018 00000000 		.4byte	.LFB67
 856 001c 40000000 		.4byte	.LFE67
 857 0020 00000000 		.4byte	.LFB68
 858 0024 18000000 		.4byte	.LFE68
 859 0028 00000000 		.4byte	.LFB69
 860 002c 18000000 		.4byte	.LFE69
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccURCBma.s 			page 18


 861 0030 00000000 		.4byte	.LFB70
 862 0034 18000000 		.4byte	.LFE70
 863 0038 00000000 		.4byte	.LFB71
 864 003c 18000000 		.4byte	.LFE71
 865 0040 00000000 		.4byte	.LFB72
 866 0044 18000000 		.4byte	.LFE72
 867 0048 00000000 		.4byte	.LFB73
 868 004c 18000000 		.4byte	.LFE73
 869 0050 00000000 		.4byte	0
 870 0054 00000000 		.4byte	0
 871              		.section	.debug_line,"",%progbits
 872              	.Ldebug_line0:
 873 0000 22020000 		.section	.debug_str,"MS",%progbits,1
 873      02005001 
 873      00000201 
 873      FB0E0D00 
 873      01010101 
 874              	.LASF21:
 875 0000 73746F70 		.ascii	"stopMoving\000"
 875      4D6F7669 
 875      6E6700
 876              	.LASF31:
 877 000b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 877      43313120 
 877      352E342E 
 877      31203230 
 877      31363036 
 878 003e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 878      20726576 
 878      6973696F 
 878      6E203233 
 878      37373135 
 879 0071 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 879      66756E63 
 879      74696F6E 
 879      2D736563 
 879      74696F6E 
 880              	.LASF9:
 881 0099 5F5F696E 		.ascii	"__int32_t\000"
 881      7433325F 
 881      7400
 882              	.LASF25:
 883 00a3 7475726E 		.ascii	"turnRight\000"
 883      52696768 
 883      7400
 884              	.LASF33:
 885 00ad 433A5C55 		.ascii	"C:\\Users\\rshu284\\OneDrive - The University of Au"
 885      73657273 
 885      5C727368 
 885      75323834 
 885      5C4F6E65 
 886 00dd 636B6C61 		.ascii	"ckland\\Documents\\GitHub\\301-Robot\\psoc student "
 886      6E645C44 
 886      6F63756D 
 886      656E7473 
 886      5C476974 
 887 010c 7061636B 		.ascii	"pack\\psoc_code_base\\CS301_Class.cydsn\000"
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccURCBma.s 			page 19


 887      5C70736F 
 887      635F636F 
 887      64655F62 
 887      6173655C 
 888              	.LASF12:
 889 0132 666C6F61 		.ascii	"float\000"
 889      7400
 890              	.LASF1:
 891 0138 756E7369 		.ascii	"unsigned char\000"
 891      676E6564 
 891      20636861 
 891      7200
 892              	.LASF5:
 893 0146 6C6F6E67 		.ascii	"long unsigned int\000"
 893      20756E73 
 893      69676E65 
 893      6420696E 
 893      7400
 894              	.LASF27:
 895 0158 6D6F7665 		.ascii	"moveBackward\000"
 895      4261636B 
 895      77617264 
 895      00
 896              	.LASF3:
 897 0165 73686F72 		.ascii	"short unsigned int\000"
 897      7420756E 
 897      7369676E 
 897      65642069 
 897      6E7400
 898              	.LASF20:
 899 0178 726F7461 		.ascii	"rotationAntiClockwise\000"
 899      74696F6E 
 899      416E7469 
 899      436C6F63 
 899      6B776973 
 900              	.LASF19:
 901 018e 71756164 		.ascii	"quadPulseCount\000"
 901      50756C73 
 901      65436F75 
 901      6E7400
 902              	.LASF22:
 903 019d 61646A75 		.ascii	"adjustRight\000"
 903      73745269 
 903      67687400 
 904              	.LASF13:
 905 01a9 646F7562 		.ascii	"double\000"
 905      6C6500
 906              	.LASF23:
 907 01b0 61646A75 		.ascii	"adjustLeft\000"
 907      73744C65 
 907      667400
 908              	.LASF11:
 909 01bb 75696E74 		.ascii	"uint16\000"
 909      313600
 910              	.LASF32:
 911 01c2 6D6F7665 		.ascii	"movement.c\000"
 911      6D656E74 
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccURCBma.s 			page 20


 911      2E6300
 912              	.LASF28:
 913 01cd 49544D5F 		.ascii	"ITM_RxBuffer\000"
 913      52784275 
 913      66666572 
 913      00
 914              	.LASF8:
 915 01da 756E7369 		.ascii	"unsigned int\000"
 915      676E6564 
 915      20696E74 
 915      00
 916              	.LASF29:
 917 01e7 7475726E 		.ascii	"turnCount\000"
 917      436F756E 
 917      7400
 918              	.LASF7:
 919 01f1 6C6F6E67 		.ascii	"long long unsigned int\000"
 919      206C6F6E 
 919      6720756E 
 919      7369676E 
 919      65642069 
 920              	.LASF30:
 921 0208 6D617854 		.ascii	"maxTurnCount\000"
 921      75726E43 
 921      6F756E74 
 921      00
 922              	.LASF24:
 923 0215 7475726E 		.ascii	"turnLeft\000"
 923      4C656674 
 923      00
 924              	.LASF10:
 925 021e 696E7433 		.ascii	"int32_t\000"
 925      325F7400 
 926              	.LASF16:
 927 0226 73697A65 		.ascii	"sizetype\000"
 927      74797065 
 927      00
 928              	.LASF6:
 929 022f 6C6F6E67 		.ascii	"long long int\000"
 929      206C6F6E 
 929      6720696E 
 929      7400
 930              	.LASF14:
 931 023d 63686172 		.ascii	"char\000"
 931      00
 932              	.LASF26:
 933 0242 6D6F7665 		.ascii	"moveForward\000"
 933      466F7277 
 933      61726400 
 934              	.LASF18:
 935 024e 726F7461 		.ascii	"rotationClockwise\000"
 935      74696F6E 
 935      436C6F63 
 935      6B776973 
 935      6500
 936              	.LASF2:
 937 0260 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\ccURCBma.s 			page 21


 937      7420696E 
 937      7400
 938              	.LASF4:
 939 026a 6C6F6E67 		.ascii	"long int\000"
 939      20696E74 
 939      00
 940              	.LASF15:
 941 0273 6C6F6E67 		.ascii	"long double\000"
 941      20646F75 
 941      626C6500 
 942              	.LASF0:
 943 027f 7369676E 		.ascii	"signed char\000"
 943      65642063 
 943      68617200 
 944              	.LASF17:
 945 028b 6D6F7665 		.ascii	"moveForwardForSpecifiedCount\000"
 945      466F7277 
 945      61726446 
 945      6F725370 
 945      65636966 
 946              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
