ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwn8VS1.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"movement.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	turnCount
  20              		.bss
  21              		.align	1
  22              		.type	turnCount, %object
  23              		.size	turnCount, 2
  24              	turnCount:
  25 0000 0000     		.space	2
  26              		.global	maxTurnCount
  27              		.data
  28              		.align	1
  29              		.type	maxTurnCount, %object
  30              		.size	maxTurnCount, 2
  31              	maxTurnCount:
  32 0000 1900     		.short	25
  33              		.section	.text.stopMoving,"ax",%progbits
  34              		.align	2
  35              		.global	stopMoving
  36              		.thumb
  37              		.thumb_func
  38              		.type	stopMoving, %function
  39              	stopMoving:
  40              	.LFB64:
  41              		.file 1 "movement.c"
   1:movement.c    **** /* ========================================
   2:movement.c    ****  *
   3:movement.c    ****  * Copyright YOUR COMPANY, THE YEAR
   4:movement.c    ****  * All Rights Reserved
   5:movement.c    ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:movement.c    ****  *
   7:movement.c    ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:movement.c    ****  * WHICH IS THE PROPERTY OF your company.
   9:movement.c    ****  *
  10:movement.c    ****  * ========================================
  11:movement.c    **** */
  12:movement.c    **** #include "project.h"
  13:movement.c    **** 
  14:movement.c    **** #include <stdio.h>
  15:movement.c    **** #include <string.h>
  16:movement.c    **** #include <stdlib.h>
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwn8VS1.s 			page 2


  17:movement.c    **** 
  18:movement.c    **** uint16 turnCount = 0;
  19:movement.c    **** uint16 maxTurnCount = 25; // clock counts for one complete 90 deg turn
  20:movement.c    **** 
  21:movement.c    **** // Direction/ Movement macros
  22:movement.c    **** //* ========================================
  23:movement.c    **** // stop moving
  24:movement.c    **** void stopMoving() {
  42              		.loc 1 24 0
  43              		.cfi_startproc
  44              		@ args = 0, pretend = 0, frame = 0
  45              		@ frame_needed = 1, uses_anonymous_args = 0
  46 0000 80B5     		push	{r7, lr}
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 00AF     		add	r7, sp, #0
  51              		.cfi_def_cfa_register 7
  25:movement.c    ****     PWM_1_WriteCompare(32768); // 50%
  52              		.loc 1 25 0
  53 0004 4FF40040 		mov	r0, #32768
  54 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
  26:movement.c    ****     PWM_2_WriteCompare(32768); // 50%
  55              		.loc 1 26 0
  56 000c 4FF40040 		mov	r0, #32768
  57 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
  27:movement.c    **** }
  58              		.loc 1 27 0
  59 0014 00BF     		nop
  60 0016 80BD     		pop	{r7, pc}
  61              		.cfi_endproc
  62              	.LFE64:
  63              		.size	stopMoving, .-stopMoving
  64              		.section	.text.moveForwardForSpecifiedCount,"ax",%progbits
  65              		.align	2
  66              		.global	moveForwardForSpecifiedCount
  67              		.thumb
  68              		.thumb_func
  69              		.type	moveForwardForSpecifiedCount, %function
  70              	moveForwardForSpecifiedCount:
  71              	.LFB65:
  28:movement.c    **** 
  29:movement.c    **** void moveForwardForSpecifiedCount() {
  72              		.loc 1 29 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 8
  75              		@ frame_needed = 1, uses_anonymous_args = 0
  76 0000 80B5     		push	{r7, lr}
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 82B0     		sub	sp, sp, #8
  81              		.cfi_def_cfa_offset 16
  82 0004 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  30:movement.c    ****     PWM_1_WriteCompare(42598); // 65%
  84              		.loc 1 30 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwn8VS1.s 			page 3


  85 0006 4AF26660 		movw	r0, #42598
  86 000a FFF7FEFF 		bl	PWM_1_WriteCompare
  31:movement.c    ****     PWM_2_WriteCompare(22937); // 35%
  87              		.loc 1 31 0
  88 000e 45F69910 		movw	r0, #22937
  89 0012 FFF7FEFF 		bl	PWM_2_WriteCompare
  32:movement.c    ****     
  33:movement.c    ****     int quadPulseCount = 0;
  90              		.loc 1 33 0
  91 0016 0023     		movs	r3, #0
  92 0018 7B60     		str	r3, [r7, #4]
  34:movement.c    ****     QuadDec_M1_SetCounter(0);
  93              		.loc 1 34 0
  94 001a 0020     		movs	r0, #0
  95 001c FFF7FEFF 		bl	QuadDec_M1_SetCounter
  35:movement.c    ****     while(quadPulseCount < 110) {
  96              		.loc 1 35 0
  97 0020 03E0     		b	.L3
  98              	.L4:
  36:movement.c    ****         quadPulseCount = QuadDec_M1_GetCounter();
  99              		.loc 1 36 0
 100 0022 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 101 0026 0346     		mov	r3, r0
 102 0028 7B60     		str	r3, [r7, #4]
 103              	.L3:
  35:movement.c    ****     while(quadPulseCount < 110) {
 104              		.loc 1 35 0
 105 002a 7B68     		ldr	r3, [r7, #4]
 106 002c 6D2B     		cmp	r3, #109
 107 002e F8DD     		ble	.L4
  37:movement.c    ****     }
  38:movement.c    ****     QuadDec_M1_SetCounter(0);
 108              		.loc 1 38 0
 109 0030 0020     		movs	r0, #0
 110 0032 FFF7FEFF 		bl	QuadDec_M1_SetCounter
  39:movement.c    **** }
 111              		.loc 1 39 0
 112 0036 00BF     		nop
 113 0038 0837     		adds	r7, r7, #8
 114              		.cfi_def_cfa_offset 8
 115 003a BD46     		mov	sp, r7
 116              		.cfi_def_cfa_register 13
 117              		@ sp needed
 118 003c 80BD     		pop	{r7, pc}
 119              		.cfi_endproc
 120              	.LFE65:
 121              		.size	moveForwardForSpecifiedCount, .-moveForwardForSpecifiedCount
 122 003e 00BF     		.section	.text.rotationClockwise,"ax",%progbits
 123              		.align	2
 124              		.global	rotationClockwise
 125              		.thumb
 126              		.thumb_func
 127              		.type	rotationClockwise, %function
 128              	rotationClockwise:
 129              	.LFB66:
  40:movement.c    **** 
  41:movement.c    **** // rotate clockwise 90deg
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwn8VS1.s 			page 4


  42:movement.c    **** void rotationClockwise() {
 130              		.loc 1 42 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 8
 133              		@ frame_needed = 1, uses_anonymous_args = 0
 134 0000 80B5     		push	{r7, lr}
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 7, -8
 137              		.cfi_offset 14, -4
 138 0002 82B0     		sub	sp, sp, #8
 139              		.cfi_def_cfa_offset 16
 140 0004 00AF     		add	r7, sp, #0
 141              		.cfi_def_cfa_register 7
  43:movement.c    ****     PWM_1_WriteCompare(42598); // 65%
 142              		.loc 1 43 0
 143 0006 4AF26660 		movw	r0, #42598
 144 000a FFF7FEFF 		bl	PWM_1_WriteCompare
  44:movement.c    ****     PWM_2_WriteCompare(42598); // 65%
 145              		.loc 1 44 0
 146 000e 4AF26660 		movw	r0, #42598
 147 0012 FFF7FEFF 		bl	PWM_2_WriteCompare
  45:movement.c    ****     
  46:movement.c    ****     int quadPulseCount = 0;
 148              		.loc 1 46 0
 149 0016 0023     		movs	r3, #0
 150 0018 7B60     		str	r3, [r7, #4]
  47:movement.c    ****     QuadDec_M1_SetCounter(0);
 151              		.loc 1 47 0
 152 001a 0020     		movs	r0, #0
 153 001c FFF7FEFF 		bl	QuadDec_M1_SetCounter
  48:movement.c    ****     while(quadPulseCount < 110) {
 154              		.loc 1 48 0
 155 0020 03E0     		b	.L6
 156              	.L7:
  49:movement.c    ****         quadPulseCount = QuadDec_M1_GetCounter();
 157              		.loc 1 49 0
 158 0022 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 159 0026 0346     		mov	r3, r0
 160 0028 7B60     		str	r3, [r7, #4]
 161              	.L6:
  48:movement.c    ****     while(quadPulseCount < 110) {
 162              		.loc 1 48 0
 163 002a 7B68     		ldr	r3, [r7, #4]
 164 002c 6D2B     		cmp	r3, #109
 165 002e F8DD     		ble	.L7
  50:movement.c    ****     }
  51:movement.c    ****     QuadDec_M1_SetCounter(0);
 166              		.loc 1 51 0
 167 0030 0020     		movs	r0, #0
 168 0032 FFF7FEFF 		bl	QuadDec_M1_SetCounter
  52:movement.c    ****     //CyDelay(500); // change to quadrature encoder pulses, rather than time delay
  53:movement.c    ****     //stopMoving(); // stop movement, ready for next instruction
  54:movement.c    **** }
 169              		.loc 1 54 0
 170 0036 00BF     		nop
 171 0038 0837     		adds	r7, r7, #8
 172              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwn8VS1.s 			page 5


 173 003a BD46     		mov	sp, r7
 174              		.cfi_def_cfa_register 13
 175              		@ sp needed
 176 003c 80BD     		pop	{r7, pc}
 177              		.cfi_endproc
 178              	.LFE66:
 179              		.size	rotationClockwise, .-rotationClockwise
 180 003e 00BF     		.section	.text.rotationAntiClockwise,"ax",%progbits
 181              		.align	2
 182              		.global	rotationAntiClockwise
 183              		.thumb
 184              		.thumb_func
 185              		.type	rotationAntiClockwise, %function
 186              	rotationAntiClockwise:
 187              	.LFB67:
  55:movement.c    **** 
  56:movement.c    **** // rotate anticlockwise 90deg
  57:movement.c    **** void rotationAntiClockwise() {
 188              		.loc 1 57 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 8
 191              		@ frame_needed = 1, uses_anonymous_args = 0
 192 0000 80B5     		push	{r7, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 7, -8
 195              		.cfi_offset 14, -4
 196 0002 82B0     		sub	sp, sp, #8
 197              		.cfi_def_cfa_offset 16
 198 0004 00AF     		add	r7, sp, #0
 199              		.cfi_def_cfa_register 7
  58:movement.c    ****     PWM_1_WriteCompare(22937); // 35%
 200              		.loc 1 58 0
 201 0006 45F69910 		movw	r0, #22937
 202 000a FFF7FEFF 		bl	PWM_1_WriteCompare
  59:movement.c    ****     PWM_2_WriteCompare(22937); // 35%
 203              		.loc 1 59 0
 204 000e 45F69910 		movw	r0, #22937
 205 0012 FFF7FEFF 		bl	PWM_2_WriteCompare
  60:movement.c    ****     
  61:movement.c    ****     int quadPulseCount = 0;
 206              		.loc 1 61 0
 207 0016 0023     		movs	r3, #0
 208 0018 7B60     		str	r3, [r7, #4]
  62:movement.c    ****     QuadDec_M1_SetCounter(0);
 209              		.loc 1 62 0
 210 001a 0020     		movs	r0, #0
 211 001c FFF7FEFF 		bl	QuadDec_M1_SetCounter
  63:movement.c    ****     while(quadPulseCount > -105) {
 212              		.loc 1 63 0
 213 0020 03E0     		b	.L9
 214              	.L10:
  64:movement.c    ****         quadPulseCount = QuadDec_M1_GetCounter();  
 215              		.loc 1 64 0
 216 0022 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 217 0026 0346     		mov	r3, r0
 218 0028 7B60     		str	r3, [r7, #4]
 219              	.L9:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwn8VS1.s 			page 6


  63:movement.c    ****     while(quadPulseCount > -105) {
 220              		.loc 1 63 0
 221 002a 7B68     		ldr	r3, [r7, #4]
 222 002c 13F1680F 		cmn	r3, #104
 223 0030 F7DA     		bge	.L10
  65:movement.c    ****     }
  66:movement.c    ****     QuadDec_M1_SetCounter(0);
 224              		.loc 1 66 0
 225 0032 0020     		movs	r0, #0
 226 0034 FFF7FEFF 		bl	QuadDec_M1_SetCounter
  67:movement.c    ****     //CyDelay(500);
  68:movement.c    ****     //stopMoving(); // stop movement, ready for next instruction
  69:movement.c    **** }
 227              		.loc 1 69 0
 228 0038 00BF     		nop
 229 003a 0837     		adds	r7, r7, #8
 230              		.cfi_def_cfa_offset 8
 231 003c BD46     		mov	sp, r7
 232              		.cfi_def_cfa_register 13
 233              		@ sp needed
 234 003e 80BD     		pop	{r7, pc}
 235              		.cfi_endproc
 236              	.LFE67:
 237              		.size	rotationAntiClockwise, .-rotationAntiClockwise
 238              		.section	.text.keepRotatingClockwise,"ax",%progbits
 239              		.align	2
 240              		.global	keepRotatingClockwise
 241              		.thumb
 242              		.thumb_func
 243              		.type	keepRotatingClockwise, %function
 244              	keepRotatingClockwise:
 245              	.LFB68:
  70:movement.c    **** 
  71:movement.c    **** // keep rotating clockwise
  72:movement.c    **** // used for adjusting deviations
  73:movement.c    **** void keepRotatingClockwise() {
 246              		.loc 1 73 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 1, uses_anonymous_args = 0
 250 0000 80B5     		push	{r7, lr}
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 7, -8
 253              		.cfi_offset 14, -4
 254 0002 00AF     		add	r7, sp, #0
 255              		.cfi_def_cfa_register 7
  74:movement.c    ****     PWM_1_WriteCompare(36044); // 55%
 256              		.loc 1 74 0
 257 0004 48F6CC40 		movw	r0, #36044
 258 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
  75:movement.c    ****     PWM_2_WriteCompare(36044); // 55%
 259              		.loc 1 75 0
 260 000c 48F6CC40 		movw	r0, #36044
 261 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
  76:movement.c    ****     
  77:movement.c    **** }
 262              		.loc 1 77 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwn8VS1.s 			page 7


 263 0014 00BF     		nop
 264 0016 80BD     		pop	{r7, pc}
 265              		.cfi_endproc
 266              	.LFE68:
 267              		.size	keepRotatingClockwise, .-keepRotatingClockwise
 268              		.section	.text.keepRotatingAntiClockwise,"ax",%progbits
 269              		.align	2
 270              		.global	keepRotatingAntiClockwise
 271              		.thumb
 272              		.thumb_func
 273              		.type	keepRotatingAntiClockwise, %function
 274              	keepRotatingAntiClockwise:
 275              	.LFB69:
  78:movement.c    **** 
  79:movement.c    **** // keep rotating anticlockwise
  80:movement.c    **** // used for adjusting deviations
  81:movement.c    **** void keepRotatingAntiClockwise() {
 276              		.loc 1 81 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 1, uses_anonymous_args = 0
 280 0000 80B5     		push	{r7, lr}
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 7, -8
 283              		.cfi_offset 14, -4
 284 0002 00AF     		add	r7, sp, #0
 285              		.cfi_def_cfa_register 7
  82:movement.c    ****     PWM_1_WriteCompare(29491); // 45%
 286              		.loc 1 82 0
 287 0004 47F23330 		movw	r0, #29491
 288 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
  83:movement.c    ****     PWM_2_WriteCompare(29491); // 45%
 289              		.loc 1 83 0
 290 000c 47F23330 		movw	r0, #29491
 291 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
  84:movement.c    **** }
 292              		.loc 1 84 0
 293 0014 00BF     		nop
 294 0016 80BD     		pop	{r7, pc}
 295              		.cfi_endproc
 296              	.LFE69:
 297              		.size	keepRotatingAntiClockwise, .-keepRotatingAntiClockwise
 298              		.section	.text.moveForward,"ax",%progbits
 299              		.align	2
 300              		.global	moveForward
 301              		.thumb
 302              		.thumb_func
 303              		.type	moveForward, %function
 304              	moveForward:
 305              	.LFB70:
  85:movement.c    **** 
  86:movement.c    **** void moveForward() {
 306              		.loc 1 86 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 1, uses_anonymous_args = 0
 310 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwn8VS1.s 			page 8


 311              		.cfi_def_cfa_offset 8
 312              		.cfi_offset 7, -8
 313              		.cfi_offset 14, -4
 314 0002 00AF     		add	r7, sp, #0
 315              		.cfi_def_cfa_register 7
  87:movement.c    ****     PWM_1_WriteCompare(42598); // 65%
 316              		.loc 1 87 0
 317 0004 4AF26660 		movw	r0, #42598
 318 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
  88:movement.c    ****     PWM_2_WriteCompare(22937); // 35%
 319              		.loc 1 88 0
 320 000c 45F69910 		movw	r0, #22937
 321 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
  89:movement.c    **** }
 322              		.loc 1 89 0
 323 0014 00BF     		nop
 324 0016 80BD     		pop	{r7, pc}
 325              		.cfi_endproc
 326              	.LFE70:
 327              		.size	moveForward, .-moveForward
 328              		.text
 329              	.Letext0:
 330              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 331              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 332              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 333              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 334              		.section	.debug_info,"",%progbits
 335              	.Ldebug_info0:
 336 0000 90010000 		.4byte	0x190
 337 0004 0400     		.2byte	0x4
 338 0006 00000000 		.4byte	.Ldebug_abbrev0
 339 000a 04       		.byte	0x4
 340 000b 01       		.uleb128 0x1
 341 000c 0B000000 		.4byte	.LASF28
 342 0010 0C       		.byte	0xc
 343 0011 F6010000 		.4byte	.LASF29
 344 0015 1B010000 		.4byte	.LASF30
 345 0019 00000000 		.4byte	.Ldebug_ranges0+0
 346 001d 00000000 		.4byte	0
 347 0021 00000000 		.4byte	.Ldebug_line0
 348 0025 02       		.uleb128 0x2
 349 0026 01       		.byte	0x1
 350 0027 06       		.byte	0x6
 351 0028 78020000 		.4byte	.LASF0
 352 002c 02       		.uleb128 0x2
 353 002d 01       		.byte	0x1
 354 002e 08       		.byte	0x8
 355 002f C3000000 		.4byte	.LASF1
 356 0033 02       		.uleb128 0x2
 357 0034 02       		.byte	0x2
 358 0035 05       		.byte	0x5
 359 0036 43020000 		.4byte	.LASF2
 360 003a 02       		.uleb128 0x2
 361 003b 02       		.byte	0x2
 362 003c 07       		.byte	0x7
 363 003d E3000000 		.4byte	.LASF3
 364 0041 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwn8VS1.s 			page 9


 365 0042 99000000 		.4byte	.LASF9
 366 0046 02       		.byte	0x2
 367 0047 3F       		.byte	0x3f
 368 0048 4C000000 		.4byte	0x4c
 369 004c 02       		.uleb128 0x2
 370 004d 04       		.byte	0x4
 371 004e 05       		.byte	0x5
 372 004f 63020000 		.4byte	.LASF4
 373 0053 02       		.uleb128 0x2
 374 0054 04       		.byte	0x4
 375 0055 07       		.byte	0x7
 376 0056 D1000000 		.4byte	.LASF5
 377 005a 02       		.uleb128 0x2
 378 005b 08       		.byte	0x8
 379 005c 05       		.byte	0x5
 380 005d 12020000 		.4byte	.LASF6
 381 0061 02       		.uleb128 0x2
 382 0062 08       		.byte	0x8
 383 0063 07       		.byte	0x7
 384 0064 D2010000 		.4byte	.LASF7
 385 0068 04       		.uleb128 0x4
 386 0069 04       		.byte	0x4
 387 006a 05       		.byte	0x5
 388 006b 696E7400 		.ascii	"int\000"
 389 006f 02       		.uleb128 0x2
 390 0070 04       		.byte	0x4
 391 0071 07       		.byte	0x7
 392 0072 BB010000 		.4byte	.LASF8
 393 0076 03       		.uleb128 0x3
 394 0077 01020000 		.4byte	.LASF10
 395 007b 03       		.byte	0x3
 396 007c 2C       		.byte	0x2c
 397 007d 41000000 		.4byte	0x41
 398 0081 05       		.uleb128 0x5
 399 0082 A7010000 		.4byte	.LASF11
 400 0086 04       		.byte	0x4
 401 0087 E801     		.2byte	0x1e8
 402 0089 3A000000 		.4byte	0x3a
 403 008d 02       		.uleb128 0x2
 404 008e 04       		.byte	0x4
 405 008f 04       		.byte	0x4
 406 0090 BD000000 		.4byte	.LASF12
 407 0094 02       		.uleb128 0x2
 408 0095 08       		.byte	0x8
 409 0096 04       		.byte	0x4
 410 0097 A0010000 		.4byte	.LASF13
 411 009b 02       		.uleb128 0x2
 412 009c 01       		.byte	0x1
 413 009d 08       		.byte	0x8
 414 009e 20020000 		.4byte	.LASF14
 415 00a2 02       		.uleb128 0x2
 416 00a3 08       		.byte	0x8
 417 00a4 04       		.byte	0x4
 418 00a5 6C020000 		.4byte	.LASF15
 419 00a9 02       		.uleb128 0x2
 420 00aa 04       		.byte	0x4
 421 00ab 07       		.byte	0x7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwn8VS1.s 			page 10


 422 00ac 09020000 		.4byte	.LASF16
 423 00b0 06       		.uleb128 0x6
 424 00b1 00000000 		.4byte	.LASF21
 425 00b5 01       		.byte	0x1
 426 00b6 18       		.byte	0x18
 427 00b7 00000000 		.4byte	.LFB64
 428 00bb 18000000 		.4byte	.LFE64-.LFB64
 429 00bf 01       		.uleb128 0x1
 430 00c0 9C       		.byte	0x9c
 431 00c1 07       		.uleb128 0x7
 432 00c2 84020000 		.4byte	.LASF17
 433 00c6 01       		.byte	0x1
 434 00c7 1D       		.byte	0x1d
 435 00c8 00000000 		.4byte	.LFB65
 436 00cc 3E000000 		.4byte	.LFE65-.LFB65
 437 00d0 01       		.uleb128 0x1
 438 00d1 9C       		.byte	0x9c
 439 00d2 E5000000 		.4byte	0xe5
 440 00d6 08       		.uleb128 0x8
 441 00d7 0C010000 		.4byte	.LASF19
 442 00db 01       		.byte	0x1
 443 00dc 21       		.byte	0x21
 444 00dd 68000000 		.4byte	0x68
 445 00e1 02       		.uleb128 0x2
 446 00e2 91       		.byte	0x91
 447 00e3 74       		.sleb128 -12
 448 00e4 00       		.byte	0
 449 00e5 07       		.uleb128 0x7
 450 00e6 31020000 		.4byte	.LASF18
 451 00ea 01       		.byte	0x1
 452 00eb 2A       		.byte	0x2a
 453 00ec 00000000 		.4byte	.LFB66
 454 00f0 3E000000 		.4byte	.LFE66-.LFB66
 455 00f4 01       		.uleb128 0x1
 456 00f5 9C       		.byte	0x9c
 457 00f6 09010000 		.4byte	0x109
 458 00fa 08       		.uleb128 0x8
 459 00fb 0C010000 		.4byte	.LASF19
 460 00ff 01       		.byte	0x1
 461 0100 2E       		.byte	0x2e
 462 0101 68000000 		.4byte	0x68
 463 0105 02       		.uleb128 0x2
 464 0106 91       		.byte	0x91
 465 0107 74       		.sleb128 -12
 466 0108 00       		.byte	0
 467 0109 07       		.uleb128 0x7
 468 010a F6000000 		.4byte	.LASF20
 469 010e 01       		.byte	0x1
 470 010f 39       		.byte	0x39
 471 0110 00000000 		.4byte	.LFB67
 472 0114 40000000 		.4byte	.LFE67-.LFB67
 473 0118 01       		.uleb128 0x1
 474 0119 9C       		.byte	0x9c
 475 011a 2D010000 		.4byte	0x12d
 476 011e 08       		.uleb128 0x8
 477 011f 0C010000 		.4byte	.LASF19
 478 0123 01       		.byte	0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwn8VS1.s 			page 11


 479 0124 3D       		.byte	0x3d
 480 0125 68000000 		.4byte	0x68
 481 0129 02       		.uleb128 0x2
 482 012a 91       		.byte	0x91
 483 012b 74       		.sleb128 -12
 484 012c 00       		.byte	0
 485 012d 06       		.uleb128 0x6
 486 012e 4D020000 		.4byte	.LASF22
 487 0132 01       		.byte	0x1
 488 0133 49       		.byte	0x49
 489 0134 00000000 		.4byte	.LFB68
 490 0138 18000000 		.4byte	.LFE68-.LFB68
 491 013c 01       		.uleb128 0x1
 492 013d 9C       		.byte	0x9c
 493 013e 06       		.uleb128 0x6
 494 013f A3000000 		.4byte	.LASF23
 495 0143 01       		.byte	0x1
 496 0144 51       		.byte	0x51
 497 0145 00000000 		.4byte	.LFB69
 498 0149 18000000 		.4byte	.LFE69-.LFB69
 499 014d 01       		.uleb128 0x1
 500 014e 9C       		.byte	0x9c
 501 014f 06       		.uleb128 0x6
 502 0150 25020000 		.4byte	.LASF24
 503 0154 01       		.byte	0x1
 504 0155 56       		.byte	0x56
 505 0156 00000000 		.4byte	.LFB70
 506 015a 18000000 		.4byte	.LFE70-.LFB70
 507 015e 01       		.uleb128 0x1
 508 015f 9C       		.byte	0x9c
 509 0160 09       		.uleb128 0x9
 510 0161 AE010000 		.4byte	.LASF25
 511 0165 05       		.byte	0x5
 512 0166 1207     		.2byte	0x712
 513 0168 6C010000 		.4byte	0x16c
 514 016c 0A       		.uleb128 0xa
 515 016d 76000000 		.4byte	0x76
 516 0171 0B       		.uleb128 0xb
 517 0172 C8010000 		.4byte	.LASF26
 518 0176 01       		.byte	0x1
 519 0177 12       		.byte	0x12
 520 0178 81000000 		.4byte	0x81
 521 017c 05       		.uleb128 0x5
 522 017d 03       		.byte	0x3
 523 017e 00000000 		.4byte	turnCount
 524 0182 0B       		.uleb128 0xb
 525 0183 E9010000 		.4byte	.LASF27
 526 0187 01       		.byte	0x1
 527 0188 13       		.byte	0x13
 528 0189 81000000 		.4byte	0x81
 529 018d 05       		.uleb128 0x5
 530 018e 03       		.byte	0x3
 531 018f 00000000 		.4byte	maxTurnCount
 532 0193 00       		.byte	0
 533              		.section	.debug_abbrev,"",%progbits
 534              	.Ldebug_abbrev0:
 535 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwn8VS1.s 			page 12


 536 0001 11       		.uleb128 0x11
 537 0002 01       		.byte	0x1
 538 0003 25       		.uleb128 0x25
 539 0004 0E       		.uleb128 0xe
 540 0005 13       		.uleb128 0x13
 541 0006 0B       		.uleb128 0xb
 542 0007 03       		.uleb128 0x3
 543 0008 0E       		.uleb128 0xe
 544 0009 1B       		.uleb128 0x1b
 545 000a 0E       		.uleb128 0xe
 546 000b 55       		.uleb128 0x55
 547 000c 17       		.uleb128 0x17
 548 000d 11       		.uleb128 0x11
 549 000e 01       		.uleb128 0x1
 550 000f 10       		.uleb128 0x10
 551 0010 17       		.uleb128 0x17
 552 0011 00       		.byte	0
 553 0012 00       		.byte	0
 554 0013 02       		.uleb128 0x2
 555 0014 24       		.uleb128 0x24
 556 0015 00       		.byte	0
 557 0016 0B       		.uleb128 0xb
 558 0017 0B       		.uleb128 0xb
 559 0018 3E       		.uleb128 0x3e
 560 0019 0B       		.uleb128 0xb
 561 001a 03       		.uleb128 0x3
 562 001b 0E       		.uleb128 0xe
 563 001c 00       		.byte	0
 564 001d 00       		.byte	0
 565 001e 03       		.uleb128 0x3
 566 001f 16       		.uleb128 0x16
 567 0020 00       		.byte	0
 568 0021 03       		.uleb128 0x3
 569 0022 0E       		.uleb128 0xe
 570 0023 3A       		.uleb128 0x3a
 571 0024 0B       		.uleb128 0xb
 572 0025 3B       		.uleb128 0x3b
 573 0026 0B       		.uleb128 0xb
 574 0027 49       		.uleb128 0x49
 575 0028 13       		.uleb128 0x13
 576 0029 00       		.byte	0
 577 002a 00       		.byte	0
 578 002b 04       		.uleb128 0x4
 579 002c 24       		.uleb128 0x24
 580 002d 00       		.byte	0
 581 002e 0B       		.uleb128 0xb
 582 002f 0B       		.uleb128 0xb
 583 0030 3E       		.uleb128 0x3e
 584 0031 0B       		.uleb128 0xb
 585 0032 03       		.uleb128 0x3
 586 0033 08       		.uleb128 0x8
 587 0034 00       		.byte	0
 588 0035 00       		.byte	0
 589 0036 05       		.uleb128 0x5
 590 0037 16       		.uleb128 0x16
 591 0038 00       		.byte	0
 592 0039 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwn8VS1.s 			page 13


 593 003a 0E       		.uleb128 0xe
 594 003b 3A       		.uleb128 0x3a
 595 003c 0B       		.uleb128 0xb
 596 003d 3B       		.uleb128 0x3b
 597 003e 05       		.uleb128 0x5
 598 003f 49       		.uleb128 0x49
 599 0040 13       		.uleb128 0x13
 600 0041 00       		.byte	0
 601 0042 00       		.byte	0
 602 0043 06       		.uleb128 0x6
 603 0044 2E       		.uleb128 0x2e
 604 0045 00       		.byte	0
 605 0046 3F       		.uleb128 0x3f
 606 0047 19       		.uleb128 0x19
 607 0048 03       		.uleb128 0x3
 608 0049 0E       		.uleb128 0xe
 609 004a 3A       		.uleb128 0x3a
 610 004b 0B       		.uleb128 0xb
 611 004c 3B       		.uleb128 0x3b
 612 004d 0B       		.uleb128 0xb
 613 004e 11       		.uleb128 0x11
 614 004f 01       		.uleb128 0x1
 615 0050 12       		.uleb128 0x12
 616 0051 06       		.uleb128 0x6
 617 0052 40       		.uleb128 0x40
 618 0053 18       		.uleb128 0x18
 619 0054 9642     		.uleb128 0x2116
 620 0056 19       		.uleb128 0x19
 621 0057 00       		.byte	0
 622 0058 00       		.byte	0
 623 0059 07       		.uleb128 0x7
 624 005a 2E       		.uleb128 0x2e
 625 005b 01       		.byte	0x1
 626 005c 3F       		.uleb128 0x3f
 627 005d 19       		.uleb128 0x19
 628 005e 03       		.uleb128 0x3
 629 005f 0E       		.uleb128 0xe
 630 0060 3A       		.uleb128 0x3a
 631 0061 0B       		.uleb128 0xb
 632 0062 3B       		.uleb128 0x3b
 633 0063 0B       		.uleb128 0xb
 634 0064 11       		.uleb128 0x11
 635 0065 01       		.uleb128 0x1
 636 0066 12       		.uleb128 0x12
 637 0067 06       		.uleb128 0x6
 638 0068 40       		.uleb128 0x40
 639 0069 18       		.uleb128 0x18
 640 006a 9642     		.uleb128 0x2116
 641 006c 19       		.uleb128 0x19
 642 006d 01       		.uleb128 0x1
 643 006e 13       		.uleb128 0x13
 644 006f 00       		.byte	0
 645 0070 00       		.byte	0
 646 0071 08       		.uleb128 0x8
 647 0072 34       		.uleb128 0x34
 648 0073 00       		.byte	0
 649 0074 03       		.uleb128 0x3
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwn8VS1.s 			page 14


 650 0075 0E       		.uleb128 0xe
 651 0076 3A       		.uleb128 0x3a
 652 0077 0B       		.uleb128 0xb
 653 0078 3B       		.uleb128 0x3b
 654 0079 0B       		.uleb128 0xb
 655 007a 49       		.uleb128 0x49
 656 007b 13       		.uleb128 0x13
 657 007c 02       		.uleb128 0x2
 658 007d 18       		.uleb128 0x18
 659 007e 00       		.byte	0
 660 007f 00       		.byte	0
 661 0080 09       		.uleb128 0x9
 662 0081 34       		.uleb128 0x34
 663 0082 00       		.byte	0
 664 0083 03       		.uleb128 0x3
 665 0084 0E       		.uleb128 0xe
 666 0085 3A       		.uleb128 0x3a
 667 0086 0B       		.uleb128 0xb
 668 0087 3B       		.uleb128 0x3b
 669 0088 05       		.uleb128 0x5
 670 0089 49       		.uleb128 0x49
 671 008a 13       		.uleb128 0x13
 672 008b 3F       		.uleb128 0x3f
 673 008c 19       		.uleb128 0x19
 674 008d 3C       		.uleb128 0x3c
 675 008e 19       		.uleb128 0x19
 676 008f 00       		.byte	0
 677 0090 00       		.byte	0
 678 0091 0A       		.uleb128 0xa
 679 0092 35       		.uleb128 0x35
 680 0093 00       		.byte	0
 681 0094 49       		.uleb128 0x49
 682 0095 13       		.uleb128 0x13
 683 0096 00       		.byte	0
 684 0097 00       		.byte	0
 685 0098 0B       		.uleb128 0xb
 686 0099 34       		.uleb128 0x34
 687 009a 00       		.byte	0
 688 009b 03       		.uleb128 0x3
 689 009c 0E       		.uleb128 0xe
 690 009d 3A       		.uleb128 0x3a
 691 009e 0B       		.uleb128 0xb
 692 009f 3B       		.uleb128 0x3b
 693 00a0 0B       		.uleb128 0xb
 694 00a1 49       		.uleb128 0x49
 695 00a2 13       		.uleb128 0x13
 696 00a3 3F       		.uleb128 0x3f
 697 00a4 19       		.uleb128 0x19
 698 00a5 02       		.uleb128 0x2
 699 00a6 18       		.uleb128 0x18
 700 00a7 00       		.byte	0
 701 00a8 00       		.byte	0
 702 00a9 00       		.byte	0
 703              		.section	.debug_aranges,"",%progbits
 704 0000 4C000000 		.4byte	0x4c
 705 0004 0200     		.2byte	0x2
 706 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwn8VS1.s 			page 15


 707 000a 04       		.byte	0x4
 708 000b 00       		.byte	0
 709 000c 0000     		.2byte	0
 710 000e 0000     		.2byte	0
 711 0010 00000000 		.4byte	.LFB64
 712 0014 18000000 		.4byte	.LFE64-.LFB64
 713 0018 00000000 		.4byte	.LFB65
 714 001c 3E000000 		.4byte	.LFE65-.LFB65
 715 0020 00000000 		.4byte	.LFB66
 716 0024 3E000000 		.4byte	.LFE66-.LFB66
 717 0028 00000000 		.4byte	.LFB67
 718 002c 40000000 		.4byte	.LFE67-.LFB67
 719 0030 00000000 		.4byte	.LFB68
 720 0034 18000000 		.4byte	.LFE68-.LFB68
 721 0038 00000000 		.4byte	.LFB69
 722 003c 18000000 		.4byte	.LFE69-.LFB69
 723 0040 00000000 		.4byte	.LFB70
 724 0044 18000000 		.4byte	.LFE70-.LFB70
 725 0048 00000000 		.4byte	0
 726 004c 00000000 		.4byte	0
 727              		.section	.debug_ranges,"",%progbits
 728              	.Ldebug_ranges0:
 729 0000 00000000 		.4byte	.LFB64
 730 0004 18000000 		.4byte	.LFE64
 731 0008 00000000 		.4byte	.LFB65
 732 000c 3E000000 		.4byte	.LFE65
 733 0010 00000000 		.4byte	.LFB66
 734 0014 3E000000 		.4byte	.LFE66
 735 0018 00000000 		.4byte	.LFB67
 736 001c 40000000 		.4byte	.LFE67
 737 0020 00000000 		.4byte	.LFB68
 738 0024 18000000 		.4byte	.LFE68
 739 0028 00000000 		.4byte	.LFB69
 740 002c 18000000 		.4byte	.LFE69
 741 0030 00000000 		.4byte	.LFB70
 742 0034 18000000 		.4byte	.LFE70
 743 0038 00000000 		.4byte	0
 744 003c 00000000 		.4byte	0
 745              		.section	.debug_line,"",%progbits
 746              	.Ldebug_line0:
 747 0000 E9010000 		.section	.debug_str,"MS",%progbits,1
 747      02005001 
 747      00000201 
 747      FB0E0D00 
 747      01010101 
 748              	.LASF21:
 749 0000 73746F70 		.ascii	"stopMoving\000"
 749      4D6F7669 
 749      6E6700
 750              	.LASF28:
 751 000b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 751      43313120 
 751      352E342E 
 751      31203230 
 751      31363036 
 752 003e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 752      20726576 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwn8VS1.s 			page 16


 752      6973696F 
 752      6E203233 
 752      37373135 
 753 0071 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 753      66756E63 
 753      74696F6E 
 753      2D736563 
 753      74696F6E 
 754              	.LASF9:
 755 0099 5F5F696E 		.ascii	"__int32_t\000"
 755      7433325F 
 755      7400
 756              	.LASF23:
 757 00a3 6B656570 		.ascii	"keepRotatingAntiClockwise\000"
 757      526F7461 
 757      74696E67 
 757      416E7469 
 757      436C6F63 
 758              	.LASF12:
 759 00bd 666C6F61 		.ascii	"float\000"
 759      7400
 760              	.LASF1:
 761 00c3 756E7369 		.ascii	"unsigned char\000"
 761      676E6564 
 761      20636861 
 761      7200
 762              	.LASF5:
 763 00d1 6C6F6E67 		.ascii	"long unsigned int\000"
 763      20756E73 
 763      69676E65 
 763      6420696E 
 763      7400
 764              	.LASF3:
 765 00e3 73686F72 		.ascii	"short unsigned int\000"
 765      7420756E 
 765      7369676E 
 765      65642069 
 765      6E7400
 766              	.LASF20:
 767 00f6 726F7461 		.ascii	"rotationAntiClockwise\000"
 767      74696F6E 
 767      416E7469 
 767      436C6F63 
 767      6B776973 
 768              	.LASF19:
 769 010c 71756164 		.ascii	"quadPulseCount\000"
 769      50756C73 
 769      65436F75 
 769      6E7400
 770              	.LASF30:
 771 011b 433A5C55 		.ascii	"C:\\Users\\ikui753\\OneDrive - The University of Au"
 771      73657273 
 771      5C696B75 
 771      69373533 
 771      5C4F6E65 
 772 014b 636B6C61 		.ascii	"ckland\\Documents\\GitHub\\301-Robot\\psoc student "
 772      6E645C44 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwn8VS1.s 			page 17


 772      6F63756D 
 772      656E7473 
 772      5C476974 
 773 017a 7061636B 		.ascii	"pack\\psoc_code_base\\CS301_Class.cydsn\000"
 773      5C70736F 
 773      635F636F 
 773      64655F62 
 773      6173655C 
 774              	.LASF13:
 775 01a0 646F7562 		.ascii	"double\000"
 775      6C6500
 776              	.LASF11:
 777 01a7 75696E74 		.ascii	"uint16\000"
 777      313600
 778              	.LASF25:
 779 01ae 49544D5F 		.ascii	"ITM_RxBuffer\000"
 779      52784275 
 779      66666572 
 779      00
 780              	.LASF8:
 781 01bb 756E7369 		.ascii	"unsigned int\000"
 781      676E6564 
 781      20696E74 
 781      00
 782              	.LASF26:
 783 01c8 7475726E 		.ascii	"turnCount\000"
 783      436F756E 
 783      7400
 784              	.LASF7:
 785 01d2 6C6F6E67 		.ascii	"long long unsigned int\000"
 785      206C6F6E 
 785      6720756E 
 785      7369676E 
 785      65642069 
 786              	.LASF27:
 787 01e9 6D617854 		.ascii	"maxTurnCount\000"
 787      75726E43 
 787      6F756E74 
 787      00
 788              	.LASF29:
 789 01f6 6D6F7665 		.ascii	"movement.c\000"
 789      6D656E74 
 789      2E6300
 790              	.LASF10:
 791 0201 696E7433 		.ascii	"int32_t\000"
 791      325F7400 
 792              	.LASF16:
 793 0209 73697A65 		.ascii	"sizetype\000"
 793      74797065 
 793      00
 794              	.LASF6:
 795 0212 6C6F6E67 		.ascii	"long long int\000"
 795      206C6F6E 
 795      6720696E 
 795      7400
 796              	.LASF14:
 797 0220 63686172 		.ascii	"char\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccwn8VS1.s 			page 18


 797      00
 798              	.LASF24:
 799 0225 6D6F7665 		.ascii	"moveForward\000"
 799      466F7277 
 799      61726400 
 800              	.LASF18:
 801 0231 726F7461 		.ascii	"rotationClockwise\000"
 801      74696F6E 
 801      436C6F63 
 801      6B776973 
 801      6500
 802              	.LASF2:
 803 0243 73686F72 		.ascii	"short int\000"
 803      7420696E 
 803      7400
 804              	.LASF22:
 805 024d 6B656570 		.ascii	"keepRotatingClockwise\000"
 805      526F7461 
 805      74696E67 
 805      436C6F63 
 805      6B776973 
 806              	.LASF4:
 807 0263 6C6F6E67 		.ascii	"long int\000"
 807      20696E74 
 807      00
 808              	.LASF15:
 809 026c 6C6F6E67 		.ascii	"long double\000"
 809      20646F75 
 809      626C6500 
 810              	.LASF0:
 811 0278 7369676E 		.ascii	"signed char\000"
 811      65642063 
 811      68617200 
 812              	.LASF17:
 813 0284 6D6F7665 		.ascii	"moveForwardForSpecifiedCount\000"
 813      466F7277 
 813      61726446 
 813      6F725370 
 813      65636966 
 814              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
