ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccsW1NMd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"movement.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	turnCount
  20              		.bss
  21              		.align	1
  22              		.type	turnCount, %object
  23              		.size	turnCount, 2
  24              	turnCount:
  25 0000 0000     		.space	2
  26              		.global	maxTurnCount
  27              		.data
  28              		.align	1
  29              		.type	maxTurnCount, %object
  30              		.size	maxTurnCount, 2
  31              	maxTurnCount:
  32 0000 1900     		.short	25
  33              		.section	.text.stopMoving,"ax",%progbits
  34              		.align	2
  35              		.global	stopMoving
  36              		.thumb
  37              		.thumb_func
  38              		.type	stopMoving, %function
  39              	stopMoving:
  40              	.LFB64:
  41              		.file 1 "movement.c"
   1:movement.c    **** /* ========================================
   2:movement.c    ****  *
   3:movement.c    ****  * Copyright YOUR COMPANY, THE YEAR
   4:movement.c    ****  * All Rights Reserved
   5:movement.c    ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:movement.c    ****  *
   7:movement.c    ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:movement.c    ****  * WHICH IS THE PROPERTY OF your company.
   9:movement.c    ****  *
  10:movement.c    ****  * ========================================
  11:movement.c    **** */
  12:movement.c    **** #include "project.h"
  13:movement.c    **** 
  14:movement.c    **** #include <stdio.h>
  15:movement.c    **** #include <string.h>
  16:movement.c    **** #include <stdlib.h>
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccsW1NMd.s 			page 2


  17:movement.c    **** 
  18:movement.c    **** uint16 turnCount = 0;
  19:movement.c    **** uint16 maxTurnCount = 25; // clock counts for one complete 90 deg turn
  20:movement.c    **** 
  21:movement.c    **** // Direction/ Movement macros
  22:movement.c    **** //* ========================================
  23:movement.c    **** // stop moving
  24:movement.c    **** void stopMoving() {
  42              		.loc 1 24 0
  43              		.cfi_startproc
  44              		@ args = 0, pretend = 0, frame = 0
  45              		@ frame_needed = 1, uses_anonymous_args = 0
  46 0000 80B5     		push	{r7, lr}
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 00AF     		add	r7, sp, #0
  51              		.cfi_def_cfa_register 7
  25:movement.c    ****     PWM_1_WriteCompare(32768); // 50%
  52              		.loc 1 25 0
  53 0004 4FF40040 		mov	r0, #32768
  54 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
  26:movement.c    ****     PWM_2_WriteCompare(32768); // 50%
  55              		.loc 1 26 0
  56 000c 4FF40040 		mov	r0, #32768
  57 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
  27:movement.c    **** }
  58              		.loc 1 27 0
  59 0014 00BF     		nop
  60 0016 80BD     		pop	{r7, pc}
  61              		.cfi_endproc
  62              	.LFE64:
  63              		.size	stopMoving, .-stopMoving
  64              		.section	.text.moveForwardForSpecifiedCount,"ax",%progbits
  65              		.align	2
  66              		.global	moveForwardForSpecifiedCount
  67              		.thumb
  68              		.thumb_func
  69              		.type	moveForwardForSpecifiedCount, %function
  70              	moveForwardForSpecifiedCount:
  71              	.LFB65:
  28:movement.c    **** 
  29:movement.c    **** void moveForwardForSpecifiedCount() {
  72              		.loc 1 29 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 8
  75              		@ frame_needed = 1, uses_anonymous_args = 0
  76 0000 80B5     		push	{r7, lr}
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 82B0     		sub	sp, sp, #8
  81              		.cfi_def_cfa_offset 16
  82 0004 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  30:movement.c    ****     PWM_1_WriteCompare(42598); // 65%
  84              		.loc 1 30 0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccsW1NMd.s 			page 3


  85 0006 4AF26660 		movw	r0, #42598
  86 000a FFF7FEFF 		bl	PWM_1_WriteCompare
  31:movement.c    ****     PWM_2_WriteCompare(22937); // 35%
  87              		.loc 1 31 0
  88 000e 45F69910 		movw	r0, #22937
  89 0012 FFF7FEFF 		bl	PWM_2_WriteCompare
  32:movement.c    ****     
  33:movement.c    ****     int quadPulseCount = 0;
  90              		.loc 1 33 0
  91 0016 0023     		movs	r3, #0
  92 0018 7B60     		str	r3, [r7, #4]
  34:movement.c    ****     QuadDec_M1_SetCounter(0);
  93              		.loc 1 34 0
  94 001a 0020     		movs	r0, #0
  95 001c FFF7FEFF 		bl	QuadDec_M1_SetCounter
  35:movement.c    ****     while(quadPulseCount < 110) {
  96              		.loc 1 35 0
  97 0020 03E0     		b	.L3
  98              	.L4:
  36:movement.c    ****         quadPulseCount = QuadDec_M1_GetCounter();
  99              		.loc 1 36 0
 100 0022 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 101 0026 0346     		mov	r3, r0
 102 0028 7B60     		str	r3, [r7, #4]
 103              	.L3:
  35:movement.c    ****     while(quadPulseCount < 110) {
 104              		.loc 1 35 0
 105 002a 7B68     		ldr	r3, [r7, #4]
 106 002c 6D2B     		cmp	r3, #109
 107 002e F8DD     		ble	.L4
  37:movement.c    ****     }
  38:movement.c    ****     QuadDec_M1_SetCounter(0);
 108              		.loc 1 38 0
 109 0030 0020     		movs	r0, #0
 110 0032 FFF7FEFF 		bl	QuadDec_M1_SetCounter
  39:movement.c    **** }
 111              		.loc 1 39 0
 112 0036 00BF     		nop
 113 0038 0837     		adds	r7, r7, #8
 114              		.cfi_def_cfa_offset 8
 115 003a BD46     		mov	sp, r7
 116              		.cfi_def_cfa_register 13
 117              		@ sp needed
 118 003c 80BD     		pop	{r7, pc}
 119              		.cfi_endproc
 120              	.LFE65:
 121              		.size	moveForwardForSpecifiedCount, .-moveForwardForSpecifiedCount
 122 003e 00BF     		.section	.text.rotationClockwise,"ax",%progbits
 123              		.align	2
 124              		.global	rotationClockwise
 125              		.thumb
 126              		.thumb_func
 127              		.type	rotationClockwise, %function
 128              	rotationClockwise:
 129              	.LFB66:
  40:movement.c    **** 
  41:movement.c    **** // rotate clockwise 90deg
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccsW1NMd.s 			page 4


  42:movement.c    **** void rotationClockwise() {
 130              		.loc 1 42 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 8
 133              		@ frame_needed = 1, uses_anonymous_args = 0
 134 0000 80B5     		push	{r7, lr}
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 7, -8
 137              		.cfi_offset 14, -4
 138 0002 82B0     		sub	sp, sp, #8
 139              		.cfi_def_cfa_offset 16
 140 0004 00AF     		add	r7, sp, #0
 141              		.cfi_def_cfa_register 7
  43:movement.c    ****     PWM_1_WriteCompare(42598); // 65%
 142              		.loc 1 43 0
 143 0006 4AF26660 		movw	r0, #42598
 144 000a FFF7FEFF 		bl	PWM_1_WriteCompare
  44:movement.c    ****     PWM_2_WriteCompare(42598); // 65%
 145              		.loc 1 44 0
 146 000e 4AF26660 		movw	r0, #42598
 147 0012 FFF7FEFF 		bl	PWM_2_WriteCompare
  45:movement.c    ****     
  46:movement.c    ****     int quadPulseCount = 0;
 148              		.loc 1 46 0
 149 0016 0023     		movs	r3, #0
 150 0018 7B60     		str	r3, [r7, #4]
  47:movement.c    ****     QuadDec_M1_SetCounter(0);
 151              		.loc 1 47 0
 152 001a 0020     		movs	r0, #0
 153 001c FFF7FEFF 		bl	QuadDec_M1_SetCounter
  48:movement.c    ****     while(quadPulseCount < 110) {
 154              		.loc 1 48 0
 155 0020 03E0     		b	.L6
 156              	.L7:
  49:movement.c    ****         quadPulseCount = QuadDec_M1_GetCounter();
 157              		.loc 1 49 0
 158 0022 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 159 0026 0346     		mov	r3, r0
 160 0028 7B60     		str	r3, [r7, #4]
 161              	.L6:
  48:movement.c    ****     while(quadPulseCount < 110) {
 162              		.loc 1 48 0
 163 002a 7B68     		ldr	r3, [r7, #4]
 164 002c 6D2B     		cmp	r3, #109
 165 002e F8DD     		ble	.L7
  50:movement.c    ****     }
  51:movement.c    ****     QuadDec_M1_SetCounter(0);
 166              		.loc 1 51 0
 167 0030 0020     		movs	r0, #0
 168 0032 FFF7FEFF 		bl	QuadDec_M1_SetCounter
  52:movement.c    ****     //CyDelay(500); // change to quadrature encoder pulses, rather than time delay
  53:movement.c    ****     //stopMoving(); // stop movement, ready for next instruction
  54:movement.c    **** }
 169              		.loc 1 54 0
 170 0036 00BF     		nop
 171 0038 0837     		adds	r7, r7, #8
 172              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccsW1NMd.s 			page 5


 173 003a BD46     		mov	sp, r7
 174              		.cfi_def_cfa_register 13
 175              		@ sp needed
 176 003c 80BD     		pop	{r7, pc}
 177              		.cfi_endproc
 178              	.LFE66:
 179              		.size	rotationClockwise, .-rotationClockwise
 180 003e 00BF     		.section	.text.rotationAntiClockwise,"ax",%progbits
 181              		.align	2
 182              		.global	rotationAntiClockwise
 183              		.thumb
 184              		.thumb_func
 185              		.type	rotationAntiClockwise, %function
 186              	rotationAntiClockwise:
 187              	.LFB67:
  55:movement.c    **** 
  56:movement.c    **** // rotate anticlockwise 90deg- CHANGE TO NOT USE TIMER BUT SIMPLY CHECK FOR NEW CONDITIONS????
  57:movement.c    **** void rotationAntiClockwise() {
 188              		.loc 1 57 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 8
 191              		@ frame_needed = 1, uses_anonymous_args = 0
 192 0000 80B5     		push	{r7, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 7, -8
 195              		.cfi_offset 14, -4
 196 0002 82B0     		sub	sp, sp, #8
 197              		.cfi_def_cfa_offset 16
 198 0004 00AF     		add	r7, sp, #0
 199              		.cfi_def_cfa_register 7
  58:movement.c    ****     PWM_1_WriteCompare(22937); // 35%
 200              		.loc 1 58 0
 201 0006 45F69910 		movw	r0, #22937
 202 000a FFF7FEFF 		bl	PWM_1_WriteCompare
  59:movement.c    ****     PWM_2_WriteCompare(22937); // 35%
 203              		.loc 1 59 0
 204 000e 45F69910 		movw	r0, #22937
 205 0012 FFF7FEFF 		bl	PWM_2_WriteCompare
  60:movement.c    ****     
  61:movement.c    ****     int quadPulseCount = 0;
 206              		.loc 1 61 0
 207 0016 0023     		movs	r3, #0
 208 0018 7B60     		str	r3, [r7, #4]
  62:movement.c    ****     QuadDec_M1_SetCounter(0);
 209              		.loc 1 62 0
 210 001a 0020     		movs	r0, #0
 211 001c FFF7FEFF 		bl	QuadDec_M1_SetCounter
  63:movement.c    ****     while(quadPulseCount > -105) {
 212              		.loc 1 63 0
 213 0020 03E0     		b	.L9
 214              	.L10:
  64:movement.c    ****         quadPulseCount = QuadDec_M1_GetCounter();  
 215              		.loc 1 64 0
 216 0022 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 217 0026 0346     		mov	r3, r0
 218 0028 7B60     		str	r3, [r7, #4]
 219              	.L9:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccsW1NMd.s 			page 6


  63:movement.c    ****     while(quadPulseCount > -105) {
 220              		.loc 1 63 0
 221 002a 7B68     		ldr	r3, [r7, #4]
 222 002c 13F1680F 		cmn	r3, #104
 223 0030 F7DA     		bge	.L10
  65:movement.c    ****     }
  66:movement.c    ****     QuadDec_M1_SetCounter(0);
 224              		.loc 1 66 0
 225 0032 0020     		movs	r0, #0
 226 0034 FFF7FEFF 		bl	QuadDec_M1_SetCounter
  67:movement.c    ****     //CyDelay(500);
  68:movement.c    ****     //stopMoving(); // stop movement, ready for next instruction
  69:movement.c    **** }
 227              		.loc 1 69 0
 228 0038 00BF     		nop
 229 003a 0837     		adds	r7, r7, #8
 230              		.cfi_def_cfa_offset 8
 231 003c BD46     		mov	sp, r7
 232              		.cfi_def_cfa_register 13
 233              		@ sp needed
 234 003e 80BD     		pop	{r7, pc}
 235              		.cfi_endproc
 236              	.LFE67:
 237              		.size	rotationAntiClockwise, .-rotationAntiClockwise
 238              		.section	.text.adjustRight,"ax",%progbits
 239              		.align	2
 240              		.global	adjustRight
 241              		.thumb
 242              		.thumb_func
 243              		.type	adjustRight, %function
 244              	adjustRight:
 245              	.LFB68:
  70:movement.c    **** 
  71:movement.c    **** // keep rotating clockwise
  72:movement.c    **** // used for adjusting deviations
  73:movement.c    **** void adjustRight() {
 246              		.loc 1 73 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 1, uses_anonymous_args = 0
 250 0000 80B5     		push	{r7, lr}
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 7, -8
 253              		.cfi_offset 14, -4
 254 0002 00AF     		add	r7, sp, #0
 255              		.cfi_def_cfa_register 7
  74:movement.c    ****     //PWM_1_WriteCompare(39321); // 60% -- Left wheel spins clockwise
  75:movement.c    ****     //PWM_2_WriteCompare(39321); // 60% -- Left wheel anti clockwise
  76:movement.c    **** 
  77:movement.c    ****     PWM_1_WriteCompare(42598); // 60% - Left Wheel Clockwise
 256              		.loc 1 77 0
 257 0004 4AF26660 		movw	r0, #42598
 258 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
  78:movement.c    ****     PWM_2_WriteCompare(26214); // 40% - Right Wheel Clockwise
 259              		.loc 1 78 0
 260 000c 46F26660 		movw	r0, #26214
 261 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccsW1NMd.s 			page 7


  79:movement.c    **** }
 262              		.loc 1 79 0
 263 0014 00BF     		nop
 264 0016 80BD     		pop	{r7, pc}
 265              		.cfi_endproc
 266              	.LFE68:
 267              		.size	adjustRight, .-adjustRight
 268              		.section	.text.adjustLeft,"ax",%progbits
 269              		.align	2
 270              		.global	adjustLeft
 271              		.thumb
 272              		.thumb_func
 273              		.type	adjustLeft, %function
 274              	adjustLeft:
 275              	.LFB69:
  80:movement.c    **** 
  81:movement.c    **** // keep rotating anticlockwise
  82:movement.c    **** // used for adjusting deviations
  83:movement.c    **** void adjustLeft() {
 276              		.loc 1 83 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 1, uses_anonymous_args = 0
 280 0000 80B5     		push	{r7, lr}
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 7, -8
 283              		.cfi_offset 14, -4
 284 0002 00AF     		add	r7, sp, #0
 285              		.cfi_def_cfa_register 7
  84:movement.c    ****     LED_Write(~(LED_Read()));
 286              		.loc 1 84 0
 287 0004 FFF7FEFF 		bl	LED_Read
 288 0008 0346     		mov	r3, r0
 289 000a DB43     		mvns	r3, r3
 290 000c DBB2     		uxtb	r3, r3
 291 000e 1846     		mov	r0, r3
 292 0010 FFF7FEFF 		bl	LED_Write
  85:movement.c    ****     //PWM_1_WriteCompare(26214); // 40% -- Left Wheel spins Clockwise
  86:movement.c    ****     //PWM_2_WriteCompare(26214); // 40% -- Right wheel spins clockwise
  87:movement.c    ****     //PWM_1_WriteCompare(36044); // 55% -- Left Wheel spins Clockwise
  88:movement.c    ****     //PWM_2_WriteCompare(26214); // 40% -- Right wheel spins clockwise
  89:movement.c    **** 
  90:movement.c    **** 
  91:movement.c    ****     PWM_1_WriteCompare(39321); // 60% - Left Wheel Clockwise
 293              		.loc 1 91 0
 294 0014 49F69910 		movw	r0, #39321
 295 0018 FFF7FEFF 		bl	PWM_1_WriteCompare
  92:movement.c    ****     PWM_2_WriteCompare(22937); // 35% - Right Wheel Clockwise
 296              		.loc 1 92 0
 297 001c 45F69910 		movw	r0, #22937
 298 0020 FFF7FEFF 		bl	PWM_2_WriteCompare
  93:movement.c    **** }
 299              		.loc 1 93 0
 300 0024 00BF     		nop
 301 0026 80BD     		pop	{r7, pc}
 302              		.cfi_endproc
 303              	.LFE69:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccsW1NMd.s 			page 8


 304              		.size	adjustLeft, .-adjustLeft
 305              		.section	.text.turnLeft,"ax",%progbits
 306              		.align	2
 307              		.global	turnLeft
 308              		.thumb
 309              		.thumb_func
 310              		.type	turnLeft, %function
 311              	turnLeft:
 312              	.LFB70:
  94:movement.c    **** 
  95:movement.c    **** void turnLeft() {
 313              		.loc 1 95 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 1, uses_anonymous_args = 0
 317 0000 80B5     		push	{r7, lr}
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 7, -8
 320              		.cfi_offset 14, -4
 321 0002 00AF     		add	r7, sp, #0
 322              		.cfi_def_cfa_register 7
  96:movement.c    ****     PWM_1_WriteCompare(26214); // 40% -- Left Wheel spins Clockwise
 323              		.loc 1 96 0
 324 0004 46F26660 		movw	r0, #26214
 325 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
  97:movement.c    ****     PWM_2_WriteCompare(26214); // 40% -- Right wheel spins clockwise
 326              		.loc 1 97 0
 327 000c 46F26660 		movw	r0, #26214
 328 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
  98:movement.c    **** }
 329              		.loc 1 98 0
 330 0014 00BF     		nop
 331 0016 80BD     		pop	{r7, pc}
 332              		.cfi_endproc
 333              	.LFE70:
 334              		.size	turnLeft, .-turnLeft
 335              		.section	.text.turnRight,"ax",%progbits
 336              		.align	2
 337              		.global	turnRight
 338              		.thumb
 339              		.thumb_func
 340              		.type	turnRight, %function
 341              	turnRight:
 342              	.LFB71:
  99:movement.c    **** 
 100:movement.c    **** void turnRight() {
 343              		.loc 1 100 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 1, uses_anonymous_args = 0
 347 0000 80B5     		push	{r7, lr}
 348              		.cfi_def_cfa_offset 8
 349              		.cfi_offset 7, -8
 350              		.cfi_offset 14, -4
 351 0002 00AF     		add	r7, sp, #0
 352              		.cfi_def_cfa_register 7
 101:movement.c    ****     PWM_1_WriteCompare(39321); // 60% -- Left wheel spins clockwise
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccsW1NMd.s 			page 9


 353              		.loc 1 101 0
 354 0004 49F69910 		movw	r0, #39321
 355 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
 102:movement.c    ****     PWM_2_WriteCompare(39321); // 60%
 356              		.loc 1 102 0
 357 000c 49F69910 		movw	r0, #39321
 358 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
 103:movement.c    **** }
 359              		.loc 1 103 0
 360 0014 00BF     		nop
 361 0016 80BD     		pop	{r7, pc}
 362              		.cfi_endproc
 363              	.LFE71:
 364              		.size	turnRight, .-turnRight
 365              		.section	.text.moveForward,"ax",%progbits
 366              		.align	2
 367              		.global	moveForward
 368              		.thumb
 369              		.thumb_func
 370              		.type	moveForward, %function
 371              	moveForward:
 372              	.LFB72:
 104:movement.c    **** 
 105:movement.c    **** void moveForward() {
 373              		.loc 1 105 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 1, uses_anonymous_args = 0
 377 0000 80B5     		push	{r7, lr}
 378              		.cfi_def_cfa_offset 8
 379              		.cfi_offset 7, -8
 380              		.cfi_offset 14, -4
 381 0002 00AF     		add	r7, sp, #0
 382              		.cfi_def_cfa_register 7
 106:movement.c    ****     PWM_1_WriteCompare(42598); // 65% - Left Wheel Clockwise
 383              		.loc 1 106 0
 384 0004 4AF26660 		movw	r0, #42598
 385 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
 107:movement.c    ****     PWM_2_WriteCompare(22937); // 35% - Right Wheel Clockwise
 386              		.loc 1 107 0
 387 000c 45F69910 		movw	r0, #22937
 388 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
 108:movement.c    **** }
 389              		.loc 1 108 0
 390 0014 00BF     		nop
 391 0016 80BD     		pop	{r7, pc}
 392              		.cfi_endproc
 393              	.LFE72:
 394              		.size	moveForward, .-moveForward
 395              		.text
 396              	.Letext0:
 397              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 398              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 399              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 400              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 401              		.section	.debug_info,"",%progbits
 402              	.Ldebug_info0:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccsW1NMd.s 			page 10


 403 0000 B2010000 		.4byte	0x1b2
 404 0004 0400     		.2byte	0x4
 405 0006 00000000 		.4byte	.Ldebug_abbrev0
 406 000a 04       		.byte	0x4
 407 000b 01       		.uleb128 0x1
 408 000c 0B000000 		.4byte	.LASF30
 409 0010 0C       		.byte	0xc
 410 0011 B5010000 		.4byte	.LASF31
 411 0015 0B010000 		.4byte	.LASF32
 412 0019 00000000 		.4byte	.Ldebug_ranges0+0
 413 001d 00000000 		.4byte	0
 414 0021 00000000 		.4byte	.Ldebug_line0
 415 0025 02       		.uleb128 0x2
 416 0026 01       		.byte	0x1
 417 0027 06       		.byte	0x6
 418 0028 72020000 		.4byte	.LASF0
 419 002c 02       		.uleb128 0x2
 420 002d 01       		.byte	0x1
 421 002e 08       		.byte	0x8
 422 002f B3000000 		.4byte	.LASF1
 423 0033 02       		.uleb128 0x2
 424 0034 02       		.byte	0x2
 425 0035 05       		.byte	0x5
 426 0036 53020000 		.4byte	.LASF2
 427 003a 02       		.uleb128 0x2
 428 003b 02       		.byte	0x2
 429 003c 07       		.byte	0x7
 430 003d D3000000 		.4byte	.LASF3
 431 0041 03       		.uleb128 0x3
 432 0042 99000000 		.4byte	.LASF9
 433 0046 02       		.byte	0x2
 434 0047 3F       		.byte	0x3f
 435 0048 4C000000 		.4byte	0x4c
 436 004c 02       		.uleb128 0x2
 437 004d 04       		.byte	0x4
 438 004e 05       		.byte	0x5
 439 004f 5D020000 		.4byte	.LASF4
 440 0053 02       		.uleb128 0x2
 441 0054 04       		.byte	0x4
 442 0055 07       		.byte	0x7
 443 0056 C1000000 		.4byte	.LASF5
 444 005a 02       		.uleb128 0x2
 445 005b 08       		.byte	0x8
 446 005c 05       		.byte	0x5
 447 005d 22020000 		.4byte	.LASF6
 448 0061 02       		.uleb128 0x2
 449 0062 08       		.byte	0x8
 450 0063 07       		.byte	0x7
 451 0064 E4010000 		.4byte	.LASF7
 452 0068 04       		.uleb128 0x4
 453 0069 04       		.byte	0x4
 454 006a 05       		.byte	0x5
 455 006b 696E7400 		.ascii	"int\000"
 456 006f 02       		.uleb128 0x2
 457 0070 04       		.byte	0x4
 458 0071 07       		.byte	0x7
 459 0072 CD010000 		.4byte	.LASF8
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccsW1NMd.s 			page 11


 460 0076 03       		.uleb128 0x3
 461 0077 11020000 		.4byte	.LASF10
 462 007b 03       		.byte	0x3
 463 007c 2C       		.byte	0x2c
 464 007d 41000000 		.4byte	0x41
 465 0081 05       		.uleb128 0x5
 466 0082 AE010000 		.4byte	.LASF11
 467 0086 04       		.byte	0x4
 468 0087 E801     		.2byte	0x1e8
 469 0089 3A000000 		.4byte	0x3a
 470 008d 02       		.uleb128 0x2
 471 008e 04       		.byte	0x4
 472 008f 04       		.byte	0x4
 473 0090 AD000000 		.4byte	.LASF12
 474 0094 02       		.uleb128 0x2
 475 0095 08       		.byte	0x8
 476 0096 04       		.byte	0x4
 477 0097 9C010000 		.4byte	.LASF13
 478 009b 02       		.uleb128 0x2
 479 009c 01       		.byte	0x1
 480 009d 08       		.byte	0x8
 481 009e 30020000 		.4byte	.LASF14
 482 00a2 02       		.uleb128 0x2
 483 00a3 08       		.byte	0x8
 484 00a4 04       		.byte	0x4
 485 00a5 66020000 		.4byte	.LASF15
 486 00a9 02       		.uleb128 0x2
 487 00aa 04       		.byte	0x4
 488 00ab 07       		.byte	0x7
 489 00ac 19020000 		.4byte	.LASF16
 490 00b0 06       		.uleb128 0x6
 491 00b1 00000000 		.4byte	.LASF21
 492 00b5 01       		.byte	0x1
 493 00b6 18       		.byte	0x18
 494 00b7 00000000 		.4byte	.LFB64
 495 00bb 18000000 		.4byte	.LFE64-.LFB64
 496 00bf 01       		.uleb128 0x1
 497 00c0 9C       		.byte	0x9c
 498 00c1 07       		.uleb128 0x7
 499 00c2 7E020000 		.4byte	.LASF17
 500 00c6 01       		.byte	0x1
 501 00c7 1D       		.byte	0x1d
 502 00c8 00000000 		.4byte	.LFB65
 503 00cc 3E000000 		.4byte	.LFE65-.LFB65
 504 00d0 01       		.uleb128 0x1
 505 00d1 9C       		.byte	0x9c
 506 00d2 E5000000 		.4byte	0xe5
 507 00d6 08       		.uleb128 0x8
 508 00d7 FC000000 		.4byte	.LASF19
 509 00db 01       		.byte	0x1
 510 00dc 21       		.byte	0x21
 511 00dd 68000000 		.4byte	0x68
 512 00e1 02       		.uleb128 0x2
 513 00e2 91       		.byte	0x91
 514 00e3 74       		.sleb128 -12
 515 00e4 00       		.byte	0
 516 00e5 07       		.uleb128 0x7
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccsW1NMd.s 			page 12


 517 00e6 41020000 		.4byte	.LASF18
 518 00ea 01       		.byte	0x1
 519 00eb 2A       		.byte	0x2a
 520 00ec 00000000 		.4byte	.LFB66
 521 00f0 3E000000 		.4byte	.LFE66-.LFB66
 522 00f4 01       		.uleb128 0x1
 523 00f5 9C       		.byte	0x9c
 524 00f6 09010000 		.4byte	0x109
 525 00fa 08       		.uleb128 0x8
 526 00fb FC000000 		.4byte	.LASF19
 527 00ff 01       		.byte	0x1
 528 0100 2E       		.byte	0x2e
 529 0101 68000000 		.4byte	0x68
 530 0105 02       		.uleb128 0x2
 531 0106 91       		.byte	0x91
 532 0107 74       		.sleb128 -12
 533 0108 00       		.byte	0
 534 0109 07       		.uleb128 0x7
 535 010a E6000000 		.4byte	.LASF20
 536 010e 01       		.byte	0x1
 537 010f 39       		.byte	0x39
 538 0110 00000000 		.4byte	.LFB67
 539 0114 40000000 		.4byte	.LFE67-.LFB67
 540 0118 01       		.uleb128 0x1
 541 0119 9C       		.byte	0x9c
 542 011a 2D010000 		.4byte	0x12d
 543 011e 08       		.uleb128 0x8
 544 011f FC000000 		.4byte	.LASF19
 545 0123 01       		.byte	0x1
 546 0124 3D       		.byte	0x3d
 547 0125 68000000 		.4byte	0x68
 548 0129 02       		.uleb128 0x2
 549 012a 91       		.byte	0x91
 550 012b 74       		.sleb128 -12
 551 012c 00       		.byte	0
 552 012d 06       		.uleb128 0x6
 553 012e 90010000 		.4byte	.LASF22
 554 0132 01       		.byte	0x1
 555 0133 49       		.byte	0x49
 556 0134 00000000 		.4byte	.LFB68
 557 0138 18000000 		.4byte	.LFE68-.LFB68
 558 013c 01       		.uleb128 0x1
 559 013d 9C       		.byte	0x9c
 560 013e 06       		.uleb128 0x6
 561 013f A3010000 		.4byte	.LASF23
 562 0143 01       		.byte	0x1
 563 0144 53       		.byte	0x53
 564 0145 00000000 		.4byte	.LFB69
 565 0149 28000000 		.4byte	.LFE69-.LFB69
 566 014d 01       		.uleb128 0x1
 567 014e 9C       		.byte	0x9c
 568 014f 06       		.uleb128 0x6
 569 0150 08020000 		.4byte	.LASF24
 570 0154 01       		.byte	0x1
 571 0155 5F       		.byte	0x5f
 572 0156 00000000 		.4byte	.LFB70
 573 015a 18000000 		.4byte	.LFE70-.LFB70
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccsW1NMd.s 			page 13


 574 015e 01       		.uleb128 0x1
 575 015f 9C       		.byte	0x9c
 576 0160 06       		.uleb128 0x6
 577 0161 A3000000 		.4byte	.LASF25
 578 0165 01       		.byte	0x1
 579 0166 64       		.byte	0x64
 580 0167 00000000 		.4byte	.LFB71
 581 016b 18000000 		.4byte	.LFE71-.LFB71
 582 016f 01       		.uleb128 0x1
 583 0170 9C       		.byte	0x9c
 584 0171 06       		.uleb128 0x6
 585 0172 35020000 		.4byte	.LASF26
 586 0176 01       		.byte	0x1
 587 0177 69       		.byte	0x69
 588 0178 00000000 		.4byte	.LFB72
 589 017c 18000000 		.4byte	.LFE72-.LFB72
 590 0180 01       		.uleb128 0x1
 591 0181 9C       		.byte	0x9c
 592 0182 09       		.uleb128 0x9
 593 0183 C0010000 		.4byte	.LASF27
 594 0187 05       		.byte	0x5
 595 0188 1207     		.2byte	0x712
 596 018a 8E010000 		.4byte	0x18e
 597 018e 0A       		.uleb128 0xa
 598 018f 76000000 		.4byte	0x76
 599 0193 0B       		.uleb128 0xb
 600 0194 DA010000 		.4byte	.LASF28
 601 0198 01       		.byte	0x1
 602 0199 12       		.byte	0x12
 603 019a 81000000 		.4byte	0x81
 604 019e 05       		.uleb128 0x5
 605 019f 03       		.byte	0x3
 606 01a0 00000000 		.4byte	turnCount
 607 01a4 0B       		.uleb128 0xb
 608 01a5 FB010000 		.4byte	.LASF29
 609 01a9 01       		.byte	0x1
 610 01aa 13       		.byte	0x13
 611 01ab 81000000 		.4byte	0x81
 612 01af 05       		.uleb128 0x5
 613 01b0 03       		.byte	0x3
 614 01b1 00000000 		.4byte	maxTurnCount
 615 01b5 00       		.byte	0
 616              		.section	.debug_abbrev,"",%progbits
 617              	.Ldebug_abbrev0:
 618 0000 01       		.uleb128 0x1
 619 0001 11       		.uleb128 0x11
 620 0002 01       		.byte	0x1
 621 0003 25       		.uleb128 0x25
 622 0004 0E       		.uleb128 0xe
 623 0005 13       		.uleb128 0x13
 624 0006 0B       		.uleb128 0xb
 625 0007 03       		.uleb128 0x3
 626 0008 0E       		.uleb128 0xe
 627 0009 1B       		.uleb128 0x1b
 628 000a 0E       		.uleb128 0xe
 629 000b 55       		.uleb128 0x55
 630 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccsW1NMd.s 			page 14


 631 000d 11       		.uleb128 0x11
 632 000e 01       		.uleb128 0x1
 633 000f 10       		.uleb128 0x10
 634 0010 17       		.uleb128 0x17
 635 0011 00       		.byte	0
 636 0012 00       		.byte	0
 637 0013 02       		.uleb128 0x2
 638 0014 24       		.uleb128 0x24
 639 0015 00       		.byte	0
 640 0016 0B       		.uleb128 0xb
 641 0017 0B       		.uleb128 0xb
 642 0018 3E       		.uleb128 0x3e
 643 0019 0B       		.uleb128 0xb
 644 001a 03       		.uleb128 0x3
 645 001b 0E       		.uleb128 0xe
 646 001c 00       		.byte	0
 647 001d 00       		.byte	0
 648 001e 03       		.uleb128 0x3
 649 001f 16       		.uleb128 0x16
 650 0020 00       		.byte	0
 651 0021 03       		.uleb128 0x3
 652 0022 0E       		.uleb128 0xe
 653 0023 3A       		.uleb128 0x3a
 654 0024 0B       		.uleb128 0xb
 655 0025 3B       		.uleb128 0x3b
 656 0026 0B       		.uleb128 0xb
 657 0027 49       		.uleb128 0x49
 658 0028 13       		.uleb128 0x13
 659 0029 00       		.byte	0
 660 002a 00       		.byte	0
 661 002b 04       		.uleb128 0x4
 662 002c 24       		.uleb128 0x24
 663 002d 00       		.byte	0
 664 002e 0B       		.uleb128 0xb
 665 002f 0B       		.uleb128 0xb
 666 0030 3E       		.uleb128 0x3e
 667 0031 0B       		.uleb128 0xb
 668 0032 03       		.uleb128 0x3
 669 0033 08       		.uleb128 0x8
 670 0034 00       		.byte	0
 671 0035 00       		.byte	0
 672 0036 05       		.uleb128 0x5
 673 0037 16       		.uleb128 0x16
 674 0038 00       		.byte	0
 675 0039 03       		.uleb128 0x3
 676 003a 0E       		.uleb128 0xe
 677 003b 3A       		.uleb128 0x3a
 678 003c 0B       		.uleb128 0xb
 679 003d 3B       		.uleb128 0x3b
 680 003e 05       		.uleb128 0x5
 681 003f 49       		.uleb128 0x49
 682 0040 13       		.uleb128 0x13
 683 0041 00       		.byte	0
 684 0042 00       		.byte	0
 685 0043 06       		.uleb128 0x6
 686 0044 2E       		.uleb128 0x2e
 687 0045 00       		.byte	0
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccsW1NMd.s 			page 15


 688 0046 3F       		.uleb128 0x3f
 689 0047 19       		.uleb128 0x19
 690 0048 03       		.uleb128 0x3
 691 0049 0E       		.uleb128 0xe
 692 004a 3A       		.uleb128 0x3a
 693 004b 0B       		.uleb128 0xb
 694 004c 3B       		.uleb128 0x3b
 695 004d 0B       		.uleb128 0xb
 696 004e 11       		.uleb128 0x11
 697 004f 01       		.uleb128 0x1
 698 0050 12       		.uleb128 0x12
 699 0051 06       		.uleb128 0x6
 700 0052 40       		.uleb128 0x40
 701 0053 18       		.uleb128 0x18
 702 0054 9642     		.uleb128 0x2116
 703 0056 19       		.uleb128 0x19
 704 0057 00       		.byte	0
 705 0058 00       		.byte	0
 706 0059 07       		.uleb128 0x7
 707 005a 2E       		.uleb128 0x2e
 708 005b 01       		.byte	0x1
 709 005c 3F       		.uleb128 0x3f
 710 005d 19       		.uleb128 0x19
 711 005e 03       		.uleb128 0x3
 712 005f 0E       		.uleb128 0xe
 713 0060 3A       		.uleb128 0x3a
 714 0061 0B       		.uleb128 0xb
 715 0062 3B       		.uleb128 0x3b
 716 0063 0B       		.uleb128 0xb
 717 0064 11       		.uleb128 0x11
 718 0065 01       		.uleb128 0x1
 719 0066 12       		.uleb128 0x12
 720 0067 06       		.uleb128 0x6
 721 0068 40       		.uleb128 0x40
 722 0069 18       		.uleb128 0x18
 723 006a 9642     		.uleb128 0x2116
 724 006c 19       		.uleb128 0x19
 725 006d 01       		.uleb128 0x1
 726 006e 13       		.uleb128 0x13
 727 006f 00       		.byte	0
 728 0070 00       		.byte	0
 729 0071 08       		.uleb128 0x8
 730 0072 34       		.uleb128 0x34
 731 0073 00       		.byte	0
 732 0074 03       		.uleb128 0x3
 733 0075 0E       		.uleb128 0xe
 734 0076 3A       		.uleb128 0x3a
 735 0077 0B       		.uleb128 0xb
 736 0078 3B       		.uleb128 0x3b
 737 0079 0B       		.uleb128 0xb
 738 007a 49       		.uleb128 0x49
 739 007b 13       		.uleb128 0x13
 740 007c 02       		.uleb128 0x2
 741 007d 18       		.uleb128 0x18
 742 007e 00       		.byte	0
 743 007f 00       		.byte	0
 744 0080 09       		.uleb128 0x9
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccsW1NMd.s 			page 16


 745 0081 34       		.uleb128 0x34
 746 0082 00       		.byte	0
 747 0083 03       		.uleb128 0x3
 748 0084 0E       		.uleb128 0xe
 749 0085 3A       		.uleb128 0x3a
 750 0086 0B       		.uleb128 0xb
 751 0087 3B       		.uleb128 0x3b
 752 0088 05       		.uleb128 0x5
 753 0089 49       		.uleb128 0x49
 754 008a 13       		.uleb128 0x13
 755 008b 3F       		.uleb128 0x3f
 756 008c 19       		.uleb128 0x19
 757 008d 3C       		.uleb128 0x3c
 758 008e 19       		.uleb128 0x19
 759 008f 00       		.byte	0
 760 0090 00       		.byte	0
 761 0091 0A       		.uleb128 0xa
 762 0092 35       		.uleb128 0x35
 763 0093 00       		.byte	0
 764 0094 49       		.uleb128 0x49
 765 0095 13       		.uleb128 0x13
 766 0096 00       		.byte	0
 767 0097 00       		.byte	0
 768 0098 0B       		.uleb128 0xb
 769 0099 34       		.uleb128 0x34
 770 009a 00       		.byte	0
 771 009b 03       		.uleb128 0x3
 772 009c 0E       		.uleb128 0xe
 773 009d 3A       		.uleb128 0x3a
 774 009e 0B       		.uleb128 0xb
 775 009f 3B       		.uleb128 0x3b
 776 00a0 0B       		.uleb128 0xb
 777 00a1 49       		.uleb128 0x49
 778 00a2 13       		.uleb128 0x13
 779 00a3 3F       		.uleb128 0x3f
 780 00a4 19       		.uleb128 0x19
 781 00a5 02       		.uleb128 0x2
 782 00a6 18       		.uleb128 0x18
 783 00a7 00       		.byte	0
 784 00a8 00       		.byte	0
 785 00a9 00       		.byte	0
 786              		.section	.debug_aranges,"",%progbits
 787 0000 5C000000 		.4byte	0x5c
 788 0004 0200     		.2byte	0x2
 789 0006 00000000 		.4byte	.Ldebug_info0
 790 000a 04       		.byte	0x4
 791 000b 00       		.byte	0
 792 000c 0000     		.2byte	0
 793 000e 0000     		.2byte	0
 794 0010 00000000 		.4byte	.LFB64
 795 0014 18000000 		.4byte	.LFE64-.LFB64
 796 0018 00000000 		.4byte	.LFB65
 797 001c 3E000000 		.4byte	.LFE65-.LFB65
 798 0020 00000000 		.4byte	.LFB66
 799 0024 3E000000 		.4byte	.LFE66-.LFB66
 800 0028 00000000 		.4byte	.LFB67
 801 002c 40000000 		.4byte	.LFE67-.LFB67
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccsW1NMd.s 			page 17


 802 0030 00000000 		.4byte	.LFB68
 803 0034 18000000 		.4byte	.LFE68-.LFB68
 804 0038 00000000 		.4byte	.LFB69
 805 003c 28000000 		.4byte	.LFE69-.LFB69
 806 0040 00000000 		.4byte	.LFB70
 807 0044 18000000 		.4byte	.LFE70-.LFB70
 808 0048 00000000 		.4byte	.LFB71
 809 004c 18000000 		.4byte	.LFE71-.LFB71
 810 0050 00000000 		.4byte	.LFB72
 811 0054 18000000 		.4byte	.LFE72-.LFB72
 812 0058 00000000 		.4byte	0
 813 005c 00000000 		.4byte	0
 814              		.section	.debug_ranges,"",%progbits
 815              	.Ldebug_ranges0:
 816 0000 00000000 		.4byte	.LFB64
 817 0004 18000000 		.4byte	.LFE64
 818 0008 00000000 		.4byte	.LFB65
 819 000c 3E000000 		.4byte	.LFE65
 820 0010 00000000 		.4byte	.LFB66
 821 0014 3E000000 		.4byte	.LFE66
 822 0018 00000000 		.4byte	.LFB67
 823 001c 40000000 		.4byte	.LFE67
 824 0020 00000000 		.4byte	.LFB68
 825 0024 18000000 		.4byte	.LFE68
 826 0028 00000000 		.4byte	.LFB69
 827 002c 28000000 		.4byte	.LFE69
 828 0030 00000000 		.4byte	.LFB70
 829 0034 18000000 		.4byte	.LFE70
 830 0038 00000000 		.4byte	.LFB71
 831 003c 18000000 		.4byte	.LFE71
 832 0040 00000000 		.4byte	.LFB72
 833 0044 18000000 		.4byte	.LFE72
 834 0048 00000000 		.4byte	0
 835 004c 00000000 		.4byte	0
 836              		.section	.debug_line,"",%progbits
 837              	.Ldebug_line0:
 838 0000 10020000 		.section	.debug_str,"MS",%progbits,1
 838      02005001 
 838      00000201 
 838      FB0E0D00 
 838      01010101 
 839              	.LASF21:
 840 0000 73746F70 		.ascii	"stopMoving\000"
 840      4D6F7669 
 840      6E6700
 841              	.LASF30:
 842 000b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 842      43313120 
 842      352E342E 
 842      31203230 
 842      31363036 
 843 003e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 843      20726576 
 843      6973696F 
 843      6E203233 
 843      37373135 
 844 0071 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccsW1NMd.s 			page 18


 844      66756E63 
 844      74696F6E 
 844      2D736563 
 844      74696F6E 
 845              	.LASF9:
 846 0099 5F5F696E 		.ascii	"__int32_t\000"
 846      7433325F 
 846      7400
 847              	.LASF25:
 848 00a3 7475726E 		.ascii	"turnRight\000"
 848      52696768 
 848      7400
 849              	.LASF12:
 850 00ad 666C6F61 		.ascii	"float\000"
 850      7400
 851              	.LASF1:
 852 00b3 756E7369 		.ascii	"unsigned char\000"
 852      676E6564 
 852      20636861 
 852      7200
 853              	.LASF5:
 854 00c1 6C6F6E67 		.ascii	"long unsigned int\000"
 854      20756E73 
 854      69676E65 
 854      6420696E 
 854      7400
 855              	.LASF3:
 856 00d3 73686F72 		.ascii	"short unsigned int\000"
 856      7420756E 
 856      7369676E 
 856      65642069 
 856      6E7400
 857              	.LASF20:
 858 00e6 726F7461 		.ascii	"rotationAntiClockwise\000"
 858      74696F6E 
 858      416E7469 
 858      436C6F63 
 858      6B776973 
 859              	.LASF19:
 860 00fc 71756164 		.ascii	"quadPulseCount\000"
 860      50756C73 
 860      65436F75 
 860      6E7400
 861              	.LASF32:
 862 010b 433A5C55 		.ascii	"C:\\Users\\ikui753\\OneDrive - The University of Au"
 862      73657273 
 862      5C696B75 
 862      69373533 
 862      5C4F6E65 
 863 013b 636B6C61 		.ascii	"ckland\\Documents\\GitHub\\301-Robot\\psoc student "
 863      6E645C44 
 863      6F63756D 
 863      656E7473 
 863      5C476974 
 864 016a 7061636B 		.ascii	"pack\\psoc_code_base\\CS301_Class.cydsn\000"
 864      5C70736F 
 864      635F636F 
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccsW1NMd.s 			page 19


 864      64655F62 
 864      6173655C 
 865              	.LASF22:
 866 0190 61646A75 		.ascii	"adjustRight\000"
 866      73745269 
 866      67687400 
 867              	.LASF13:
 868 019c 646F7562 		.ascii	"double\000"
 868      6C6500
 869              	.LASF23:
 870 01a3 61646A75 		.ascii	"adjustLeft\000"
 870      73744C65 
 870      667400
 871              	.LASF11:
 872 01ae 75696E74 		.ascii	"uint16\000"
 872      313600
 873              	.LASF31:
 874 01b5 6D6F7665 		.ascii	"movement.c\000"
 874      6D656E74 
 874      2E6300
 875              	.LASF27:
 876 01c0 49544D5F 		.ascii	"ITM_RxBuffer\000"
 876      52784275 
 876      66666572 
 876      00
 877              	.LASF8:
 878 01cd 756E7369 		.ascii	"unsigned int\000"
 878      676E6564 
 878      20696E74 
 878      00
 879              	.LASF28:
 880 01da 7475726E 		.ascii	"turnCount\000"
 880      436F756E 
 880      7400
 881              	.LASF7:
 882 01e4 6C6F6E67 		.ascii	"long long unsigned int\000"
 882      206C6F6E 
 882      6720756E 
 882      7369676E 
 882      65642069 
 883              	.LASF29:
 884 01fb 6D617854 		.ascii	"maxTurnCount\000"
 884      75726E43 
 884      6F756E74 
 884      00
 885              	.LASF24:
 886 0208 7475726E 		.ascii	"turnLeft\000"
 886      4C656674 
 886      00
 887              	.LASF10:
 888 0211 696E7433 		.ascii	"int32_t\000"
 888      325F7400 
 889              	.LASF16:
 890 0219 73697A65 		.ascii	"sizetype\000"
 890      74797065 
 890      00
 891              	.LASF6:
ARM GAS  C:\Users\ikui753\AppData\Local\Temp\ccsW1NMd.s 			page 20


 892 0222 6C6F6E67 		.ascii	"long long int\000"
 892      206C6F6E 
 892      6720696E 
 892      7400
 893              	.LASF14:
 894 0230 63686172 		.ascii	"char\000"
 894      00
 895              	.LASF26:
 896 0235 6D6F7665 		.ascii	"moveForward\000"
 896      466F7277 
 896      61726400 
 897              	.LASF18:
 898 0241 726F7461 		.ascii	"rotationClockwise\000"
 898      74696F6E 
 898      436C6F63 
 898      6B776973 
 898      6500
 899              	.LASF2:
 900 0253 73686F72 		.ascii	"short int\000"
 900      7420696E 
 900      7400
 901              	.LASF4:
 902 025d 6C6F6E67 		.ascii	"long int\000"
 902      20696E74 
 902      00
 903              	.LASF15:
 904 0266 6C6F6E67 		.ascii	"long double\000"
 904      20646F75 
 904      626C6500 
 905              	.LASF0:
 906 0272 7369676E 		.ascii	"signed char\000"
 906      65642063 
 906      68617200 
 907              	.LASF17:
 908 027e 6D6F7665 		.ascii	"moveForwardForSpecifiedCount\000"
 908      466F7277 
 908      61726446 
 908      6F725370 
 908      65636966 
 909              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
