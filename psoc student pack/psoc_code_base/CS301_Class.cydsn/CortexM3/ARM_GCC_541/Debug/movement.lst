ARM GAS  C:\Users\rshu284\AppData\Local\Temp\cct4Nw6o.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"movement.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	turnCount
  20              		.bss
  21              		.align	1
  22              		.type	turnCount, %object
  23              		.size	turnCount, 2
  24              	turnCount:
  25 0000 0000     		.space	2
  26              		.global	maxTurnCount
  27              		.data
  28              		.align	1
  29              		.type	maxTurnCount, %object
  30              		.size	maxTurnCount, 2
  31              	maxTurnCount:
  32 0000 1900     		.short	25
  33              		.section	.text.stopMoving,"ax",%progbits
  34              		.align	2
  35              		.global	stopMoving
  36              		.thumb
  37              		.thumb_func
  38              		.type	stopMoving, %function
  39              	stopMoving:
  40              	.LFB64:
  41              		.file 1 "movement.c"
   1:movement.c    **** /* ========================================
   2:movement.c    ****  *
   3:movement.c    ****  * Copyright YOUR COMPANY, THE YEAR
   4:movement.c    ****  * All Rights Reserved
   5:movement.c    ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:movement.c    ****  *
   7:movement.c    ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:movement.c    ****  * WHICH IS THE PROPERTY OF your company.
   9:movement.c    ****  *
  10:movement.c    ****  * ========================================
  11:movement.c    **** */
  12:movement.c    **** #include "project.h"
  13:movement.c    **** 
  14:movement.c    **** #include <stdio.h>
  15:movement.c    **** #include <string.h>
  16:movement.c    **** #include <stdlib.h>
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\cct4Nw6o.s 			page 2


  17:movement.c    **** 
  18:movement.c    **** uint16 turnCount = 0;
  19:movement.c    **** uint16 maxTurnCount = 25; // clock counts for one complete 90 deg turn
  20:movement.c    **** 
  21:movement.c    **** // Direction/ Movement macros
  22:movement.c    **** //* ========================================
  23:movement.c    **** // stop moving
  24:movement.c    **** void stopMoving() {
  42              		.loc 1 24 0
  43              		.cfi_startproc
  44              		@ args = 0, pretend = 0, frame = 0
  45              		@ frame_needed = 1, uses_anonymous_args = 0
  46 0000 80B5     		push	{r7, lr}
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 00AF     		add	r7, sp, #0
  51              		.cfi_def_cfa_register 7
  25:movement.c    ****     PWM_1_WriteCompare(32768); // 50%
  52              		.loc 1 25 0
  53 0004 4FF40040 		mov	r0, #32768
  54 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
  26:movement.c    ****     PWM_2_WriteCompare(32768); // 50%
  55              		.loc 1 26 0
  56 000c 4FF40040 		mov	r0, #32768
  57 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
  27:movement.c    **** }
  58              		.loc 1 27 0
  59 0014 00BF     		nop
  60 0016 80BD     		pop	{r7, pc}
  61              		.cfi_endproc
  62              	.LFE64:
  63              		.size	stopMoving, .-stopMoving
  64              		.section	.text.moveForwardForSpecifiedCount,"ax",%progbits
  65              		.align	2
  66              		.global	moveForwardForSpecifiedCount
  67              		.thumb
  68              		.thumb_func
  69              		.type	moveForwardForSpecifiedCount, %function
  70              	moveForwardForSpecifiedCount:
  71              	.LFB65:
  28:movement.c    **** 
  29:movement.c    **** void moveForwardForSpecifiedCount() {
  72              		.loc 1 29 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 8
  75              		@ frame_needed = 1, uses_anonymous_args = 0
  76 0000 80B5     		push	{r7, lr}
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 82B0     		sub	sp, sp, #8
  81              		.cfi_def_cfa_offset 16
  82 0004 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  30:movement.c    ****     PWM_1_WriteCompare(42598); // 65%
  84              		.loc 1 30 0
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\cct4Nw6o.s 			page 3


  85 0006 4AF26660 		movw	r0, #42598
  86 000a FFF7FEFF 		bl	PWM_1_WriteCompare
  31:movement.c    ****     PWM_2_WriteCompare(22937); // 35%
  87              		.loc 1 31 0
  88 000e 45F69910 		movw	r0, #22937
  89 0012 FFF7FEFF 		bl	PWM_2_WriteCompare
  32:movement.c    ****     
  33:movement.c    ****     int quadPulseCount = 0;
  90              		.loc 1 33 0
  91 0016 0023     		movs	r3, #0
  92 0018 7B60     		str	r3, [r7, #4]
  34:movement.c    ****     QuadDec_M1_SetCounter(0);
  93              		.loc 1 34 0
  94 001a 0020     		movs	r0, #0
  95 001c FFF7FEFF 		bl	QuadDec_M1_SetCounter
  35:movement.c    ****     while(quadPulseCount < 55) {
  96              		.loc 1 35 0
  97 0020 03E0     		b	.L3
  98              	.L4:
  36:movement.c    ****         quadPulseCount = QuadDec_M1_GetCounter();
  99              		.loc 1 36 0
 100 0022 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 101 0026 0346     		mov	r3, r0
 102 0028 7B60     		str	r3, [r7, #4]
 103              	.L3:
  35:movement.c    ****     while(quadPulseCount < 55) {
 104              		.loc 1 35 0
 105 002a 7B68     		ldr	r3, [r7, #4]
 106 002c 362B     		cmp	r3, #54
 107 002e F8DD     		ble	.L4
  37:movement.c    ****     }
  38:movement.c    ****     QuadDec_M1_SetCounter(0);
 108              		.loc 1 38 0
 109 0030 0020     		movs	r0, #0
 110 0032 FFF7FEFF 		bl	QuadDec_M1_SetCounter
  39:movement.c    **** }
 111              		.loc 1 39 0
 112 0036 00BF     		nop
 113 0038 0837     		adds	r7, r7, #8
 114              		.cfi_def_cfa_offset 8
 115 003a BD46     		mov	sp, r7
 116              		.cfi_def_cfa_register 13
 117              		@ sp needed
 118 003c 80BD     		pop	{r7, pc}
 119              		.cfi_endproc
 120              	.LFE65:
 121              		.size	moveForwardForSpecifiedCount, .-moveForwardForSpecifiedCount
 122 003e 00BF     		.section	.text.rotationClockwise,"ax",%progbits
 123              		.align	2
 124              		.global	rotationClockwise
 125              		.thumb
 126              		.thumb_func
 127              		.type	rotationClockwise, %function
 128              	rotationClockwise:
 129              	.LFB66:
  40:movement.c    **** 
  41:movement.c    **** // rotate clockwise 90deg
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\cct4Nw6o.s 			page 4


  42:movement.c    **** void rotationClockwise() {
 130              		.loc 1 42 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 8
 133              		@ frame_needed = 1, uses_anonymous_args = 0
 134 0000 80B5     		push	{r7, lr}
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 7, -8
 137              		.cfi_offset 14, -4
 138 0002 82B0     		sub	sp, sp, #8
 139              		.cfi_def_cfa_offset 16
 140 0004 00AF     		add	r7, sp, #0
 141              		.cfi_def_cfa_register 7
  43:movement.c    ****     PWM_1_WriteCompare(42598); // 65%
 142              		.loc 1 43 0
 143 0006 4AF26660 		movw	r0, #42598
 144 000a FFF7FEFF 		bl	PWM_1_WriteCompare
  44:movement.c    ****     PWM_2_WriteCompare(42598); // 65%
 145              		.loc 1 44 0
 146 000e 4AF26660 		movw	r0, #42598
 147 0012 FFF7FEFF 		bl	PWM_2_WriteCompare
  45:movement.c    ****     
  46:movement.c    ****     int quadPulseCount = 0;
 148              		.loc 1 46 0
 149 0016 0023     		movs	r3, #0
 150 0018 7B60     		str	r3, [r7, #4]
  47:movement.c    ****     QuadDec_M1_SetCounter(0);
 151              		.loc 1 47 0
 152 001a 0020     		movs	r0, #0
 153 001c FFF7FEFF 		bl	QuadDec_M1_SetCounter
  48:movement.c    ****     while(quadPulseCount < 110) {
 154              		.loc 1 48 0
 155 0020 03E0     		b	.L6
 156              	.L7:
  49:movement.c    ****         quadPulseCount = QuadDec_M1_GetCounter();
 157              		.loc 1 49 0
 158 0022 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 159 0026 0346     		mov	r3, r0
 160 0028 7B60     		str	r3, [r7, #4]
 161              	.L6:
  48:movement.c    ****     while(quadPulseCount < 110) {
 162              		.loc 1 48 0
 163 002a 7B68     		ldr	r3, [r7, #4]
 164 002c 6D2B     		cmp	r3, #109
 165 002e F8DD     		ble	.L7
  50:movement.c    ****     }
  51:movement.c    ****     QuadDec_M1_SetCounter(0);
 166              		.loc 1 51 0
 167 0030 0020     		movs	r0, #0
 168 0032 FFF7FEFF 		bl	QuadDec_M1_SetCounter
  52:movement.c    ****     //CyDelay(500); // change to quadrature encoder pulses, rather than time delay
  53:movement.c    ****     //stopMoving(); // stop movement, ready for next instruction
  54:movement.c    **** }
 169              		.loc 1 54 0
 170 0036 00BF     		nop
 171 0038 0837     		adds	r7, r7, #8
 172              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\cct4Nw6o.s 			page 5


 173 003a BD46     		mov	sp, r7
 174              		.cfi_def_cfa_register 13
 175              		@ sp needed
 176 003c 80BD     		pop	{r7, pc}
 177              		.cfi_endproc
 178              	.LFE66:
 179              		.size	rotationClockwise, .-rotationClockwise
 180 003e 00BF     		.section	.text.rotationAntiClockwise,"ax",%progbits
 181              		.align	2
 182              		.global	rotationAntiClockwise
 183              		.thumb
 184              		.thumb_func
 185              		.type	rotationAntiClockwise, %function
 186              	rotationAntiClockwise:
 187              	.LFB67:
  55:movement.c    **** 
  56:movement.c    **** // rotate anticlockwise 90deg- CHANGE TO NOT USE TIMER BUT SIMPLY CHECK FOR NEW CONDITIONS????
  57:movement.c    **** void rotationAntiClockwise() {
 188              		.loc 1 57 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 8
 191              		@ frame_needed = 1, uses_anonymous_args = 0
 192 0000 80B5     		push	{r7, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 7, -8
 195              		.cfi_offset 14, -4
 196 0002 82B0     		sub	sp, sp, #8
 197              		.cfi_def_cfa_offset 16
 198 0004 00AF     		add	r7, sp, #0
 199              		.cfi_def_cfa_register 7
  58:movement.c    ****     PWM_1_WriteCompare(22937); // 35%
 200              		.loc 1 58 0
 201 0006 45F69910 		movw	r0, #22937
 202 000a FFF7FEFF 		bl	PWM_1_WriteCompare
  59:movement.c    ****     PWM_2_WriteCompare(22937); // 35%
 203              		.loc 1 59 0
 204 000e 45F69910 		movw	r0, #22937
 205 0012 FFF7FEFF 		bl	PWM_2_WriteCompare
  60:movement.c    ****     
  61:movement.c    ****     int quadPulseCount = 0;
 206              		.loc 1 61 0
 207 0016 0023     		movs	r3, #0
 208 0018 7B60     		str	r3, [r7, #4]
  62:movement.c    ****     QuadDec_M1_SetCounter(0);
 209              		.loc 1 62 0
 210 001a 0020     		movs	r0, #0
 211 001c FFF7FEFF 		bl	QuadDec_M1_SetCounter
  63:movement.c    ****     while(quadPulseCount > -105) {
 212              		.loc 1 63 0
 213 0020 03E0     		b	.L9
 214              	.L10:
  64:movement.c    ****         quadPulseCount = QuadDec_M1_GetCounter();  
 215              		.loc 1 64 0
 216 0022 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 217 0026 0346     		mov	r3, r0
 218 0028 7B60     		str	r3, [r7, #4]
 219              	.L9:
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\cct4Nw6o.s 			page 6


  63:movement.c    ****     while(quadPulseCount > -105) {
 220              		.loc 1 63 0
 221 002a 7B68     		ldr	r3, [r7, #4]
 222 002c 13F1680F 		cmn	r3, #104
 223 0030 F7DA     		bge	.L10
  65:movement.c    ****     }
  66:movement.c    ****     QuadDec_M1_SetCounter(0);
 224              		.loc 1 66 0
 225 0032 0020     		movs	r0, #0
 226 0034 FFF7FEFF 		bl	QuadDec_M1_SetCounter
  67:movement.c    ****     //CyDelay(500);
  68:movement.c    ****     //stopMoving(); // stop movement, ready for next instruction
  69:movement.c    **** }
 227              		.loc 1 69 0
 228 0038 00BF     		nop
 229 003a 0837     		adds	r7, r7, #8
 230              		.cfi_def_cfa_offset 8
 231 003c BD46     		mov	sp, r7
 232              		.cfi_def_cfa_register 13
 233              		@ sp needed
 234 003e 80BD     		pop	{r7, pc}
 235              		.cfi_endproc
 236              	.LFE67:
 237              		.size	rotationAntiClockwise, .-rotationAntiClockwise
 238              		.section	.text.adjustRight,"ax",%progbits
 239              		.align	2
 240              		.global	adjustRight
 241              		.thumb
 242              		.thumb_func
 243              		.type	adjustRight, %function
 244              	adjustRight:
 245              	.LFB68:
  70:movement.c    **** 
  71:movement.c    **** // keep rotating clockwise
  72:movement.c    **** // used for adjusting deviations
  73:movement.c    **** void adjustRight() {
 246              		.loc 1 73 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 1, uses_anonymous_args = 0
 250 0000 80B5     		push	{r7, lr}
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 7, -8
 253              		.cfi_offset 14, -4
 254 0002 00AF     		add	r7, sp, #0
 255              		.cfi_def_cfa_register 7
  74:movement.c    ****     PWM_1_WriteCompare(42598); // 65% - Left Wheel Clockwise
 256              		.loc 1 74 0
 257 0004 4AF26660 		movw	r0, #42598
 258 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
  75:movement.c    ****     PWM_2_WriteCompare(26214); // 40% - Right Wheel Clockwise
 259              		.loc 1 75 0
 260 000c 46F26660 		movw	r0, #26214
 261 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
  76:movement.c    **** }
 262              		.loc 1 76 0
 263 0014 00BF     		nop
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\cct4Nw6o.s 			page 7


 264 0016 80BD     		pop	{r7, pc}
 265              		.cfi_endproc
 266              	.LFE68:
 267              		.size	adjustRight, .-adjustRight
 268              		.section	.text.adjustLeft,"ax",%progbits
 269              		.align	2
 270              		.global	adjustLeft
 271              		.thumb
 272              		.thumb_func
 273              		.type	adjustLeft, %function
 274              	adjustLeft:
 275              	.LFB69:
  77:movement.c    **** 
  78:movement.c    **** // keep rotating anticlockwise
  79:movement.c    **** // used for adjusting deviations
  80:movement.c    **** void adjustLeft() {
 276              		.loc 1 80 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 1, uses_anonymous_args = 0
 280 0000 80B5     		push	{r7, lr}
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 7, -8
 283              		.cfi_offset 14, -4
 284 0002 00AF     		add	r7, sp, #0
 285              		.cfi_def_cfa_register 7
  81:movement.c    **** 
  82:movement.c    ****     PWM_1_WriteCompare(39321); // 60% - Left Wheel Clockwise
 286              		.loc 1 82 0
 287 0004 49F69910 		movw	r0, #39321
 288 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
  83:movement.c    ****     PWM_2_WriteCompare(22937); // 35% - Right Wheel Clockwise
 289              		.loc 1 83 0
 290 000c 45F69910 		movw	r0, #22937
 291 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
  84:movement.c    **** }
 292              		.loc 1 84 0
 293 0014 00BF     		nop
 294 0016 80BD     		pop	{r7, pc}
 295              		.cfi_endproc
 296              	.LFE69:
 297              		.size	adjustLeft, .-adjustLeft
 298              		.section	.text.turnLeft,"ax",%progbits
 299              		.align	2
 300              		.global	turnLeft
 301              		.thumb
 302              		.thumb_func
 303              		.type	turnLeft, %function
 304              	turnLeft:
 305              	.LFB70:
  85:movement.c    **** 
  86:movement.c    **** // Anti-clockwise
  87:movement.c    **** void turnLeft() {
 306              		.loc 1 87 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\cct4Nw6o.s 			page 8


 310 0000 80B5     		push	{r7, lr}
 311              		.cfi_def_cfa_offset 8
 312              		.cfi_offset 7, -8
 313              		.cfi_offset 14, -4
 314 0002 00AF     		add	r7, sp, #0
 315              		.cfi_def_cfa_register 7
  88:movement.c    ****     PWM_1_WriteCompare(26214); // 40% -- Left Wheel spins Clockwise
 316              		.loc 1 88 0
 317 0004 46F26660 		movw	r0, #26214
 318 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
  89:movement.c    ****     PWM_2_WriteCompare(26214); // 40% -- Right wheel spins clockwise
 319              		.loc 1 89 0
 320 000c 46F26660 		movw	r0, #26214
 321 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
  90:movement.c    **** }
 322              		.loc 1 90 0
 323 0014 00BF     		nop
 324 0016 80BD     		pop	{r7, pc}
 325              		.cfi_endproc
 326              	.LFE70:
 327              		.size	turnLeft, .-turnLeft
 328              		.section	.text.turnRight,"ax",%progbits
 329              		.align	2
 330              		.global	turnRight
 331              		.thumb
 332              		.thumb_func
 333              		.type	turnRight, %function
 334              	turnRight:
 335              	.LFB71:
  91:movement.c    **** 
  92:movement.c    **** // Clockwise
  93:movement.c    **** void turnRight() {
 336              		.loc 1 93 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 1, uses_anonymous_args = 0
 340 0000 80B5     		push	{r7, lr}
 341              		.cfi_def_cfa_offset 8
 342              		.cfi_offset 7, -8
 343              		.cfi_offset 14, -4
 344 0002 00AF     		add	r7, sp, #0
 345              		.cfi_def_cfa_register 7
  94:movement.c    ****     PWM_1_WriteCompare(39321); // 60% -- Left wheel spins clockwise
 346              		.loc 1 94 0
 347 0004 49F69910 		movw	r0, #39321
 348 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
  95:movement.c    ****     PWM_2_WriteCompare(39321); // 60% - Right wheel spins Anti Clockwise
 349              		.loc 1 95 0
 350 000c 49F69910 		movw	r0, #39321
 351 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
  96:movement.c    **** }
 352              		.loc 1 96 0
 353 0014 00BF     		nop
 354 0016 80BD     		pop	{r7, pc}
 355              		.cfi_endproc
 356              	.LFE71:
 357              		.size	turnRight, .-turnRight
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\cct4Nw6o.s 			page 9


 358              		.section	.text.moveForward,"ax",%progbits
 359              		.align	2
 360              		.global	moveForward
 361              		.thumb
 362              		.thumb_func
 363              		.type	moveForward, %function
 364              	moveForward:
 365              	.LFB72:
  97:movement.c    **** 
  98:movement.c    **** void moveForward() {
 366              		.loc 1 98 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 1, uses_anonymous_args = 0
 370 0000 80B5     		push	{r7, lr}
 371              		.cfi_def_cfa_offset 8
 372              		.cfi_offset 7, -8
 373              		.cfi_offset 14, -4
 374 0002 00AF     		add	r7, sp, #0
 375              		.cfi_def_cfa_register 7
  99:movement.c    ****     PWM_1_WriteCompare(42598); // 65% - Left Wheel Clockwise
 376              		.loc 1 99 0
 377 0004 4AF26660 		movw	r0, #42598
 378 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
 100:movement.c    ****     PWM_2_WriteCompare(22937); // 35% - Right Wheel Clockwise
 379              		.loc 1 100 0
 380 000c 45F69910 		movw	r0, #22937
 381 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
 101:movement.c    **** }
 382              		.loc 1 101 0
 383 0014 00BF     		nop
 384 0016 80BD     		pop	{r7, pc}
 385              		.cfi_endproc
 386              	.LFE72:
 387              		.size	moveForward, .-moveForward
 388              		.text
 389              	.Letext0:
 390              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 391              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 392              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 393              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 394              		.section	.debug_info,"",%progbits
 395              	.Ldebug_info0:
 396 0000 B2010000 		.4byte	0x1b2
 397 0004 0400     		.2byte	0x4
 398 0006 00000000 		.4byte	.Ldebug_abbrev0
 399 000a 04       		.byte	0x4
 400 000b 01       		.uleb128 0x1
 401 000c 0B000000 		.4byte	.LASF30
 402 0010 0C       		.byte	0xc
 403 0011 B5010000 		.4byte	.LASF31
 404 0015 AD000000 		.4byte	.LASF32
 405 0019 00000000 		.4byte	.Ldebug_ranges0+0
 406 001d 00000000 		.4byte	0
 407 0021 00000000 		.4byte	.Ldebug_line0
 408 0025 02       		.uleb128 0x2
 409 0026 01       		.byte	0x1
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\cct4Nw6o.s 			page 10


 410 0027 06       		.byte	0x6
 411 0028 72020000 		.4byte	.LASF0
 412 002c 02       		.uleb128 0x2
 413 002d 01       		.byte	0x1
 414 002e 08       		.byte	0x8
 415 002f 38010000 		.4byte	.LASF1
 416 0033 02       		.uleb128 0x2
 417 0034 02       		.byte	0x2
 418 0035 05       		.byte	0x5
 419 0036 53020000 		.4byte	.LASF2
 420 003a 02       		.uleb128 0x2
 421 003b 02       		.byte	0x2
 422 003c 07       		.byte	0x7
 423 003d 58010000 		.4byte	.LASF3
 424 0041 03       		.uleb128 0x3
 425 0042 99000000 		.4byte	.LASF9
 426 0046 02       		.byte	0x2
 427 0047 3F       		.byte	0x3f
 428 0048 4C000000 		.4byte	0x4c
 429 004c 02       		.uleb128 0x2
 430 004d 04       		.byte	0x4
 431 004e 05       		.byte	0x5
 432 004f 5D020000 		.4byte	.LASF4
 433 0053 02       		.uleb128 0x2
 434 0054 04       		.byte	0x4
 435 0055 07       		.byte	0x7
 436 0056 46010000 		.4byte	.LASF5
 437 005a 02       		.uleb128 0x2
 438 005b 08       		.byte	0x8
 439 005c 05       		.byte	0x5
 440 005d 22020000 		.4byte	.LASF6
 441 0061 02       		.uleb128 0x2
 442 0062 08       		.byte	0x8
 443 0063 07       		.byte	0x7
 444 0064 E4010000 		.4byte	.LASF7
 445 0068 04       		.uleb128 0x4
 446 0069 04       		.byte	0x4
 447 006a 05       		.byte	0x5
 448 006b 696E7400 		.ascii	"int\000"
 449 006f 02       		.uleb128 0x2
 450 0070 04       		.byte	0x4
 451 0071 07       		.byte	0x7
 452 0072 CD010000 		.4byte	.LASF8
 453 0076 03       		.uleb128 0x3
 454 0077 11020000 		.4byte	.LASF10
 455 007b 03       		.byte	0x3
 456 007c 2C       		.byte	0x2c
 457 007d 41000000 		.4byte	0x41
 458 0081 05       		.uleb128 0x5
 459 0082 AE010000 		.4byte	.LASF11
 460 0086 04       		.byte	0x4
 461 0087 E801     		.2byte	0x1e8
 462 0089 3A000000 		.4byte	0x3a
 463 008d 02       		.uleb128 0x2
 464 008e 04       		.byte	0x4
 465 008f 04       		.byte	0x4
 466 0090 32010000 		.4byte	.LASF12
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\cct4Nw6o.s 			page 11


 467 0094 02       		.uleb128 0x2
 468 0095 08       		.byte	0x8
 469 0096 04       		.byte	0x4
 470 0097 9C010000 		.4byte	.LASF13
 471 009b 02       		.uleb128 0x2
 472 009c 01       		.byte	0x1
 473 009d 08       		.byte	0x8
 474 009e 30020000 		.4byte	.LASF14
 475 00a2 02       		.uleb128 0x2
 476 00a3 08       		.byte	0x8
 477 00a4 04       		.byte	0x4
 478 00a5 66020000 		.4byte	.LASF15
 479 00a9 02       		.uleb128 0x2
 480 00aa 04       		.byte	0x4
 481 00ab 07       		.byte	0x7
 482 00ac 19020000 		.4byte	.LASF16
 483 00b0 06       		.uleb128 0x6
 484 00b1 00000000 		.4byte	.LASF21
 485 00b5 01       		.byte	0x1
 486 00b6 18       		.byte	0x18
 487 00b7 00000000 		.4byte	.LFB64
 488 00bb 18000000 		.4byte	.LFE64-.LFB64
 489 00bf 01       		.uleb128 0x1
 490 00c0 9C       		.byte	0x9c
 491 00c1 07       		.uleb128 0x7
 492 00c2 7E020000 		.4byte	.LASF17
 493 00c6 01       		.byte	0x1
 494 00c7 1D       		.byte	0x1d
 495 00c8 00000000 		.4byte	.LFB65
 496 00cc 3E000000 		.4byte	.LFE65-.LFB65
 497 00d0 01       		.uleb128 0x1
 498 00d1 9C       		.byte	0x9c
 499 00d2 E5000000 		.4byte	0xe5
 500 00d6 08       		.uleb128 0x8
 501 00d7 81010000 		.4byte	.LASF19
 502 00db 01       		.byte	0x1
 503 00dc 21       		.byte	0x21
 504 00dd 68000000 		.4byte	0x68
 505 00e1 02       		.uleb128 0x2
 506 00e2 91       		.byte	0x91
 507 00e3 74       		.sleb128 -12
 508 00e4 00       		.byte	0
 509 00e5 07       		.uleb128 0x7
 510 00e6 41020000 		.4byte	.LASF18
 511 00ea 01       		.byte	0x1
 512 00eb 2A       		.byte	0x2a
 513 00ec 00000000 		.4byte	.LFB66
 514 00f0 3E000000 		.4byte	.LFE66-.LFB66
 515 00f4 01       		.uleb128 0x1
 516 00f5 9C       		.byte	0x9c
 517 00f6 09010000 		.4byte	0x109
 518 00fa 08       		.uleb128 0x8
 519 00fb 81010000 		.4byte	.LASF19
 520 00ff 01       		.byte	0x1
 521 0100 2E       		.byte	0x2e
 522 0101 68000000 		.4byte	0x68
 523 0105 02       		.uleb128 0x2
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\cct4Nw6o.s 			page 12


 524 0106 91       		.byte	0x91
 525 0107 74       		.sleb128 -12
 526 0108 00       		.byte	0
 527 0109 07       		.uleb128 0x7
 528 010a 6B010000 		.4byte	.LASF20
 529 010e 01       		.byte	0x1
 530 010f 39       		.byte	0x39
 531 0110 00000000 		.4byte	.LFB67
 532 0114 40000000 		.4byte	.LFE67-.LFB67
 533 0118 01       		.uleb128 0x1
 534 0119 9C       		.byte	0x9c
 535 011a 2D010000 		.4byte	0x12d
 536 011e 08       		.uleb128 0x8
 537 011f 81010000 		.4byte	.LASF19
 538 0123 01       		.byte	0x1
 539 0124 3D       		.byte	0x3d
 540 0125 68000000 		.4byte	0x68
 541 0129 02       		.uleb128 0x2
 542 012a 91       		.byte	0x91
 543 012b 74       		.sleb128 -12
 544 012c 00       		.byte	0
 545 012d 06       		.uleb128 0x6
 546 012e 90010000 		.4byte	.LASF22
 547 0132 01       		.byte	0x1
 548 0133 49       		.byte	0x49
 549 0134 00000000 		.4byte	.LFB68
 550 0138 18000000 		.4byte	.LFE68-.LFB68
 551 013c 01       		.uleb128 0x1
 552 013d 9C       		.byte	0x9c
 553 013e 06       		.uleb128 0x6
 554 013f A3010000 		.4byte	.LASF23
 555 0143 01       		.byte	0x1
 556 0144 50       		.byte	0x50
 557 0145 00000000 		.4byte	.LFB69
 558 0149 18000000 		.4byte	.LFE69-.LFB69
 559 014d 01       		.uleb128 0x1
 560 014e 9C       		.byte	0x9c
 561 014f 06       		.uleb128 0x6
 562 0150 08020000 		.4byte	.LASF24
 563 0154 01       		.byte	0x1
 564 0155 57       		.byte	0x57
 565 0156 00000000 		.4byte	.LFB70
 566 015a 18000000 		.4byte	.LFE70-.LFB70
 567 015e 01       		.uleb128 0x1
 568 015f 9C       		.byte	0x9c
 569 0160 06       		.uleb128 0x6
 570 0161 A3000000 		.4byte	.LASF25
 571 0165 01       		.byte	0x1
 572 0166 5D       		.byte	0x5d
 573 0167 00000000 		.4byte	.LFB71
 574 016b 18000000 		.4byte	.LFE71-.LFB71
 575 016f 01       		.uleb128 0x1
 576 0170 9C       		.byte	0x9c
 577 0171 06       		.uleb128 0x6
 578 0172 35020000 		.4byte	.LASF26
 579 0176 01       		.byte	0x1
 580 0177 62       		.byte	0x62
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\cct4Nw6o.s 			page 13


 581 0178 00000000 		.4byte	.LFB72
 582 017c 18000000 		.4byte	.LFE72-.LFB72
 583 0180 01       		.uleb128 0x1
 584 0181 9C       		.byte	0x9c
 585 0182 09       		.uleb128 0x9
 586 0183 C0010000 		.4byte	.LASF27
 587 0187 05       		.byte	0x5
 588 0188 1207     		.2byte	0x712
 589 018a 8E010000 		.4byte	0x18e
 590 018e 0A       		.uleb128 0xa
 591 018f 76000000 		.4byte	0x76
 592 0193 0B       		.uleb128 0xb
 593 0194 DA010000 		.4byte	.LASF28
 594 0198 01       		.byte	0x1
 595 0199 12       		.byte	0x12
 596 019a 81000000 		.4byte	0x81
 597 019e 05       		.uleb128 0x5
 598 019f 03       		.byte	0x3
 599 01a0 00000000 		.4byte	turnCount
 600 01a4 0B       		.uleb128 0xb
 601 01a5 FB010000 		.4byte	.LASF29
 602 01a9 01       		.byte	0x1
 603 01aa 13       		.byte	0x13
 604 01ab 81000000 		.4byte	0x81
 605 01af 05       		.uleb128 0x5
 606 01b0 03       		.byte	0x3
 607 01b1 00000000 		.4byte	maxTurnCount
 608 01b5 00       		.byte	0
 609              		.section	.debug_abbrev,"",%progbits
 610              	.Ldebug_abbrev0:
 611 0000 01       		.uleb128 0x1
 612 0001 11       		.uleb128 0x11
 613 0002 01       		.byte	0x1
 614 0003 25       		.uleb128 0x25
 615 0004 0E       		.uleb128 0xe
 616 0005 13       		.uleb128 0x13
 617 0006 0B       		.uleb128 0xb
 618 0007 03       		.uleb128 0x3
 619 0008 0E       		.uleb128 0xe
 620 0009 1B       		.uleb128 0x1b
 621 000a 0E       		.uleb128 0xe
 622 000b 55       		.uleb128 0x55
 623 000c 17       		.uleb128 0x17
 624 000d 11       		.uleb128 0x11
 625 000e 01       		.uleb128 0x1
 626 000f 10       		.uleb128 0x10
 627 0010 17       		.uleb128 0x17
 628 0011 00       		.byte	0
 629 0012 00       		.byte	0
 630 0013 02       		.uleb128 0x2
 631 0014 24       		.uleb128 0x24
 632 0015 00       		.byte	0
 633 0016 0B       		.uleb128 0xb
 634 0017 0B       		.uleb128 0xb
 635 0018 3E       		.uleb128 0x3e
 636 0019 0B       		.uleb128 0xb
 637 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\cct4Nw6o.s 			page 14


 638 001b 0E       		.uleb128 0xe
 639 001c 00       		.byte	0
 640 001d 00       		.byte	0
 641 001e 03       		.uleb128 0x3
 642 001f 16       		.uleb128 0x16
 643 0020 00       		.byte	0
 644 0021 03       		.uleb128 0x3
 645 0022 0E       		.uleb128 0xe
 646 0023 3A       		.uleb128 0x3a
 647 0024 0B       		.uleb128 0xb
 648 0025 3B       		.uleb128 0x3b
 649 0026 0B       		.uleb128 0xb
 650 0027 49       		.uleb128 0x49
 651 0028 13       		.uleb128 0x13
 652 0029 00       		.byte	0
 653 002a 00       		.byte	0
 654 002b 04       		.uleb128 0x4
 655 002c 24       		.uleb128 0x24
 656 002d 00       		.byte	0
 657 002e 0B       		.uleb128 0xb
 658 002f 0B       		.uleb128 0xb
 659 0030 3E       		.uleb128 0x3e
 660 0031 0B       		.uleb128 0xb
 661 0032 03       		.uleb128 0x3
 662 0033 08       		.uleb128 0x8
 663 0034 00       		.byte	0
 664 0035 00       		.byte	0
 665 0036 05       		.uleb128 0x5
 666 0037 16       		.uleb128 0x16
 667 0038 00       		.byte	0
 668 0039 03       		.uleb128 0x3
 669 003a 0E       		.uleb128 0xe
 670 003b 3A       		.uleb128 0x3a
 671 003c 0B       		.uleb128 0xb
 672 003d 3B       		.uleb128 0x3b
 673 003e 05       		.uleb128 0x5
 674 003f 49       		.uleb128 0x49
 675 0040 13       		.uleb128 0x13
 676 0041 00       		.byte	0
 677 0042 00       		.byte	0
 678 0043 06       		.uleb128 0x6
 679 0044 2E       		.uleb128 0x2e
 680 0045 00       		.byte	0
 681 0046 3F       		.uleb128 0x3f
 682 0047 19       		.uleb128 0x19
 683 0048 03       		.uleb128 0x3
 684 0049 0E       		.uleb128 0xe
 685 004a 3A       		.uleb128 0x3a
 686 004b 0B       		.uleb128 0xb
 687 004c 3B       		.uleb128 0x3b
 688 004d 0B       		.uleb128 0xb
 689 004e 11       		.uleb128 0x11
 690 004f 01       		.uleb128 0x1
 691 0050 12       		.uleb128 0x12
 692 0051 06       		.uleb128 0x6
 693 0052 40       		.uleb128 0x40
 694 0053 18       		.uleb128 0x18
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\cct4Nw6o.s 			page 15


 695 0054 9642     		.uleb128 0x2116
 696 0056 19       		.uleb128 0x19
 697 0057 00       		.byte	0
 698 0058 00       		.byte	0
 699 0059 07       		.uleb128 0x7
 700 005a 2E       		.uleb128 0x2e
 701 005b 01       		.byte	0x1
 702 005c 3F       		.uleb128 0x3f
 703 005d 19       		.uleb128 0x19
 704 005e 03       		.uleb128 0x3
 705 005f 0E       		.uleb128 0xe
 706 0060 3A       		.uleb128 0x3a
 707 0061 0B       		.uleb128 0xb
 708 0062 3B       		.uleb128 0x3b
 709 0063 0B       		.uleb128 0xb
 710 0064 11       		.uleb128 0x11
 711 0065 01       		.uleb128 0x1
 712 0066 12       		.uleb128 0x12
 713 0067 06       		.uleb128 0x6
 714 0068 40       		.uleb128 0x40
 715 0069 18       		.uleb128 0x18
 716 006a 9642     		.uleb128 0x2116
 717 006c 19       		.uleb128 0x19
 718 006d 01       		.uleb128 0x1
 719 006e 13       		.uleb128 0x13
 720 006f 00       		.byte	0
 721 0070 00       		.byte	0
 722 0071 08       		.uleb128 0x8
 723 0072 34       		.uleb128 0x34
 724 0073 00       		.byte	0
 725 0074 03       		.uleb128 0x3
 726 0075 0E       		.uleb128 0xe
 727 0076 3A       		.uleb128 0x3a
 728 0077 0B       		.uleb128 0xb
 729 0078 3B       		.uleb128 0x3b
 730 0079 0B       		.uleb128 0xb
 731 007a 49       		.uleb128 0x49
 732 007b 13       		.uleb128 0x13
 733 007c 02       		.uleb128 0x2
 734 007d 18       		.uleb128 0x18
 735 007e 00       		.byte	0
 736 007f 00       		.byte	0
 737 0080 09       		.uleb128 0x9
 738 0081 34       		.uleb128 0x34
 739 0082 00       		.byte	0
 740 0083 03       		.uleb128 0x3
 741 0084 0E       		.uleb128 0xe
 742 0085 3A       		.uleb128 0x3a
 743 0086 0B       		.uleb128 0xb
 744 0087 3B       		.uleb128 0x3b
 745 0088 05       		.uleb128 0x5
 746 0089 49       		.uleb128 0x49
 747 008a 13       		.uleb128 0x13
 748 008b 3F       		.uleb128 0x3f
 749 008c 19       		.uleb128 0x19
 750 008d 3C       		.uleb128 0x3c
 751 008e 19       		.uleb128 0x19
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\cct4Nw6o.s 			page 16


 752 008f 00       		.byte	0
 753 0090 00       		.byte	0
 754 0091 0A       		.uleb128 0xa
 755 0092 35       		.uleb128 0x35
 756 0093 00       		.byte	0
 757 0094 49       		.uleb128 0x49
 758 0095 13       		.uleb128 0x13
 759 0096 00       		.byte	0
 760 0097 00       		.byte	0
 761 0098 0B       		.uleb128 0xb
 762 0099 34       		.uleb128 0x34
 763 009a 00       		.byte	0
 764 009b 03       		.uleb128 0x3
 765 009c 0E       		.uleb128 0xe
 766 009d 3A       		.uleb128 0x3a
 767 009e 0B       		.uleb128 0xb
 768 009f 3B       		.uleb128 0x3b
 769 00a0 0B       		.uleb128 0xb
 770 00a1 49       		.uleb128 0x49
 771 00a2 13       		.uleb128 0x13
 772 00a3 3F       		.uleb128 0x3f
 773 00a4 19       		.uleb128 0x19
 774 00a5 02       		.uleb128 0x2
 775 00a6 18       		.uleb128 0x18
 776 00a7 00       		.byte	0
 777 00a8 00       		.byte	0
 778 00a9 00       		.byte	0
 779              		.section	.debug_aranges,"",%progbits
 780 0000 5C000000 		.4byte	0x5c
 781 0004 0200     		.2byte	0x2
 782 0006 00000000 		.4byte	.Ldebug_info0
 783 000a 04       		.byte	0x4
 784 000b 00       		.byte	0
 785 000c 0000     		.2byte	0
 786 000e 0000     		.2byte	0
 787 0010 00000000 		.4byte	.LFB64
 788 0014 18000000 		.4byte	.LFE64-.LFB64
 789 0018 00000000 		.4byte	.LFB65
 790 001c 3E000000 		.4byte	.LFE65-.LFB65
 791 0020 00000000 		.4byte	.LFB66
 792 0024 3E000000 		.4byte	.LFE66-.LFB66
 793 0028 00000000 		.4byte	.LFB67
 794 002c 40000000 		.4byte	.LFE67-.LFB67
 795 0030 00000000 		.4byte	.LFB68
 796 0034 18000000 		.4byte	.LFE68-.LFB68
 797 0038 00000000 		.4byte	.LFB69
 798 003c 18000000 		.4byte	.LFE69-.LFB69
 799 0040 00000000 		.4byte	.LFB70
 800 0044 18000000 		.4byte	.LFE70-.LFB70
 801 0048 00000000 		.4byte	.LFB71
 802 004c 18000000 		.4byte	.LFE71-.LFB71
 803 0050 00000000 		.4byte	.LFB72
 804 0054 18000000 		.4byte	.LFE72-.LFB72
 805 0058 00000000 		.4byte	0
 806 005c 00000000 		.4byte	0
 807              		.section	.debug_ranges,"",%progbits
 808              	.Ldebug_ranges0:
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\cct4Nw6o.s 			page 17


 809 0000 00000000 		.4byte	.LFB64
 810 0004 18000000 		.4byte	.LFE64
 811 0008 00000000 		.4byte	.LFB65
 812 000c 3E000000 		.4byte	.LFE65
 813 0010 00000000 		.4byte	.LFB66
 814 0014 3E000000 		.4byte	.LFE66
 815 0018 00000000 		.4byte	.LFB67
 816 001c 40000000 		.4byte	.LFE67
 817 0020 00000000 		.4byte	.LFB68
 818 0024 18000000 		.4byte	.LFE68
 819 0028 00000000 		.4byte	.LFB69
 820 002c 18000000 		.4byte	.LFE69
 821 0030 00000000 		.4byte	.LFB70
 822 0034 18000000 		.4byte	.LFE70
 823 0038 00000000 		.4byte	.LFB71
 824 003c 18000000 		.4byte	.LFE71
 825 0040 00000000 		.4byte	.LFB72
 826 0044 18000000 		.4byte	.LFE72
 827 0048 00000000 		.4byte	0
 828 004c 00000000 		.4byte	0
 829              		.section	.debug_line,"",%progbits
 830              	.Ldebug_line0:
 831 0000 0F020000 		.section	.debug_str,"MS",%progbits,1
 831      02005001 
 831      00000201 
 831      FB0E0D00 
 831      01010101 
 832              	.LASF21:
 833 0000 73746F70 		.ascii	"stopMoving\000"
 833      4D6F7669 
 833      6E6700
 834              	.LASF30:
 835 000b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 835      43313120 
 835      352E342E 
 835      31203230 
 835      31363036 
 836 003e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 836      20726576 
 836      6973696F 
 836      6E203233 
 836      37373135 
 837 0071 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 837      66756E63 
 837      74696F6E 
 837      2D736563 
 837      74696F6E 
 838              	.LASF9:
 839 0099 5F5F696E 		.ascii	"__int32_t\000"
 839      7433325F 
 839      7400
 840              	.LASF25:
 841 00a3 7475726E 		.ascii	"turnRight\000"
 841      52696768 
 841      7400
 842              	.LASF32:
 843 00ad 433A5C55 		.ascii	"C:\\Users\\rshu284\\OneDrive - The University of Au"
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\cct4Nw6o.s 			page 18


 843      73657273 
 843      5C727368 
 843      75323834 
 843      5C4F6E65 
 844 00dd 636B6C61 		.ascii	"ckland\\Documents\\GitHub\\301-Robot\\psoc student "
 844      6E645C44 
 844      6F63756D 
 844      656E7473 
 844      5C476974 
 845 010c 7061636B 		.ascii	"pack\\psoc_code_base\\CS301_Class.cydsn\000"
 845      5C70736F 
 845      635F636F 
 845      64655F62 
 845      6173655C 
 846              	.LASF12:
 847 0132 666C6F61 		.ascii	"float\000"
 847      7400
 848              	.LASF1:
 849 0138 756E7369 		.ascii	"unsigned char\000"
 849      676E6564 
 849      20636861 
 849      7200
 850              	.LASF5:
 851 0146 6C6F6E67 		.ascii	"long unsigned int\000"
 851      20756E73 
 851      69676E65 
 851      6420696E 
 851      7400
 852              	.LASF3:
 853 0158 73686F72 		.ascii	"short unsigned int\000"
 853      7420756E 
 853      7369676E 
 853      65642069 
 853      6E7400
 854              	.LASF20:
 855 016b 726F7461 		.ascii	"rotationAntiClockwise\000"
 855      74696F6E 
 855      416E7469 
 855      436C6F63 
 855      6B776973 
 856              	.LASF19:
 857 0181 71756164 		.ascii	"quadPulseCount\000"
 857      50756C73 
 857      65436F75 
 857      6E7400
 858              	.LASF22:
 859 0190 61646A75 		.ascii	"adjustRight\000"
 859      73745269 
 859      67687400 
 860              	.LASF13:
 861 019c 646F7562 		.ascii	"double\000"
 861      6C6500
 862              	.LASF23:
 863 01a3 61646A75 		.ascii	"adjustLeft\000"
 863      73744C65 
 863      667400
 864              	.LASF11:
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\cct4Nw6o.s 			page 19


 865 01ae 75696E74 		.ascii	"uint16\000"
 865      313600
 866              	.LASF31:
 867 01b5 6D6F7665 		.ascii	"movement.c\000"
 867      6D656E74 
 867      2E6300
 868              	.LASF27:
 869 01c0 49544D5F 		.ascii	"ITM_RxBuffer\000"
 869      52784275 
 869      66666572 
 869      00
 870              	.LASF8:
 871 01cd 756E7369 		.ascii	"unsigned int\000"
 871      676E6564 
 871      20696E74 
 871      00
 872              	.LASF28:
 873 01da 7475726E 		.ascii	"turnCount\000"
 873      436F756E 
 873      7400
 874              	.LASF7:
 875 01e4 6C6F6E67 		.ascii	"long long unsigned int\000"
 875      206C6F6E 
 875      6720756E 
 875      7369676E 
 875      65642069 
 876              	.LASF29:
 877 01fb 6D617854 		.ascii	"maxTurnCount\000"
 877      75726E43 
 877      6F756E74 
 877      00
 878              	.LASF24:
 879 0208 7475726E 		.ascii	"turnLeft\000"
 879      4C656674 
 879      00
 880              	.LASF10:
 881 0211 696E7433 		.ascii	"int32_t\000"
 881      325F7400 
 882              	.LASF16:
 883 0219 73697A65 		.ascii	"sizetype\000"
 883      74797065 
 883      00
 884              	.LASF6:
 885 0222 6C6F6E67 		.ascii	"long long int\000"
 885      206C6F6E 
 885      6720696E 
 885      7400
 886              	.LASF14:
 887 0230 63686172 		.ascii	"char\000"
 887      00
 888              	.LASF26:
 889 0235 6D6F7665 		.ascii	"moveForward\000"
 889      466F7277 
 889      61726400 
 890              	.LASF18:
 891 0241 726F7461 		.ascii	"rotationClockwise\000"
 891      74696F6E 
ARM GAS  C:\Users\rshu284\AppData\Local\Temp\cct4Nw6o.s 			page 20


 891      436C6F63 
 891      6B776973 
 891      6500
 892              	.LASF2:
 893 0253 73686F72 		.ascii	"short int\000"
 893      7420696E 
 893      7400
 894              	.LASF4:
 895 025d 6C6F6E67 		.ascii	"long int\000"
 895      20696E74 
 895      00
 896              	.LASF15:
 897 0266 6C6F6E67 		.ascii	"long double\000"
 897      20646F75 
 897      626C6500 
 898              	.LASF0:
 899 0272 7369676E 		.ascii	"signed char\000"
 899      65642063 
 899      68617200 
 900              	.LASF17:
 901 027e 6D6F7665 		.ascii	"moveForwardForSpecifiedCount\000"
 901      466F7277 
 901      61726446 
 901      6F725370 
 901      65636966 
 902              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
